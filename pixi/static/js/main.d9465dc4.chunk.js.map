{"version":3,"sources":["utils/LongTake.js","components/LoadingComponent.js","App.js","reportWebVitals.js","index.js"],"names":["LongTake","options","destroy","aniIntervals","forEach","interval","clearInterval","app","load","loader","PIXI","add","resource","sprites","loadDone","onStart","onError","onLoad","onProgress","value","loadProgress","onComplete","trigger","progress","initBg","initTexts","initSprites","initTimeline","initTouch","on","name","callback","callbacks","push","off","Array","index","indexOf","splice","params","cb","bg","bgHeight","bgSprites","key","TextureCache","scale","screen","width","x","y","height","addChild","stage","scrollHeight","texts","Object","keys","text","setAnchor","anchor","setPosition","position","link","interactive","e","window","location","href","sprite","setSize","size","obj","mode","anchorMap","positionMap","type","top","right","bottom","left","topLeft","topRight","bottomLeft","bottomRight","center","timeline","gsap","paused","spritesAnimations","setAnimation","textsAnimations","bgAction","fromTo","bgTimeline","animations","from","to","frames","infinite","frameRate","delay","duration","currentFrame","setInterval","length","frame","texture","frameProgress","Math","floor","action","play","repeat","touchOptions","assign","touch","min","max","change","touchmove","alloyTouch","AlloyTouch","seek","this","lib","container","document","body","innerWidth","innerHeight","autoLoad","resolution","transparent","appendChild","view","LoadingComponent","className","round","Acceleration","App","getReSource","url","getBgSprites","getSpritesAnimations","fixedPosA","posY","house","alpha","house_light","tree","tree_light","useState","setProgress","useEffect","longTake","getElementById","initialValue","sensitivity","maxSpeed","first","fontFamily","fontSize","fill","align","two","ease","init","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iSAkWeA,EA1Vb,WAAYC,GAAU,IAAD,gCAoCrBC,QAAU,WACR,EAAKC,aAAaC,SAAQ,SAACC,GACzBC,cAAcD,MAEhB,EAAKE,IAAIL,SAAQ,IAxCE,KA8CrBM,KAAO,WACL,IAAIC,EAAS,IAAIC,SACjBD,EAAOE,IAAI,EAAKC,SAASC,SAASL,MAAK,WACrC,EAAKM,cAGPL,EAAOM,QAAQJ,KAAI,eACnBF,EAAOO,QAAQL,KAAI,eACnBF,EAAOQ,OAAON,KAAI,eAClBF,EAAOS,WAAWP,KAAI,SAACQ,GACrB,EAAKC,aAAaD,MAEpBV,EAAOY,WAAWV,KAAI,gBA1DH,KA6DrBS,aAAe,SAACX,GACd,EAAKa,QAAQ,eAAgBb,EAAOc,WA9DjB,KAiErBT,SAAW,WACT,EAAKU,SACL,EAAKC,YACL,EAAKC,cACL,EAAKC,eACL,EAAKC,YACL,EAAKN,QAAQ,aAvEM,KA6ErBO,GAAK,SAACC,EAAMC,GACV,EAAKC,UAAUF,GAAQ,EAAKE,UAAUF,IAAS,GAC/C,EAAKE,UAAUF,GAAMG,KAAKF,IA/EP,KAkFrBG,IAAM,SAACJ,EAAMC,GACX,IAAMC,EAAY,EAAKA,UAAUF,GACjC,GAAIE,GAAaA,aAAqBG,MAAO,CAC3C,IAAMC,EAAQJ,EAAUK,QAAQN,IACjB,IAAXK,GAAcJ,EAAUM,OAAOF,EAAO,KAtFzB,KA0FrBd,QAAU,SAACQ,EAAMS,GACf,IAAMP,EAAY,EAAKA,UAAUF,GAC7BE,GAAaA,aAAqBG,OACpCH,EAAU5B,SAAQ,SAACoC,GACjBA,EAAGD,OA9FY,KAsGrBf,OAAS,WAEP,EAAKiB,GAAK,IAAI/B,YAEd,IAAIgC,EAAW,EACf,EAAKzC,QAAQ0C,UAAUvC,SAAQ,SAACwC,GAC9B,IAAMH,EAAK,IAAI/B,SAAYA,QAAWmC,aAAaD,IAC7CE,EAAQ,EAAKvC,IAAIwC,OAAOC,MAAQP,EAAGO,MACzCP,EAAGK,MAAMG,EAAIH,EACbL,EAAGK,MAAMI,EAAIJ,EACbL,EAAGQ,EAAI,EACPR,EAAGS,EAAIR,EACPA,GAAYD,EAAGU,OACf,EAAKV,GAAGW,SAASX,MAGnB,EAAKlC,IAAI8C,MAAMD,SAAS,EAAKX,IAE7B,EAAKa,aAAe,EAAKb,GAAGU,OAAS,EAAKA,QAxHvB,KA2IrB1B,UAAY,WACwB,kBAAvB,EAAKxB,QAAQsD,OACtBC,OAAOC,KAAK,EAAKxD,QAAQsD,OAAOnD,SAAQ,SAACwC,GAEvC,IAAM3C,EAAU,EAAKA,QAAQsD,MAAMX,GAC7Bc,EAAO,IAAIhD,OAAUT,EAAQyD,KAAMzD,EAAQA,SAEjD,EAAK0D,UAAUD,EAAMzD,EAAQ2D,QAC7B,EAAKC,YAAYH,EAAMzD,EAAQ6D,UAE3B7D,EAAQ8D,OACVL,EAAKM,aAAc,EACnBN,EAAK7B,GAAG,OAAO,SAACoC,GACdC,OAAOC,SAASC,KAAOnE,EAAQ8D,SAInC,EAAKxD,IAAI8C,MAAMD,SAASM,GACxB,EAAKH,MAAMX,GAAOc,MA7JH,KAqKrBhC,YAAc,WACwB,kBAAzB,EAAKzB,QAAQY,SACtB2C,OAAOC,KAAK,EAAKxD,QAAQY,SAAST,SAAQ,SAACwC,GAEzC,IAAM3C,EAAU,EAAKA,QAAQY,QAAQ+B,GAC/ByB,EAAS,IAAI3D,SAAYA,QAAWmC,aAAa5C,EAAQ2C,MAE/D,EAAK0B,QAAQD,EAAQpE,EAAQsE,MAC7B,EAAKZ,UAAUU,EAAQpE,EAAQ2D,QAC/B,EAAKC,YAAYQ,EAAQpE,EAAQ6D,UAEjC,EAAKvD,IAAI8C,MAAMD,SAASiB,GACxB,EAAKxD,QAAQ+B,GAAOyB,MAjLL,KA0LrBC,QAAU,SAACE,EAAKD,GACd,GAAkB,aAAdA,EAAKE,KAAqB,CAE5B,IAAM3B,EAAS,EAAKvC,IAAIwC,OAAOC,MAAQuB,EAAKvB,MAASwB,EAAIxB,MACzDwB,EAAI1B,MAAMG,EAAIH,EACd0B,EAAI1B,MAAMI,EAAIJ,OACT,GAAkB,cAAdyB,EAAKE,KAAsB,CAEpC,IAAM3B,EAAS,EAAKvC,IAAIwC,OAAOI,OAASoB,EAAKpB,OAAUqB,EAAIrB,OAC3DqB,EAAI1B,MAAMG,EAAIH,EACd0B,EAAI1B,MAAMI,EAAIJ,OAGd0B,EAAIxB,MAAQuB,EAAKvB,MACjBwB,EAAIrB,OAASoB,EAAKpB,QAxMD,KA6MrBQ,UAAY,SAACa,EAAKZ,GAChB,GAAsB,kBAAXA,EAAqB,CAC9B,IAAMc,EAAY,EAAKC,YAAYf,GACnCY,EAAIZ,OAAOX,EAAIyB,EAAUzB,EACzBuB,EAAIZ,OAAOV,EAAIwB,EAAUxB,OAEzBsB,EAAIZ,OAAOX,EAAIW,EAAOX,EACtBuB,EAAIZ,OAAOV,EAAIU,EAAOV,GApNL,KAyNrBW,YAAc,SAACW,EAAKV,GACM,kBAAbA,IACTA,EAAW,EAAKa,YAAYb,IAE9BU,EAAIV,SAASb,EAAIa,EAASb,EAAI,EAAK1C,IAAIwC,OAAOC,MAC9CwB,EAAIV,SAASZ,EAAIY,EAASZ,EAAI,EAAK3C,IAAIwC,OAAOI,QA9N3B,KAkOrBwB,YAAc,SAACC,GAYb,MAXY,CACVC,IAAK,CAAE5B,EAAG,GAAKC,EAAG,GAClB4B,MAAO,CAAE7B,EAAG,EAAGC,EAAG,IAClB6B,OAAQ,CAAE9B,EAAG,GAAKC,EAAG,GACrB8B,KAAM,CAAE/B,EAAG,EAAGC,EAAG,IACjB+B,QAAS,CAAEhC,EAAG,EAAGC,EAAG,GACpBgC,SAAU,CAAEjC,EAAG,EAAGC,EAAG,GACrBiC,WAAY,CAAElC,EAAG,EAAGC,EAAG,GACvBkC,YAAa,CAAEnC,EAAG,EAAGC,EAAG,GACxBmC,OAAQ,CAAEpC,EAAG,GAAKC,EAAG,KAEZ0B,IAAS,CAAE3B,EAAG,EAAGC,EAAG,IA9OZ,KAoPrBvB,aAAe,WACb,EAAK2D,SAAW,IAAIC,IAAKD,SAAS,CAChCE,QAAQ,IAIVhC,OAAOC,KAAK,EAAKgC,mBAAmBrF,SAAQ,SAACwC,GAC3C,EAAK8C,aAAa,EAAK7E,QAAQ+B,GAAM,EAAK6C,kBAAkB7C,OAI9DY,OAAOC,KAAK,EAAKkC,iBAAiBvF,SAAQ,SAACwC,GACzC,EAAK8C,aAAa,EAAKnC,MAAMX,GAAM,EAAK+C,gBAAgB/C,OAI1D,IAAMgD,EAAWL,IAAKM,OAAO,EAAKpD,GAAI,EAAG,CAAES,EAAG,GAAK,CAAEA,GAAI,EAAKI,eACxDwC,EAAa,IAAIP,IAAKD,SAC5BQ,EAAWnF,IAAIiF,EAAU,GACzB,EAAKN,SAAS3E,IAAImF,EAAY,IAvQX,KA2QrBJ,aAAe,SAAClB,EAAKuB,GACfvB,GAAOuB,GAAcA,aAAsB5D,OAC7C4D,EAAW3F,SAAQ,YAAyE,IAAtE4F,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,GAAIC,EAA2D,EAA3DA,OAAQC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAyC,IAA9BC,aAA8B,MAAtB,EAAsB,MAAnBC,gBAAmB,MAAR,EAAQ,EACzF,GAAIJ,EAEEC,GAEF3B,EAAI0B,OAASA,EACb1B,EAAI+B,aAAe,EACnB,EAAKpG,aAAa8B,KAChBuE,aAAY,WACVhC,EAAI+B,cAAgB,EAChB/B,EAAI+B,cAAgB/B,EAAI0B,OAAOO,SAAQjC,EAAI+B,aAAe,GAC9D,IAAMG,EAAQlC,EAAI0B,OAAO1B,EAAI+B,cAC7B/B,EAAImC,QAAUjG,QAAWmC,aAAa6D,KACzB,IAAXJ,EAAmBF,KAGzB,EAAKvE,GAAG,YAAY,SAACN,GACnB,IAAMqF,GAAiBrF,EAAW8E,GAASC,EACvClE,EAAQyE,KAAKC,MAAMF,EAAgBV,EAAOO,QAC9C,GAAIrE,EAAQ8D,EAAOO,QAAUrE,GAAS,EAAG,CACvC,IAAMsE,EAAQR,EAAO9D,GACrBoC,EAAImC,QAAUjG,QAAWmC,aAAa6D,YAIvC,GAAIV,GAAQC,EAAI,CAErB,IAAIc,EACAf,GAAQC,EACVc,EAASxB,IAAKM,OAAOrB,EAAK8B,EAAUN,EAAMC,GACjCA,EACTc,EAASxB,IAAKU,GAAGzB,EAAK8B,EAAUL,GACvBD,IACTe,EAASxB,IAAKS,KAAKxB,EAAK8B,EAAUN,IAEpC,IAAMV,EAAW,IAAIC,IAAKD,SAAS,CAAEe,UACrCf,EAAS3E,IAAIoG,EAAQ,GACrBzB,EAAS0B,OACHf,IAAqB,IAAfA,EAAGgB,QACb,EAAK3B,SAAS3E,IAAI2E,EAAU,QApTjB,KA8TrB1D,UAAY,WACV,IAAMsF,EAAe1D,OAAO2D,OAC1B,CACEC,MAAO,QAET,EAAKnH,QAAQiH,aACb,CACEG,KAAM,EAAK5E,GAAGU,OAAS,EAAKA,OAC5BmE,IAAK,EACLnG,MAAO,EACPoG,OAAQ,EAAKC,YAGjB,EAAKC,WAAa,IAAIC,IAAWR,IA3Ud,KA8UrBM,UAAY,SAACrG,GAEX,EAAKI,UAAYJ,EAAQ,EAAKmC,aAC9B,EAAK/B,SAAW,EAAKA,SAAW,EAAI,EAAI,EAAKA,SAC7C,EAAKA,SAAW,EAAKA,SAAW,EAAI,EAAI,EAAKA,SAE7C,EAAK+D,SAASqC,KAAK,EAAKpG,UAExB,EAAKD,QAAQ,WAAY,EAAKC,WApV9BqG,KAAKC,IAAM,CAAEnH,OAAM6E,SAAMmC,gBAEzBE,KAAK5F,UAAY,CACfZ,aAAc,IAGhBwG,KAAK3H,QAAUA,EACf2H,KAAKE,UAAY7H,EAAQ6H,WAAaC,SAASC,KAC/CJ,KAAK5E,MAAQ/C,EAAQ+C,OAASkB,OAAO+D,WACrCL,KAAKzE,OAASlD,EAAQkD,QAAUe,OAAOgE,YACvCN,KAAKtE,aAAerD,EAAQqD,cAAgB,EAC5CsE,KAAKhH,SAAWX,EAAQW,UAAY,CAAEC,QAAS,IAC/C+G,KAAKnC,kBAAoBmC,KAAK3H,QAAQwF,mBAAqB,GAC3DmC,KAAKjC,gBAAkBiC,KAAK3H,QAAQ0F,iBAAmB,GACvDiC,KAAKO,SAAuC,qBAArBlI,EAAQkI,UAAkClI,EAAQkI,SAEzEP,KAAK/G,QAAU,GAEf+G,KAAKrE,MAAQ,GAEbqE,KAAKzH,aAAe,GAEpByH,KAAKrH,IAAM,IAAIG,cAAiB,CAC9B0H,WAAY,EACZC,aAAa,EACbrF,MAAO4E,KAAK5E,MACZG,OAAQyE,KAAKzE,SAGfyE,KAAKE,UAAUQ,YAAYV,KAAKrH,IAAIgI,MAEhCX,KAAKO,UAAUP,KAAKpH,Q,qBCnCbgI,EAJU,SAAC,GAAkB,IAAhBjH,EAAe,EAAfA,SAC1B,OAAO,qBAAKkH,UAAU,YAAf,SAA4B5B,KAAK6B,OAAOnH,MCE3CoH,EAAoC,KAArBzE,OAAOgE,YAwQbU,EAtQH,WAIV,IAAMC,EAAc,WAClB,IAAMjI,EAAW,CACfC,QAAS,IA6BX,OA3BAD,EAASC,QAAQoB,KACf,CACEH,KAAM,KACNgH,IAAK,UAEP,CACEhH,KAAM,OACNgH,IAAK,YAEP,CACEhH,KAAM,QACNgH,IAAK,aAEP,CACEhH,KAAM,cACNgH,IAAK,mBAEP,CACEhH,KAAM,OACNgH,IAAK,YAEP,CACEhH,KAAM,aACNgH,IAAK,mBAIFlI,GAMHmI,EAAe,WACnB,IAAMpG,EAAY,GAElB,OADAA,EAAUV,KAAK,SAAU,YAClBU,GAoDHqG,EAAuB,WAC3B,IAIMC,EAAY,SAACC,GACjB,MAAO,CACL7C,MAAO,EACPC,SAAU,EACVN,KAAM,CAAE9C,EAAGyF,EAAeO,GAC1BjD,GAAI,CAAE/C,GAAIgG,KAkDd,MA9CmB,CACjBC,MAAO,CACL,CACE9C,MAAO,IACPC,SAAU,GACVN,KAAM,CAAEoD,MAAO,GACfnD,GAAI,CAAEmD,MAAO,IALV,eAQAH,EAtBS,QAyBhBI,YAAa,CACX,CACEhD,MAAO,IACPC,SAAU,GACVN,KAAM,CAAEoD,MAAO,GACfnD,GAAI,CAAEmD,MAAO,IALJ,eAQNH,EAjCS,QAoChBK,KAAM,CACJ,CACEjD,MAAO,GACPC,SAAU,GACVN,KAAM,CAAEoD,MAAO,GACfnD,GAAI,CAAEmD,MAAO,IALX,eAQCH,GA1CQ,OA6CfM,WAAY,CACV,CACElD,MAAO,GACPC,SAAU,GACVN,KAAM,CAAEoD,MAAO,GACfnD,GAAI,CAAEmD,MAAO,IALL,eAQLH,GArDQ,SA+HnB,EAAgCO,mBAAS,GAAzC,mBAAOjI,EAAP,KAAiBkI,EAAjB,KAiCA,OA/BAC,qBAAU,YACK,WACX,IAAMC,EAAW,IAAI3J,EAAS,CAC5B8H,UAAWC,SAAS6B,eAAe,QACnChJ,SAAUiI,IACV3B,aAAc,CACZE,MAAO,QACPyC,aAAc,EACdC,YAAa,GACbC,SAAU,IAEZlJ,QA5LY,CACdsI,MAAO,CACLvG,IAAK,QACL2B,KAAM,CAAEvB,MAAO,IAAKG,OAAQ,KAC5BW,SAAU,CACRb,EAAG,GACHC,EAAG,IAELU,OAAQ,UAEVyF,YAAa,CACXzG,IAAK,cACL2B,KAAM,CAAEvB,MAAO,IAAKG,OAAQ,KAC5BW,SAAU,CACRb,EAAG,GACHC,EAAG,IAELU,OAAQ,UAEV0F,KAAM,CACJ1G,IAAK,OACL2B,KAAM,CAAEvB,MAAO,IAAKG,OAAQ,KAC5BW,SAAU,CACRb,EAAG,GACHC,EAAG,IAELU,OAAQ,UAEV2F,WAAY,CACV3G,IAAK,aACL2B,KAAM,CAAEvB,MAAO,IAAKG,OAAQ,KAC5BW,SAAU,CACRb,EAAG,GACHC,EAAG,IAELU,OAAQ,WA0JR6B,kBAAmBuD,IACnBzF,MA9EU,CACZyG,MAAO,CACLtG,KAAM,oBACNI,SAAU,CAAEb,EAAG,GAAKC,EAAG,IACvBU,OAAQ,SACR3D,QAAS,CACPgK,WAAY,QACZC,SAAWhG,OAAO+D,WAAa,IAAO,GACtCkC,KAAM,SACNC,MAAO,WAGXC,IAAK,CACH3G,KAAM,kBACNK,KAAM,wBACND,SAAU,CACRb,EAAG,GACHC,EAAG,IAELU,OAAQ,SACR3D,QAAS,CACPgK,WAAY,QACZC,SAAWhG,OAAO+D,WAAa,IAAO,GACtCkC,KAAM,OACNC,MAAO,YAuDTzE,gBA3Ce,CACjBqE,MAAO,CACL,CACE3D,MAAO,EACPC,SAAU,EACVN,KAAM,CAAE9C,EAAwB,GAArBgB,OAAOgE,aAClBjC,GAAI,CAAEgB,QAAS,EAAGqD,KAAM,UAAWpH,EAAwB,IAArBgB,OAAOgE,cAE/C,CACE7B,MAAO,EACPC,SAAU,GACVL,GAAI,CAAEmD,MAAO,KAGjBiB,IAAK,CACH,CACEhE,MAAO,EACPC,SAAU,GACVN,KAAM,CAAE9C,EAAG,IAAKkG,MAAO,GACvBnD,GAAI,CAAE/C,EAAG,EAAGkG,MAAO,MAyBrBzG,UAAWoG,MAEbY,EAAS9H,GAAG,gBAAgB,SAACN,GAE3BkI,EAAYlI,MAEdoI,EAAS9H,GAAG,YAAY,eAGxB8H,EAAS9H,GAAG,YAAY,SAACN,OAI3BgJ,KACC,IAEI,qBAAKC,GAAG,OAAR,SAA6B,MAAbjJ,GAAoB,cAAC,EAAD,CAAkBA,SAAUA,OC9P1DkJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrD,SAAS6B,eAAe,SAM1Ba,M","file":"static/js/main.d9465dc4.chunk.js","sourcesContent":["import * as PIXI from 'pixi.js'\r\nimport gsap from 'gsap'\r\nimport AlloyTouch from 'phy-touch'\r\n\r\nclass LongTake {\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 初始化\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  constructor(options) {\r\n    // 库\r\n    this.lib = { PIXI, gsap, AlloyTouch }\r\n    // 事件监听\r\n    this.callbacks = {\r\n      loadProgress: [],\r\n    }\r\n    // 参数\r\n    this.options = options\r\n    this.container = options.container || document.body // 场景容器\r\n    this.width = options.width || window.innerWidth // 场景宽\r\n    this.height = options.height || window.innerHeight // 场景高\r\n    this.scrollHeight = options.scrollHeight || 0\r\n    this.resource = options.resource || { sprites: [] } // 要加载的资源\r\n    this.spritesAnimations = this.options.spritesAnimations || {} // 精灵动画集合\r\n    this.textsAnimations = this.options.textsAnimations || {} // 文本动画集合\r\n    this.autoLoad = typeof options.autoLoad === 'undefined' ? true : options.autoLoad // 自动加载\r\n    // 精灵图集合\r\n    this.sprites = {}\r\n    // 文本集合\r\n    this.texts = {}\r\n    // 动画定时器\r\n    this.aniIntervals = []\r\n    // 创建场景\r\n    this.app = new PIXI.Application({\r\n      resolution: 2,\r\n      transparent: true,\r\n      width: this.width,\r\n      height: this.height,\r\n    })\r\n    // 加入场景\r\n    this.container.appendChild(this.app.view)\r\n    // 开始加载\r\n    if (this.autoLoad) this.load()\r\n  }\r\n\r\n  destroy = () => {\r\n    this.aniIntervals.forEach((interval) => {\r\n      clearInterval(interval)\r\n    })\r\n    this.app.destroy(true)\r\n  }\r\n\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 加载\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  load = () => {\r\n    let loader = new PIXI.Loader()\r\n    loader.add(this.resource.sprites).load(() => {\r\n      this.loadDone()\r\n    })\r\n\r\n    loader.onStart.add(() => {}) // Called when a resource starts loading.\r\n    loader.onError.add(() => {}) // Called when a resource fails to load.\r\n    loader.onLoad.add(() => {}) // Called when a resource successfully loads.\r\n    loader.onProgress.add((value) => {\r\n      this.loadProgress(value)\r\n    }) // Called when a resource finishes loading (success or fail).\r\n    loader.onComplete.add(() => {})\r\n  }\r\n\r\n  loadProgress = (loader) => {\r\n    this.trigger('loadProgress', loader.progress)\r\n  }\r\n\r\n  loadDone = () => {\r\n    this.initBg()\r\n    this.initTexts()\r\n    this.initSprites()\r\n    this.initTimeline()\r\n    this.initTouch()\r\n    this.trigger('loadDone')\r\n  }\r\n\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 事件\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  on = (name, callback) => {\r\n    this.callbacks[name] = this.callbacks[name] || []\r\n    this.callbacks[name].push(callback)\r\n  }\r\n\r\n  off = (name, callback) => {\r\n    const callbacks = this.callbacks[name]\r\n    if (callbacks && callbacks instanceof Array) {\r\n      const index = callbacks.indexOf(callback)\r\n      if (index !== -1) callbacks.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  trigger = (name, params) => {\r\n    const callbacks = this.callbacks[name]\r\n    if (callbacks && callbacks instanceof Array) {\r\n      callbacks.forEach((cb) => {\r\n        cb(params)\r\n      })\r\n    }\r\n  }\r\n\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 背景相关\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  initBg = () => {\r\n    // 创建背景\r\n    this.bg = new PIXI.Container()\r\n    // 拼接背景\r\n    let bgHeight = 0\r\n    this.options.bgSprites.forEach((key) => {\r\n      const bg = new PIXI.Sprite(PIXI.utils.TextureCache[key])\r\n      const scale = this.app.screen.width / bg.width\r\n      bg.scale.x = scale\r\n      bg.scale.y = scale\r\n      bg.x = 0\r\n      bg.y = bgHeight\r\n      bgHeight += bg.height\r\n      this.bg.addChild(bg)\r\n    })\r\n    // 加入场景\r\n    this.app.stage.addChild(this.bg)\r\n    // 设置滚动高度\r\n    this.scrollHeight = this.bg.height - this.height\r\n  }\r\n\r\n//   initBg = () => {\r\n//     // 创建背景\r\n//     this.bg = new PIXI.Graphics()\r\n//     this.bg.beginFill(0xfdfbe2)\r\n//     this.bg.drawRect(0, 0, this.app.screen.width, this.app.screen.height * 3)\r\n//     this.bg.endFill()\r\n//     this.bg.x = 0\r\n//     this.bg.y = 0\r\n//     this.app.stage.addChild(this.bg)\r\n//     // 设置滚动高度\r\n//     this.scrollHeight = this.bg.height - this.height\r\n//   }\r\n\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 文字相关\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  initTexts = () => {\r\n    if (typeof this.options.texts === 'object') {\r\n      Object.keys(this.options.texts).forEach((key) => {\r\n        // 创建\r\n        const options = this.options.texts[key]\r\n        const text = new PIXI.Text(options.text, options.options)\r\n        // 设置属性\r\n        this.setAnchor(text, options.anchor)\r\n        this.setPosition(text, options.position)\r\n        // 设置点击事件\r\n        if (options.link) {\r\n          text.interactive = true\r\n          text.on('tap', (e) => {\r\n            window.location.href = options.link\r\n          })\r\n        }\r\n        // 加入场景\r\n        this.app.stage.addChild(text)\r\n        this.texts[key] = text\r\n      })\r\n    }\r\n  }\r\n\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 精灵相关\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  initSprites = () => {\r\n    if (typeof this.options.sprites === 'object') {\r\n      Object.keys(this.options.sprites).forEach((key) => {\r\n        // 创建\r\n        const options = this.options.sprites[key]\r\n        const sprite = new PIXI.Sprite(PIXI.utils.TextureCache[options.key])\r\n        // 设置属性\r\n        this.setSize(sprite, options.size)\r\n        this.setAnchor(sprite, options.anchor)\r\n        this.setPosition(sprite, options.position)\r\n        // 加入场景\r\n        this.app.stage.addChild(sprite)\r\n        this.sprites[key] = sprite\r\n      })\r\n    }\r\n  }\r\n\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 通用属性设置\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 设置尺寸\r\n  setSize = (obj, size) => {\r\n    if (size.mode === 'widthFit') {\r\n      // 按宽度适应\r\n      const scale = (this.app.screen.width * size.width) / obj.width\r\n      obj.scale.x = scale\r\n      obj.scale.y = scale\r\n    } else if (size.mode === 'heightFit') {\r\n      // 按高度适应\r\n      const scale = (this.app.screen.height * size.height) / obj.height\r\n      obj.scale.x = scale\r\n      obj.scale.y = scale\r\n    } else {\r\n      // 自定义\r\n      obj.width = size.width\r\n      obj.height = size.height\r\n    }\r\n  }\r\n\r\n  // 设置锚点\r\n  setAnchor = (obj, anchor) => {\r\n    if (typeof anchor === 'string') {\r\n      const anchorMap = this.positionMap(anchor)\r\n      obj.anchor.x = anchorMap.x\r\n      obj.anchor.y = anchorMap.y\r\n    } else {\r\n      obj.anchor.x = anchor.x\r\n      obj.anchor.y = anchor.y\r\n    }\r\n  }\r\n\r\n  // 设置位置\r\n  setPosition = (obj, position) => {\r\n    if (typeof position === 'string') {\r\n      position = this.positionMap(position)\r\n    }\r\n    obj.position.x = position.x * this.app.screen.width\r\n    obj.position.y = position.y * this.app.screen.height\r\n  }\r\n\r\n  // 位置转换\r\n  positionMap = (type) => {\r\n    const map = {\r\n      top: { x: 0.5, y: 0 },\r\n      right: { x: 1, y: 0.5 },\r\n      bottom: { x: 0.5, y: 1 },\r\n      left: { x: 0, y: 0.5 },\r\n      topLeft: { x: 0, y: 0 },\r\n      topRight: { x: 1, y: 0 },\r\n      bottomLeft: { x: 0, y: 1 },\r\n      bottomRight: { x: 1, y: 1 },\r\n      center: { x: 0.5, y: 0.5 },\r\n    }\r\n    return map[type] || { x: 0, y: 0 }\r\n  }\r\n\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 进度相关\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  initTimeline = () => {\r\n    this.timeline = new gsap.timeline({\r\n      paused: true,\r\n    })\r\n\r\n    // 设置精灵动画\r\n    Object.keys(this.spritesAnimations).forEach((key) => {\r\n      this.setAnimation(this.sprites[key], this.spritesAnimations[key])\r\n    })\r\n\r\n    // 设置文本动画\r\n    Object.keys(this.textsAnimations).forEach((key) => {\r\n      this.setAnimation(this.texts[key], this.textsAnimations[key])\r\n    })\r\n\r\n    // 背景动画\r\n    const bgAction = gsap.fromTo(this.bg, 1, { y: 0 }, { y: -this.scrollHeight })\r\n    const bgTimeline = new gsap.timeline()\r\n    bgTimeline.add(bgAction, 0)\r\n    this.timeline.add(bgTimeline, 0)\r\n  }\r\n\r\n  // 动画对象\r\n  setAnimation = (obj, animations) => {\r\n    if (obj && animations && animations instanceof Array) {\r\n      animations.forEach(({ from, to, frames, infinite, frameRate, delay = 0, duration = 1 }) => {\r\n        if (frames) {\r\n          // 帧动画\r\n          if (infinite) {\r\n            // 无限\r\n            obj.frames = frames\r\n            obj.currentFrame = 0\r\n            this.aniIntervals.push(\r\n              setInterval(() => {\r\n                obj.currentFrame += 1\r\n                if (obj.currentFrame >= obj.frames.length) obj.currentFrame = 0\r\n                const frame = obj.frames[obj.currentFrame]\r\n                obj.texture = PIXI.utils.TextureCache[frame]\r\n              }, (duration * 1000) / frameRate)\r\n            )\r\n          } else {\r\n            this.on('progress', (progress) => {\r\n              const frameProgress = (progress - delay) / duration\r\n              let index = Math.floor(frameProgress * frames.length)\r\n              if (index < frames.length && index >= 0) {\r\n                const frame = frames[index]\r\n                obj.texture = PIXI.utils.TextureCache[frame]\r\n              }\r\n            })\r\n          }\r\n        } else if (from || to) {\r\n          // 过渡动画\r\n          let action\r\n          if (from && to) {\r\n            action = gsap.fromTo(obj, duration, from, to)\r\n          } else if (to) {\r\n            action = gsap.to(obj, duration, to)\r\n          } else if (from) {\r\n            action = gsap.from(obj, duration, from)\r\n          }\r\n          const timeline = new gsap.timeline({ delay })\r\n          timeline.add(action, 0)\r\n          timeline.play()\r\n          if (!(to && to.repeat === -1)) {\r\n            this.timeline.add(timeline, 0)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  // 滑动相关\r\n  // ────────────────────────────────────────────────────────────────────────────────\r\n  initTouch = () => {\r\n    const touchOptions = Object.assign(\r\n      {\r\n        touch: 'body',\r\n      },\r\n      this.options.touchOptions,\r\n      {\r\n        min: -this.bg.height + this.height,\r\n        max: 0,\r\n        value: 0,\r\n        change: this.touchmove,\r\n      }\r\n    )\r\n    this.alloyTouch = new AlloyTouch(touchOptions)\r\n  }\r\n\r\n  touchmove = (value) => {\r\n    // 总播放进度\r\n    this.progress = -value / this.scrollHeight\r\n    this.progress = this.progress < 0 ? 0 : this.progress\r\n    this.progress = this.progress > 1 ? 1 : this.progress\r\n    // 控制进度条\r\n    this.timeline.seek(this.progress)\r\n    // 触发事件\r\n    this.trigger('progress', this.progress)\r\n  }\r\n}\r\n\r\nexport default LongTake\r\n","import './style.css'\r\n\r\nconst LoadingComponent = ({ progress }) => {\r\n  return <div className='container'>{Math.round(+progress)}</div>\r\n}\r\n\r\nexport default LoadingComponent\r\n","import { useEffect, useState } from 'react/cjs/react.development'\r\nimport LongTake from './utils/LongTake'\r\nimport './App.css'\r\nimport LoadingComponent from './components/LoadingComponent'\r\n\r\nconst Acceleration = window.innerHeight * 2.38; // 加速度\r\n\r\nconst App = () => {\r\n  /**\r\n   * 加载资源\r\n   */\r\n  const getReSource = () => {\r\n    const resource = {\r\n      sprites: [],\r\n    }\r\n    resource.sprites.push(\r\n      {\r\n        name: 'bg',\r\n        url: 'bg.png',\r\n      },\r\n      {\r\n        name: 'bg_1',\r\n        url: 'bg_1.png',\r\n      },\r\n      {\r\n        name: 'house',\r\n        url: 'house.png',\r\n      },\r\n      {\r\n        name: 'house_light',\r\n        url: 'house_light.png',\r\n      },\r\n      {\r\n        name: 'tree',\r\n        url: 'tree.png',\r\n      },\r\n      {\r\n        name: 'tree_light',\r\n        url: 'tree_light.png',\r\n      }\r\n    )\r\n\r\n    return resource\r\n  }\r\n\r\n  /**\r\n   * 加载背景\r\n   */\r\n  const getBgSprites = () => {\r\n    const bgSprites = []\r\n    bgSprites.push('bg.png', 'bg_1.png')\r\n    return bgSprites\r\n  }\r\n\r\n  /**\r\n   * 加载精灵\r\n   */\r\n  const getSprites = () => {\r\n    const sprites = {\r\n      house: {\r\n        key: 'house',\r\n        size: { width: 100, height: 100 },\r\n        position: {\r\n          x: 0.6,\r\n          y: 0.5,\r\n        },\r\n        anchor: 'center',\r\n      },\r\n      house_light: {\r\n        key: 'house_light',\r\n        size: { width: 100, height: 100 },\r\n        position: {\r\n          x: 0.6,\r\n          y: 0.5,\r\n        },\r\n        anchor: 'center',\r\n      },\r\n      tree: {\r\n        key: 'tree',\r\n        size: { width: 100, height: 100 },\r\n        position: {\r\n          x: 0.5,\r\n          y: 0.5,\r\n        },\r\n        anchor: 'center',\r\n      },\r\n      tree_light: {\r\n        key: 'tree_light',\r\n        size: { width: 100, height: 100 },\r\n        position: {\r\n          x: 0.5,\r\n          y: 0.5,\r\n        },\r\n        anchor: 'center',\r\n      },\r\n    }\r\n\r\n    return sprites\r\n  }\r\n\r\n  /**\r\n   * 精灵动画\r\n   */\r\n  const getSpritesAnimations = () => {\r\n    const housePosY = 1080 // hourse在场景中y的位置\r\n\r\n    const treePosY = -300 // tree在场景中y的位置\r\n\r\n    const fixedPosA = (posY) => {\r\n      return {\r\n        delay: 0,\r\n        duration: 1,\r\n        from: { y: Acceleration - posY },\r\n        to: { y: -posY },\r\n      }\r\n    }\r\n\r\n    const animations = {\r\n      house: [\r\n        {\r\n          delay: 0.020,\r\n          duration: 0.2,\r\n          from: { alpha: 1 },\r\n          to: { alpha: 0 },\r\n        },\r\n        {\r\n          ...fixedPosA(housePosY),\r\n        },\r\n      ],\r\n      house_light: [\r\n        {\r\n          delay: 0.020,\r\n          duration: 0.2,\r\n          from: { alpha: 0 },\r\n          to: { alpha: 1 },\r\n        },\r\n        {\r\n          ...fixedPosA(housePosY),\r\n        },\r\n      ],\r\n      tree: [\r\n        {\r\n          delay: 0.2,\r\n          duration: 0.3,\r\n          from: { alpha: 1 },\r\n          to: { alpha: 0 },\r\n        },\r\n        {\r\n          ...fixedPosA(treePosY),\r\n        },\r\n      ],\r\n      tree_light: [\r\n        {\r\n          delay: 0.2,\r\n          duration: 0.3,\r\n          from: { alpha: 0 },\r\n          to: { alpha: 1 },\r\n        },\r\n        {\r\n          ...fixedPosA(treePosY),\r\n        },\r\n      ],\r\n    }\r\n    return animations\r\n  }\r\n\r\n  /**\r\n   * 获取文本\r\n   */\r\n  const getTexts = () => {\r\n    const texts = {\r\n      first: {\r\n        text: 'first文本',\r\n        position: { x: 0.5, y: 0.5 },\r\n        anchor: 'center',\r\n        options: {\r\n          fontFamily: 'Arial',\r\n          fontSize: (window.innerWidth / 375) * 18,\r\n          fill: 0xfb833f,\r\n          align: 'center',\r\n        },\r\n      },\r\n      two: {\r\n        text: 'two文本',\r\n        link: 'https://www.baidu.com',\r\n        position: {\r\n          x: 0.5,\r\n          y: 0.5,\r\n        },\r\n        anchor: 'center',\r\n        options: {\r\n          fontFamily: 'Arial',\r\n          fontSize: (window.innerWidth / 375) * 18,\r\n          fill: 0xb833f,\r\n          align: 'center',\r\n        },\r\n      },\r\n    }\r\n\r\n    return texts\r\n  }\r\n\r\n  /**\r\n   * 文本动画\r\n   */\r\n  const getTextsAnimations = () => {\r\n    const animations = {\r\n      first: [\r\n        {\r\n          delay: 0,\r\n          duration: 1,\r\n          from: { y: window.innerHeight * 0.5 },\r\n          to: { repeat: -1, ease: 'easeOut', y: window.innerHeight * 0.48 },\r\n        },\r\n        {\r\n          delay: 0,\r\n          duration: 0.1,\r\n          to: { alpha: 0 },\r\n        },\r\n      ],\r\n      two: [\r\n        {\r\n          delay: 0,\r\n          duration: 0.3,\r\n          from: { y: 100, alpha: 1 },\r\n          to: { y: 0, alpha: 0 },\r\n        },\r\n      ],\r\n    }\r\n\r\n    return animations\r\n  }\r\n\r\n  const [progress, setProgress] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const init = () => {\r\n      const longTake = new LongTake({\r\n        container: document.getElementById('home'),\r\n        resource: getReSource(),\r\n        touchOptions: {\r\n          touch: '#home',\r\n          initialValue: 0,\r\n          sensitivity: 0.5,\r\n          maxSpeed: 0.5,\r\n        },\r\n        sprites: getSprites(),\r\n        spritesAnimations: getSpritesAnimations(),\r\n        texts: getTexts(),\r\n        textsAnimations: getTextsAnimations(),\r\n        bgSprites: getBgSprites(), // 背景图片\r\n      })\r\n      longTake.on('loadProgress', (progress) => {\r\n        // console.log(`加载进度: ${progress}`)\r\n        setProgress(progress)\r\n      })\r\n      longTake.on('loadDone', () => {\r\n        // console.log('加载完毕')\r\n      })\r\n      longTake.on('progress', (progress) => {\r\n        // console.log(`当前进度: ${progress}`)\r\n      })\r\n    }\r\n    init()\r\n  }, [])\r\n\r\n  return <div id='home'>{progress !== 100 && <LoadingComponent progress={progress} />}</div>\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}