{"version":3,"sources":["components/LoadingComponent.js","App.js","reportWebVitals.js","index.js"],"names":["LoadingComponent","progress","className","Math","round","SnakePoints","points","x","y","scale","draw","g","clear","lineStyle","moveTo","i","length","lineTo","beginFill","drawCircle","endFill","Snake","dx","dy","useRef","initialPoints","useMemo","push","PIXI","useState","showPoints","setShowPoints","setPoints","go","setGo","useTick","delta","iter","current","np","j","cos","sin","useEffect","setTimeout","interactive","pointerdown","show","image","reducer","_","data","Bunny","useReducer","motion","update","type","rotation","PI","anchor","App","setProgress","window","screen","width","height","w","h","position","setPosition","startPoint","setStartPoint","textOptions","setTextOptions","acceleration","setAcceleration","loader","add","load","onStart","onError","onLoad","onProgress","value","onComplete","error","console","options","backgroundAlpha","pointermove","values","global","speed","up","down","text","style","align","fontFamily","fontSize","fontWeight","fill","stroke","strokeThickness","letterSpacing","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","dropShadowDistance","wordWrap","wordWrapWidth","log","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d3f9f3c.chunk.js","sourcesContent":["import './style.css'\r\n\r\nconst LoadingComponent = ({ progress }) => {\r\n  return <div className='container'>{Math.round(+progress)}</div>\r\n}\r\n\r\nexport default LoadingComponent\r\n","import './App.css'\r\nimport { useReducer, useRef, useMemo, useState, useEffect } from 'react'\r\nimport { Stage, Container, SimpleRope, Graphics, Sprite, useTick, Text } from '@inlet/react-pixi'\r\nimport * as PIXI from 'pixi.js'\r\nimport LoadingComponent from './components/LoadingComponent'\r\n\r\n/** 蛇 */\r\nconst SnakePoints = ({ points, x, y }) => {\r\n  return (\r\n    <Graphics\r\n      x={x}\r\n      y={y}\r\n      scale={0.4}\r\n      draw={(g) => {\r\n        g.clear()\r\n        g.lineStyle(2, 0xffc2c2)\r\n        g.moveTo(points[0].x, points[0].y)\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n          g.lineTo(points[i].x, points[i].y)\r\n        }\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n          g.beginFill(0xff0022)\r\n          g.drawCircle(points[i].x, points[i].y, 10)\r\n          g.endFill()\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\nconst Snake = ({ dx, dy }) => {\r\n  const ropeLength = 45\r\n  const i = useRef(0)\r\n\r\n  const initialPoints = useMemo(() => {\r\n    const points = []\r\n    for (let i = 0; i < 25; i++) points.push(new PIXI.Point(i * ropeLength, 0))\r\n    return points\r\n  }, [])\r\n\r\n  const [showPoints, setShowPoints] = useState(true)\r\n\r\n  const [points, setPoints] = useState(initialPoints)\r\n\r\n  const [go, setGo] = useState(-500)\r\n\r\n  useTick((delta) => {\r\n    const iter = (i.current += 0.1 * delta)\r\n    const np = [...points]\r\n\r\n    for (let j = 0; j < np.length; j++) {\r\n      np[j].x = j * ropeLength + Math.cos(j * 0.3 + iter) * 20\r\n      np[j].y = Math.sin(j * 0.5 + iter) * 30\r\n    }\r\n    setPoints(np)\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (go > 500) {\r\n      setTimeout(() => {\r\n        setGo(-500)\r\n      }, 10)\r\n    } else {\r\n      setTimeout(() => {\r\n        setGo(go + 1)\r\n      }, 10)\r\n    }\r\n  }, [go])\r\n\r\n  return (\r\n    <Container interactive={true} pointerdown={() => setShowPoints((show) => !show)}>\r\n      <SimpleRope image='https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/snake.png' points={points} scale={0.4} x={go} y={160} />\r\n      {showPoints && <SnakePoints points={points} x={go} y={160} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\n/** 熊 */\r\nconst reducer = (_, { data }) => data\r\nconst Bunny = () => {\r\n  const [motion, update] = useReducer(reducer)\r\n  const iter = useRef(0)\r\n  useTick((delta) => {\r\n    const i = (iter.current += 0.03 * delta)\r\n    update({\r\n      type: 'update',\r\n      data: {\r\n        x: Math.sin(i) * 100 + 200,\r\n        y: Math.sin(i / 1.5) * 100 + 200,\r\n        rotation: Math.sin(i) * Math.PI,\r\n        anchor: Math.sin(i / 2),\r\n      },\r\n    })\r\n  })\r\n  return <Sprite image='https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png' {...motion} />\r\n}\r\n\r\n/** 进度条 */\r\n\r\nconst App = () => {\r\n  const [progress, setProgress] = useState(0)\r\n\r\n  const { width, height } = window.screen\r\n\r\n  const w = (height / 300) * 500\r\n  const h = height\r\n  const [position, setPosition] = useState({\r\n    w,\r\n    h: h / 2,\r\n  })\r\n  const [startPoint, setStartPoint] = useState({\r\n    x: w,\r\n    y: h,\r\n  })\r\n  const [textOptions, setTextOptions] = useState({\r\n    w,\r\n    h,\r\n  })\r\n  const [acceleration, setAcceleration] = useState({\r\n    dx: 0,\r\n    dy: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    try {\r\n      let loader = new PIXI.Loader()\r\n      loader\r\n        .add([\r\n          'https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/placeholder.png',\r\n          'https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png',\r\n          'https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/snake.png',\r\n          'https://images.unsplash.com/photo-1580087256394-dc596e1c8f4f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80',\r\n          'https://images.unsplash.com/photo-1624542316132-da49c1000e67?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\r\n          'https://images.unsplash.com/photo-1624649679167-46277a445e8f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80',\r\n        ])\r\n        .load(() => {\r\n          \r\n        })\r\n\r\n      loader.onStart.add(() => {\r\n\r\n      }) // Called when a resource starts loading.\r\n      loader.onError.add(() => {\r\n\r\n      }) // Called when a resource fails to load.\r\n      loader.onLoad.add(() => {\r\n\r\n      }) // Called when a resource successfully loads.\r\n      loader.onProgress.add((value) => {\r\n        const { progress } = value\r\n        setProgress(progress)\r\n      }) // Called when a resource finishes loading (success or fail).\r\n      loader.onComplete.add(() => {\r\n\r\n      })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setTextOptions({\r\n      x: (width / 360) * 180,\r\n      y: (height / 640) * 130,\r\n    })\r\n  }, [width, height])\r\n\r\n  if (progress !== 100) {\r\n    return <LoadingComponent progress={progress} />\r\n  }\r\n\r\n  return (\r\n    <Stage width={w} height={h} options={{ backgroundAlpha: 0 }}>\r\n      <Container\r\n        interactive={true}\r\n        pointermove={(values) => {\r\n          const {\r\n            data: {\r\n              global: { x, y },\r\n            },\r\n          } = values\r\n          const speed = {\r\n            up: 4,\r\n            down: -4,\r\n          }\r\n          if (position.h >= h / 2) {\r\n            speed.up = 0\r\n          }\r\n          const dx = x > startPoint.x ? speed.up : speed.down\r\n          const dy = y > startPoint.y ? speed.up : speed.down\r\n          setAcceleration({\r\n            dx,\r\n            dy,\r\n          })\r\n          setPosition({\r\n            w: position.w + dx,\r\n            h: position.h + dy,\r\n          })\r\n          setStartPoint({\r\n            x,\r\n            y,\r\n          })\r\n        }}\r\n      >\r\n        <Sprite image='https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/placeholder.png' width={w} height={h} anchor={0.5} y={position.h}>\r\n          <Text\r\n            text={position.h}\r\n            anchor={0.5}\r\n            x={textOptions.x}\r\n            y={position.h / 2}\r\n            style={\r\n              new PIXI.TextStyle({\r\n                align: 'center',\r\n                fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n                fontSize: ((width * height) / (640 * 360)) * 20,\r\n                fontWeight: 400,\r\n                fill: ['#ffffff', '#00ff99'], // gradient\r\n                stroke: '#01d27e',\r\n                strokeThickness: 5,\r\n                letterSpacing: 10,\r\n                dropShadow: true,\r\n                dropShadowColor: '#ccced2',\r\n                dropShadowBlur: 4,\r\n                dropShadowAngle: Math.PI / 6,\r\n                dropShadowDistance: 6,\r\n                wordWrap: true,\r\n                wordWrapWidth: 600,\r\n              })\r\n            }\r\n          />\r\n          <Bunny />\r\n          <Container\r\n            interactive={true}\r\n            pointerdown={(values) => {\r\n              console.log('test:', values)\r\n              alert('click me')\r\n            }}\r\n          >\r\n            <Sprite anchor={0.5} x={50} y={position.h + 2} image='https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png' />\r\n          </Container>\r\n          <Sprite anchor={0.5} x={100} y={400} image='https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png' />\r\n          <Sprite anchor={0.5} x={175} y={405} image='https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png' />\r\n          <Snake dx={acceleration.dx} dy={acceleration.dy} />\r\n        </Sprite>\r\n      </Container>\r\n    </Stage>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}